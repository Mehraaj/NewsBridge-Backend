
/**
 * Client
**/

import * as runtime from './runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model article_entities
 * 
 */
export type article_entities = $Result.DefaultSelection<Prisma.$article_entitiesPayload>
/**
 * Model articles
 * 
 */
export type articles = $Result.DefaultSelection<Prisma.$articlesPayload>
/**
 * Model entities
 * 
 */
export type entities = $Result.DefaultSelection<Prisma.$entitiesPayload>
/**
 * Model user_article_views
 * 
 */
export type user_article_views = $Result.DefaultSelection<Prisma.$user_article_viewsPayload>
/**
 * Model public_users
 * 
 */
export type public_users = $Result.DefaultSelection<Prisma.$public_usersPayload>
/**
 * Model weekly_forecasts
 * 
 */
export type weekly_forecasts = $Result.DefaultSelection<Prisma.$weekly_forecastsPayload>
/**
 * Model article_tags
 * 
 */
export type article_tags = $Result.DefaultSelection<Prisma.$article_tagsPayload>
/**
 * Model bookmark_folders
 * 
 */
export type bookmark_folders = $Result.DefaultSelection<Prisma.$bookmark_foldersPayload>
/**
 * Model bookmarks
 * 
 */
export type bookmarks = $Result.DefaultSelection<Prisma.$bookmarksPayload>
/**
 * Model geo_events
 * 
 */
export type geo_events = $Result.DefaultSelection<Prisma.$geo_eventsPayload>
/**
 * Model likes
 * 
 */
export type likes = $Result.DefaultSelection<Prisma.$likesPayload>
/**
 * Model tags
 * 
 */
export type tags = $Result.DefaultSelection<Prisma.$tagsPayload>
/**
 * Model views
 * 
 */
export type views = $Result.DefaultSelection<Prisma.$viewsPayload>
/**
 * Model audit_log_entries
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type audit_log_entries = $Result.DefaultSelection<Prisma.$audit_log_entriesPayload>
/**
 * Model flow_state
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type flow_state = $Result.DefaultSelection<Prisma.$flow_statePayload>
/**
 * Model identities
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type identities = $Result.DefaultSelection<Prisma.$identitiesPayload>
/**
 * Model instances
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type instances = $Result.DefaultSelection<Prisma.$instancesPayload>
/**
 * Model mfa_amr_claims
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type mfa_amr_claims = $Result.DefaultSelection<Prisma.$mfa_amr_claimsPayload>
/**
 * Model mfa_challenges
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type mfa_challenges = $Result.DefaultSelection<Prisma.$mfa_challengesPayload>
/**
 * Model mfa_factors
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type mfa_factors = $Result.DefaultSelection<Prisma.$mfa_factorsPayload>
/**
 * Model one_time_tokens
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type one_time_tokens = $Result.DefaultSelection<Prisma.$one_time_tokensPayload>
/**
 * Model refresh_tokens
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type refresh_tokens = $Result.DefaultSelection<Prisma.$refresh_tokensPayload>
/**
 * Model saml_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type saml_providers = $Result.DefaultSelection<Prisma.$saml_providersPayload>
/**
 * Model saml_relay_states
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type saml_relay_states = $Result.DefaultSelection<Prisma.$saml_relay_statesPayload>
/**
 * Model schema_migrations
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type schema_migrations = $Result.DefaultSelection<Prisma.$schema_migrationsPayload>
/**
 * Model sessions
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 */
export type sessions = $Result.DefaultSelection<Prisma.$sessionsPayload>
/**
 * Model sso_domains
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type sso_domains = $Result.DefaultSelection<Prisma.$sso_domainsPayload>
/**
 * Model sso_providers
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type sso_providers = $Result.DefaultSelection<Prisma.$sso_providersPayload>
/**
 * Model users
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 * This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
 * This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
 * This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
 */
export type users = $Result.DefaultSelection<Prisma.$usersPayload>
/**
 * Model public_sessions
 * 
 */
export type public_sessions = $Result.DefaultSelection<Prisma.$public_sessionsPayload>
/**
 * Model book_articles
 * 
 */
export type book_articles = $Result.DefaultSelection<Prisma.$book_articlesPayload>
/**
 * Model books
 * 
 */
export type books = $Result.DefaultSelection<Prisma.$booksPayload>
/**
 * Model spatial_ref_sys
 * This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
 */
export type spatial_ref_sys = $Result.DefaultSelection<Prisma.$spatial_ref_sysPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const aal_level: {
  aal1: 'aal1',
  aal2: 'aal2',
  aal3: 'aal3'
};

export type aal_level = (typeof aal_level)[keyof typeof aal_level]


export const code_challenge_method: {
  s256: 's256',
  plain: 'plain'
};

export type code_challenge_method = (typeof code_challenge_method)[keyof typeof code_challenge_method]


export const factor_status: {
  unverified: 'unverified',
  verified: 'verified'
};

export type factor_status = (typeof factor_status)[keyof typeof factor_status]


export const factor_type: {
  totp: 'totp',
  webauthn: 'webauthn',
  phone: 'phone'
};

export type factor_type = (typeof factor_type)[keyof typeof factor_type]


export const one_time_token_type: {
  confirmation_token: 'confirmation_token',
  reauthentication_token: 'reauthentication_token',
  recovery_token: 'recovery_token',
  email_change_token_new: 'email_change_token_new',
  email_change_token_current: 'email_change_token_current',
  phone_change_token: 'phone_change_token'
};

export type one_time_token_type = (typeof one_time_token_type)[keyof typeof one_time_token_type]


export const sentiment_type: {
  positive: 'positive',
  negative: 'negative',
  neutral: 'neutral'
};

export type sentiment_type = (typeof sentiment_type)[keyof typeof sentiment_type]

}

export type aal_level = $Enums.aal_level

export const aal_level: typeof $Enums.aal_level

export type code_challenge_method = $Enums.code_challenge_method

export const code_challenge_method: typeof $Enums.code_challenge_method

export type factor_status = $Enums.factor_status

export const factor_status: typeof $Enums.factor_status

export type factor_type = $Enums.factor_type

export const factor_type: typeof $Enums.factor_type

export type one_time_token_type = $Enums.one_time_token_type

export const one_time_token_type: typeof $Enums.one_time_token_type

export type sentiment_type = $Enums.sentiment_type

export const sentiment_type: typeof $Enums.sentiment_type

/**
 * ##  Prisma Client ʲˢ
 *
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Article_entities
 * const article_entities = await prisma.article_entities.findMany()
 * ```
 *
 *
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   *
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Article_entities
   * const article_entities = await prisma.article_entities.findMany()
   * ```
   *
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): PrismaClient;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   *
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb<ClientOptions>, ExtArgs, $Utils.Call<Prisma.TypeMapCb<ClientOptions>, {
    extArgs: ExtArgs
  }>>

      /**
   * `prisma.article_entities`: Exposes CRUD operations for the **article_entities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Article_entities
    * const article_entities = await prisma.article_entities.findMany()
    * ```
    */
  get article_entities(): Prisma.article_entitiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.articles`: Exposes CRUD operations for the **articles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Articles
    * const articles = await prisma.articles.findMany()
    * ```
    */
  get articles(): Prisma.articlesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.entities`: Exposes CRUD operations for the **entities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Entities
    * const entities = await prisma.entities.findMany()
    * ```
    */
  get entities(): Prisma.entitiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.user_article_views`: Exposes CRUD operations for the **user_article_views** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_article_views
    * const user_article_views = await prisma.user_article_views.findMany()
    * ```
    */
  get user_article_views(): Prisma.user_article_viewsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.public_users`: Exposes CRUD operations for the **public_users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Public_users
    * const public_users = await prisma.public_users.findMany()
    * ```
    */
  get public_users(): Prisma.public_usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.weekly_forecasts`: Exposes CRUD operations for the **weekly_forecasts** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Weekly_forecasts
    * const weekly_forecasts = await prisma.weekly_forecasts.findMany()
    * ```
    */
  get weekly_forecasts(): Prisma.weekly_forecastsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.article_tags`: Exposes CRUD operations for the **article_tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Article_tags
    * const article_tags = await prisma.article_tags.findMany()
    * ```
    */
  get article_tags(): Prisma.article_tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bookmark_folders`: Exposes CRUD operations for the **bookmark_folders** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bookmark_folders
    * const bookmark_folders = await prisma.bookmark_folders.findMany()
    * ```
    */
  get bookmark_folders(): Prisma.bookmark_foldersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.bookmarks`: Exposes CRUD operations for the **bookmarks** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Bookmarks
    * const bookmarks = await prisma.bookmarks.findMany()
    * ```
    */
  get bookmarks(): Prisma.bookmarksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.geo_events`: Exposes CRUD operations for the **geo_events** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Geo_events
    * const geo_events = await prisma.geo_events.findMany()
    * ```
    */
  get geo_events(): Prisma.geo_eventsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.likes`: Exposes CRUD operations for the **likes** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Likes
    * const likes = await prisma.likes.findMany()
    * ```
    */
  get likes(): Prisma.likesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.tags`: Exposes CRUD operations for the **tags** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Tags
    * const tags = await prisma.tags.findMany()
    * ```
    */
  get tags(): Prisma.tagsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.views`: Exposes CRUD operations for the **views** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Views
    * const views = await prisma.views.findMany()
    * ```
    */
  get views(): Prisma.viewsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.audit_log_entries`: Exposes CRUD operations for the **audit_log_entries** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Audit_log_entries
    * const audit_log_entries = await prisma.audit_log_entries.findMany()
    * ```
    */
  get audit_log_entries(): Prisma.audit_log_entriesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.flow_state`: Exposes CRUD operations for the **flow_state** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Flow_states
    * const flow_states = await prisma.flow_state.findMany()
    * ```
    */
  get flow_state(): Prisma.flow_stateDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.identities`: Exposes CRUD operations for the **identities** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Identities
    * const identities = await prisma.identities.findMany()
    * ```
    */
  get identities(): Prisma.identitiesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.instances`: Exposes CRUD operations for the **instances** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Instances
    * const instances = await prisma.instances.findMany()
    * ```
    */
  get instances(): Prisma.instancesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mfa_amr_claims`: Exposes CRUD operations for the **mfa_amr_claims** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_amr_claims
    * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany()
    * ```
    */
  get mfa_amr_claims(): Prisma.mfa_amr_claimsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mfa_challenges`: Exposes CRUD operations for the **mfa_challenges** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_challenges
    * const mfa_challenges = await prisma.mfa_challenges.findMany()
    * ```
    */
  get mfa_challenges(): Prisma.mfa_challengesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.mfa_factors`: Exposes CRUD operations for the **mfa_factors** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Mfa_factors
    * const mfa_factors = await prisma.mfa_factors.findMany()
    * ```
    */
  get mfa_factors(): Prisma.mfa_factorsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.one_time_tokens`: Exposes CRUD operations for the **one_time_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more One_time_tokens
    * const one_time_tokens = await prisma.one_time_tokens.findMany()
    * ```
    */
  get one_time_tokens(): Prisma.one_time_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.refresh_tokens`: Exposes CRUD operations for the **refresh_tokens** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Refresh_tokens
    * const refresh_tokens = await prisma.refresh_tokens.findMany()
    * ```
    */
  get refresh_tokens(): Prisma.refresh_tokensDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.saml_providers`: Exposes CRUD operations for the **saml_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Saml_providers
    * const saml_providers = await prisma.saml_providers.findMany()
    * ```
    */
  get saml_providers(): Prisma.saml_providersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.saml_relay_states`: Exposes CRUD operations for the **saml_relay_states** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Saml_relay_states
    * const saml_relay_states = await prisma.saml_relay_states.findMany()
    * ```
    */
  get saml_relay_states(): Prisma.saml_relay_statesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.schema_migrations`: Exposes CRUD operations for the **schema_migrations** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Schema_migrations
    * const schema_migrations = await prisma.schema_migrations.findMany()
    * ```
    */
  get schema_migrations(): Prisma.schema_migrationsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sessions`: Exposes CRUD operations for the **sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sessions
    * const sessions = await prisma.sessions.findMany()
    * ```
    */
  get sessions(): Prisma.sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sso_domains`: Exposes CRUD operations for the **sso_domains** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_domains
    * const sso_domains = await prisma.sso_domains.findMany()
    * ```
    */
  get sso_domains(): Prisma.sso_domainsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.sso_providers`: Exposes CRUD operations for the **sso_providers** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sso_providers
    * const sso_providers = await prisma.sso_providers.findMany()
    * ```
    */
  get sso_providers(): Prisma.sso_providersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.users`: Exposes CRUD operations for the **users** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.users.findMany()
    * ```
    */
  get users(): Prisma.usersDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.public_sessions`: Exposes CRUD operations for the **public_sessions** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Public_sessions
    * const public_sessions = await prisma.public_sessions.findMany()
    * ```
    */
  get public_sessions(): Prisma.public_sessionsDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.book_articles`: Exposes CRUD operations for the **book_articles** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Book_articles
    * const book_articles = await prisma.book_articles.findMany()
    * ```
    */
  get book_articles(): Prisma.book_articlesDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.books`: Exposes CRUD operations for the **books** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Books
    * const books = await prisma.books.findMany()
    * ```
    */
  get books(): Prisma.booksDelegate<ExtArgs, ClientOptions>;

  /**
   * `prisma.spatial_ref_sys`: Exposes CRUD operations for the **spatial_ref_sys** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Spatial_ref_sys
    * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany()
    * ```
    */
  get spatial_ref_sys(): Prisma.spatial_ref_sysDelegate<ExtArgs, ClientOptions>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 6.9.0
   * Query Engine version: 81e4af48011447c3cc503a190e86995b66d2a28e
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    *
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    *
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? P : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    article_entities: 'article_entities',
    articles: 'articles',
    entities: 'entities',
    user_article_views: 'user_article_views',
    public_users: 'public_users',
    weekly_forecasts: 'weekly_forecasts',
    article_tags: 'article_tags',
    bookmark_folders: 'bookmark_folders',
    bookmarks: 'bookmarks',
    geo_events: 'geo_events',
    likes: 'likes',
    tags: 'tags',
    views: 'views',
    audit_log_entries: 'audit_log_entries',
    flow_state: 'flow_state',
    identities: 'identities',
    instances: 'instances',
    mfa_amr_claims: 'mfa_amr_claims',
    mfa_challenges: 'mfa_challenges',
    mfa_factors: 'mfa_factors',
    one_time_tokens: 'one_time_tokens',
    refresh_tokens: 'refresh_tokens',
    saml_providers: 'saml_providers',
    saml_relay_states: 'saml_relay_states',
    schema_migrations: 'schema_migrations',
    sessions: 'sessions',
    sso_domains: 'sso_domains',
    sso_providers: 'sso_providers',
    users: 'users',
    public_sessions: 'public_sessions',
    book_articles: 'book_articles',
    books: 'books',
    spatial_ref_sys: 'spatial_ref_sys'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb<ClientOptions = {}> extends $Utils.Fn<{extArgs: $Extensions.InternalArgs }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], ClientOptions extends { omit: infer OmitOptions } ? OmitOptions : {}>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> = {
    globalOmitOptions: {
      omit: GlobalOmitOptions
    }
    meta: {
      modelProps: "article_entities" | "articles" | "entities" | "user_article_views" | "public_users" | "weekly_forecasts" | "article_tags" | "bookmark_folders" | "bookmarks" | "geo_events" | "likes" | "tags" | "views" | "audit_log_entries" | "flow_state" | "identities" | "instances" | "mfa_amr_claims" | "mfa_challenges" | "mfa_factors" | "one_time_tokens" | "refresh_tokens" | "saml_providers" | "saml_relay_states" | "schema_migrations" | "sessions" | "sso_domains" | "sso_providers" | "users" | "public_sessions" | "book_articles" | "books" | "spatial_ref_sys"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      article_entities: {
        payload: Prisma.$article_entitiesPayload<ExtArgs>
        fields: Prisma.article_entitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.article_entitiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.article_entitiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>
          }
          findFirst: {
            args: Prisma.article_entitiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.article_entitiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>
          }
          findMany: {
            args: Prisma.article_entitiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>[]
          }
          create: {
            args: Prisma.article_entitiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>
          }
          createMany: {
            args: Prisma.article_entitiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.article_entitiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>[]
          }
          delete: {
            args: Prisma.article_entitiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>
          }
          update: {
            args: Prisma.article_entitiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>
          }
          deleteMany: {
            args: Prisma.article_entitiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.article_entitiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.article_entitiesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>[]
          }
          upsert: {
            args: Prisma.article_entitiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_entitiesPayload>
          }
          aggregate: {
            args: Prisma.Article_entitiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticle_entities>
          }
          groupBy: {
            args: Prisma.article_entitiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Article_entitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.article_entitiesCountArgs<ExtArgs>
            result: $Utils.Optional<Article_entitiesCountAggregateOutputType> | number
          }
        }
      }
      articles: {
        payload: Prisma.$articlesPayload<ExtArgs>
        fields: Prisma.articlesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.articlesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.articlesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>
          }
          findFirst: {
            args: Prisma.articlesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.articlesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>
          }
          findMany: {
            args: Prisma.articlesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>[]
          }
          create: {
            args: Prisma.articlesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>
          }
          createMany: {
            args: Prisma.articlesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.articlesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>[]
          }
          delete: {
            args: Prisma.articlesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>
          }
          update: {
            args: Prisma.articlesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>
          }
          deleteMany: {
            args: Prisma.articlesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.articlesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.articlesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>[]
          }
          upsert: {
            args: Prisma.articlesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$articlesPayload>
          }
          aggregate: {
            args: Prisma.ArticlesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticles>
          }
          groupBy: {
            args: Prisma.articlesGroupByArgs<ExtArgs>
            result: $Utils.Optional<ArticlesGroupByOutputType>[]
          }
          count: {
            args: Prisma.articlesCountArgs<ExtArgs>
            result: $Utils.Optional<ArticlesCountAggregateOutputType> | number
          }
        }
      }
      entities: {
        payload: Prisma.$entitiesPayload<ExtArgs>
        fields: Prisma.entitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.entitiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.entitiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          findFirst: {
            args: Prisma.entitiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.entitiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          findMany: {
            args: Prisma.entitiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>[]
          }
          create: {
            args: Prisma.entitiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          createMany: {
            args: Prisma.entitiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.entitiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>[]
          }
          delete: {
            args: Prisma.entitiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          update: {
            args: Prisma.entitiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          deleteMany: {
            args: Prisma.entitiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.entitiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.entitiesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>[]
          }
          upsert: {
            args: Prisma.entitiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$entitiesPayload>
          }
          aggregate: {
            args: Prisma.EntitiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateEntities>
          }
          groupBy: {
            args: Prisma.entitiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<EntitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.entitiesCountArgs<ExtArgs>
            result: $Utils.Optional<EntitiesCountAggregateOutputType> | number
          }
        }
      }
      user_article_views: {
        payload: Prisma.$user_article_viewsPayload<ExtArgs>
        fields: Prisma.user_article_viewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_article_viewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_article_viewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>
          }
          findFirst: {
            args: Prisma.user_article_viewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_article_viewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>
          }
          findMany: {
            args: Prisma.user_article_viewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>[]
          }
          create: {
            args: Prisma.user_article_viewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>
          }
          createMany: {
            args: Prisma.user_article_viewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.user_article_viewsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>[]
          }
          delete: {
            args: Prisma.user_article_viewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>
          }
          update: {
            args: Prisma.user_article_viewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>
          }
          deleteMany: {
            args: Prisma.user_article_viewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_article_viewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.user_article_viewsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>[]
          }
          upsert: {
            args: Prisma.user_article_viewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_article_viewsPayload>
          }
          aggregate: {
            args: Prisma.User_article_viewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_article_views>
          }
          groupBy: {
            args: Prisma.user_article_viewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_article_viewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_article_viewsCountArgs<ExtArgs>
            result: $Utils.Optional<User_article_viewsCountAggregateOutputType> | number
          }
        }
      }
      public_users: {
        payload: Prisma.$public_usersPayload<ExtArgs>
        fields: Prisma.public_usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.public_usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.public_usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>
          }
          findFirst: {
            args: Prisma.public_usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.public_usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>
          }
          findMany: {
            args: Prisma.public_usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>[]
          }
          create: {
            args: Prisma.public_usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>
          }
          createMany: {
            args: Prisma.public_usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.public_usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>[]
          }
          delete: {
            args: Prisma.public_usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>
          }
          update: {
            args: Prisma.public_usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>
          }
          deleteMany: {
            args: Prisma.public_usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.public_usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.public_usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>[]
          }
          upsert: {
            args: Prisma.public_usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_usersPayload>
          }
          aggregate: {
            args: Prisma.Public_usersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublic_users>
          }
          groupBy: {
            args: Prisma.public_usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Public_usersGroupByOutputType>[]
          }
          count: {
            args: Prisma.public_usersCountArgs<ExtArgs>
            result: $Utils.Optional<Public_usersCountAggregateOutputType> | number
          }
        }
      }
      weekly_forecasts: {
        payload: Prisma.$weekly_forecastsPayload<ExtArgs>
        fields: Prisma.weekly_forecastsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.weekly_forecastsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.weekly_forecastsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>
          }
          findFirst: {
            args: Prisma.weekly_forecastsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.weekly_forecastsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>
          }
          findMany: {
            args: Prisma.weekly_forecastsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>[]
          }
          create: {
            args: Prisma.weekly_forecastsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>
          }
          createMany: {
            args: Prisma.weekly_forecastsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.weekly_forecastsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>[]
          }
          delete: {
            args: Prisma.weekly_forecastsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>
          }
          update: {
            args: Prisma.weekly_forecastsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>
          }
          deleteMany: {
            args: Prisma.weekly_forecastsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.weekly_forecastsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.weekly_forecastsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>[]
          }
          upsert: {
            args: Prisma.weekly_forecastsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$weekly_forecastsPayload>
          }
          aggregate: {
            args: Prisma.Weekly_forecastsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWeekly_forecasts>
          }
          groupBy: {
            args: Prisma.weekly_forecastsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Weekly_forecastsGroupByOutputType>[]
          }
          count: {
            args: Prisma.weekly_forecastsCountArgs<ExtArgs>
            result: $Utils.Optional<Weekly_forecastsCountAggregateOutputType> | number
          }
        }
      }
      article_tags: {
        payload: Prisma.$article_tagsPayload<ExtArgs>
        fields: Prisma.article_tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.article_tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.article_tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>
          }
          findFirst: {
            args: Prisma.article_tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.article_tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>
          }
          findMany: {
            args: Prisma.article_tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>[]
          }
          create: {
            args: Prisma.article_tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>
          }
          createMany: {
            args: Prisma.article_tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.article_tagsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>[]
          }
          delete: {
            args: Prisma.article_tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>
          }
          update: {
            args: Prisma.article_tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>
          }
          deleteMany: {
            args: Prisma.article_tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.article_tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.article_tagsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>[]
          }
          upsert: {
            args: Prisma.article_tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$article_tagsPayload>
          }
          aggregate: {
            args: Prisma.Article_tagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateArticle_tags>
          }
          groupBy: {
            args: Prisma.article_tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Article_tagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.article_tagsCountArgs<ExtArgs>
            result: $Utils.Optional<Article_tagsCountAggregateOutputType> | number
          }
        }
      }
      bookmark_folders: {
        payload: Prisma.$bookmark_foldersPayload<ExtArgs>
        fields: Prisma.bookmark_foldersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bookmark_foldersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bookmark_foldersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>
          }
          findFirst: {
            args: Prisma.bookmark_foldersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bookmark_foldersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>
          }
          findMany: {
            args: Prisma.bookmark_foldersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>[]
          }
          create: {
            args: Prisma.bookmark_foldersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>
          }
          createMany: {
            args: Prisma.bookmark_foldersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.bookmark_foldersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>[]
          }
          delete: {
            args: Prisma.bookmark_foldersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>
          }
          update: {
            args: Prisma.bookmark_foldersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>
          }
          deleteMany: {
            args: Prisma.bookmark_foldersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bookmark_foldersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.bookmark_foldersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>[]
          }
          upsert: {
            args: Prisma.bookmark_foldersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmark_foldersPayload>
          }
          aggregate: {
            args: Prisma.Bookmark_foldersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBookmark_folders>
          }
          groupBy: {
            args: Prisma.bookmark_foldersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Bookmark_foldersGroupByOutputType>[]
          }
          count: {
            args: Prisma.bookmark_foldersCountArgs<ExtArgs>
            result: $Utils.Optional<Bookmark_foldersCountAggregateOutputType> | number
          }
        }
      }
      bookmarks: {
        payload: Prisma.$bookmarksPayload<ExtArgs>
        fields: Prisma.bookmarksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.bookmarksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.bookmarksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>
          }
          findFirst: {
            args: Prisma.bookmarksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.bookmarksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>
          }
          findMany: {
            args: Prisma.bookmarksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>[]
          }
          create: {
            args: Prisma.bookmarksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>
          }
          createMany: {
            args: Prisma.bookmarksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.bookmarksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>[]
          }
          delete: {
            args: Prisma.bookmarksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>
          }
          update: {
            args: Prisma.bookmarksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>
          }
          deleteMany: {
            args: Prisma.bookmarksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.bookmarksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.bookmarksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>[]
          }
          upsert: {
            args: Prisma.bookmarksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$bookmarksPayload>
          }
          aggregate: {
            args: Prisma.BookmarksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBookmarks>
          }
          groupBy: {
            args: Prisma.bookmarksGroupByArgs<ExtArgs>
            result: $Utils.Optional<BookmarksGroupByOutputType>[]
          }
          count: {
            args: Prisma.bookmarksCountArgs<ExtArgs>
            result: $Utils.Optional<BookmarksCountAggregateOutputType> | number
          }
        }
      }
      geo_events: {
        payload: Prisma.$geo_eventsPayload<ExtArgs>
        fields: Prisma.geo_eventsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.geo_eventsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.geo_eventsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>
          }
          findFirst: {
            args: Prisma.geo_eventsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.geo_eventsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>
          }
          findMany: {
            args: Prisma.geo_eventsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>[]
          }
          create: {
            args: Prisma.geo_eventsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>
          }
          createMany: {
            args: Prisma.geo_eventsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.geo_eventsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>[]
          }
          delete: {
            args: Prisma.geo_eventsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>
          }
          update: {
            args: Prisma.geo_eventsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>
          }
          deleteMany: {
            args: Prisma.geo_eventsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.geo_eventsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.geo_eventsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>[]
          }
          upsert: {
            args: Prisma.geo_eventsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$geo_eventsPayload>
          }
          aggregate: {
            args: Prisma.Geo_eventsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateGeo_events>
          }
          groupBy: {
            args: Prisma.geo_eventsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Geo_eventsGroupByOutputType>[]
          }
          count: {
            args: Prisma.geo_eventsCountArgs<ExtArgs>
            result: $Utils.Optional<Geo_eventsCountAggregateOutputType> | number
          }
        }
      }
      likes: {
        payload: Prisma.$likesPayload<ExtArgs>
        fields: Prisma.likesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.likesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.likesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          findFirst: {
            args: Prisma.likesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.likesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          findMany: {
            args: Prisma.likesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>[]
          }
          create: {
            args: Prisma.likesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          createMany: {
            args: Prisma.likesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.likesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>[]
          }
          delete: {
            args: Prisma.likesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          update: {
            args: Prisma.likesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          deleteMany: {
            args: Prisma.likesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.likesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.likesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>[]
          }
          upsert: {
            args: Prisma.likesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$likesPayload>
          }
          aggregate: {
            args: Prisma.LikesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateLikes>
          }
          groupBy: {
            args: Prisma.likesGroupByArgs<ExtArgs>
            result: $Utils.Optional<LikesGroupByOutputType>[]
          }
          count: {
            args: Prisma.likesCountArgs<ExtArgs>
            result: $Utils.Optional<LikesCountAggregateOutputType> | number
          }
        }
      }
      tags: {
        payload: Prisma.$tagsPayload<ExtArgs>
        fields: Prisma.tagsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.tagsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.tagsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          findFirst: {
            args: Prisma.tagsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.tagsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          findMany: {
            args: Prisma.tagsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          create: {
            args: Prisma.tagsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          createMany: {
            args: Prisma.tagsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.tagsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          delete: {
            args: Prisma.tagsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          update: {
            args: Prisma.tagsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          deleteMany: {
            args: Prisma.tagsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.tagsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.tagsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>[]
          }
          upsert: {
            args: Prisma.tagsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$tagsPayload>
          }
          aggregate: {
            args: Prisma.TagsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateTags>
          }
          groupBy: {
            args: Prisma.tagsGroupByArgs<ExtArgs>
            result: $Utils.Optional<TagsGroupByOutputType>[]
          }
          count: {
            args: Prisma.tagsCountArgs<ExtArgs>
            result: $Utils.Optional<TagsCountAggregateOutputType> | number
          }
        }
      }
      views: {
        payload: Prisma.$viewsPayload<ExtArgs>
        fields: Prisma.viewsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.viewsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.viewsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>
          }
          findFirst: {
            args: Prisma.viewsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.viewsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>
          }
          findMany: {
            args: Prisma.viewsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>[]
          }
          create: {
            args: Prisma.viewsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>
          }
          createMany: {
            args: Prisma.viewsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.viewsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>[]
          }
          delete: {
            args: Prisma.viewsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>
          }
          update: {
            args: Prisma.viewsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>
          }
          deleteMany: {
            args: Prisma.viewsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.viewsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.viewsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>[]
          }
          upsert: {
            args: Prisma.viewsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$viewsPayload>
          }
          aggregate: {
            args: Prisma.ViewsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateViews>
          }
          groupBy: {
            args: Prisma.viewsGroupByArgs<ExtArgs>
            result: $Utils.Optional<ViewsGroupByOutputType>[]
          }
          count: {
            args: Prisma.viewsCountArgs<ExtArgs>
            result: $Utils.Optional<ViewsCountAggregateOutputType> | number
          }
        }
      }
      audit_log_entries: {
        payload: Prisma.$audit_log_entriesPayload<ExtArgs>
        fields: Prisma.audit_log_entriesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.audit_log_entriesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          findFirst: {
            args: Prisma.audit_log_entriesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.audit_log_entriesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          findMany: {
            args: Prisma.audit_log_entriesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          create: {
            args: Prisma.audit_log_entriesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          createMany: {
            args: Prisma.audit_log_entriesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.audit_log_entriesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          delete: {
            args: Prisma.audit_log_entriesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          update: {
            args: Prisma.audit_log_entriesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          deleteMany: {
            args: Prisma.audit_log_entriesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.audit_log_entriesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.audit_log_entriesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>[]
          }
          upsert: {
            args: Prisma.audit_log_entriesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$audit_log_entriesPayload>
          }
          aggregate: {
            args: Prisma.Audit_log_entriesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAudit_log_entries>
          }
          groupBy: {
            args: Prisma.audit_log_entriesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Audit_log_entriesGroupByOutputType>[]
          }
          count: {
            args: Prisma.audit_log_entriesCountArgs<ExtArgs>
            result: $Utils.Optional<Audit_log_entriesCountAggregateOutputType> | number
          }
        }
      }
      flow_state: {
        payload: Prisma.$flow_statePayload<ExtArgs>
        fields: Prisma.flow_stateFieldRefs
        operations: {
          findUnique: {
            args: Prisma.flow_stateFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.flow_stateFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          findFirst: {
            args: Prisma.flow_stateFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.flow_stateFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          findMany: {
            args: Prisma.flow_stateFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          create: {
            args: Prisma.flow_stateCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          createMany: {
            args: Prisma.flow_stateCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.flow_stateCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          delete: {
            args: Prisma.flow_stateDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          update: {
            args: Prisma.flow_stateUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          deleteMany: {
            args: Prisma.flow_stateDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.flow_stateUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.flow_stateUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>[]
          }
          upsert: {
            args: Prisma.flow_stateUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$flow_statePayload>
          }
          aggregate: {
            args: Prisma.Flow_stateAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFlow_state>
          }
          groupBy: {
            args: Prisma.flow_stateGroupByArgs<ExtArgs>
            result: $Utils.Optional<Flow_stateGroupByOutputType>[]
          }
          count: {
            args: Prisma.flow_stateCountArgs<ExtArgs>
            result: $Utils.Optional<Flow_stateCountAggregateOutputType> | number
          }
        }
      }
      identities: {
        payload: Prisma.$identitiesPayload<ExtArgs>
        fields: Prisma.identitiesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.identitiesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.identitiesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          findFirst: {
            args: Prisma.identitiesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.identitiesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          findMany: {
            args: Prisma.identitiesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          create: {
            args: Prisma.identitiesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          createMany: {
            args: Prisma.identitiesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.identitiesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          delete: {
            args: Prisma.identitiesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          update: {
            args: Prisma.identitiesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          deleteMany: {
            args: Prisma.identitiesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.identitiesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.identitiesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>[]
          }
          upsert: {
            args: Prisma.identitiesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$identitiesPayload>
          }
          aggregate: {
            args: Prisma.IdentitiesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateIdentities>
          }
          groupBy: {
            args: Prisma.identitiesGroupByArgs<ExtArgs>
            result: $Utils.Optional<IdentitiesGroupByOutputType>[]
          }
          count: {
            args: Prisma.identitiesCountArgs<ExtArgs>
            result: $Utils.Optional<IdentitiesCountAggregateOutputType> | number
          }
        }
      }
      instances: {
        payload: Prisma.$instancesPayload<ExtArgs>
        fields: Prisma.instancesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.instancesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.instancesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          findFirst: {
            args: Prisma.instancesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.instancesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          findMany: {
            args: Prisma.instancesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          create: {
            args: Prisma.instancesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          createMany: {
            args: Prisma.instancesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.instancesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          delete: {
            args: Prisma.instancesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          update: {
            args: Prisma.instancesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          deleteMany: {
            args: Prisma.instancesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.instancesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.instancesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>[]
          }
          upsert: {
            args: Prisma.instancesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$instancesPayload>
          }
          aggregate: {
            args: Prisma.InstancesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateInstances>
          }
          groupBy: {
            args: Prisma.instancesGroupByArgs<ExtArgs>
            result: $Utils.Optional<InstancesGroupByOutputType>[]
          }
          count: {
            args: Prisma.instancesCountArgs<ExtArgs>
            result: $Utils.Optional<InstancesCountAggregateOutputType> | number
          }
        }
      }
      mfa_amr_claims: {
        payload: Prisma.$mfa_amr_claimsPayload<ExtArgs>
        fields: Prisma.mfa_amr_claimsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_amr_claimsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          findFirst: {
            args: Prisma.mfa_amr_claimsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          findMany: {
            args: Prisma.mfa_amr_claimsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          create: {
            args: Prisma.mfa_amr_claimsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          createMany: {
            args: Prisma.mfa_amr_claimsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mfa_amr_claimsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          delete: {
            args: Prisma.mfa_amr_claimsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          update: {
            args: Prisma.mfa_amr_claimsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          deleteMany: {
            args: Prisma.mfa_amr_claimsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_amr_claimsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mfa_amr_claimsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>[]
          }
          upsert: {
            args: Prisma.mfa_amr_claimsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_amr_claimsPayload>
          }
          aggregate: {
            args: Prisma.Mfa_amr_claimsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMfa_amr_claims>
          }
          groupBy: {
            args: Prisma.mfa_amr_claimsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mfa_amr_claimsGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_amr_claimsCountArgs<ExtArgs>
            result: $Utils.Optional<Mfa_amr_claimsCountAggregateOutputType> | number
          }
        }
      }
      mfa_challenges: {
        payload: Prisma.$mfa_challengesPayload<ExtArgs>
        fields: Prisma.mfa_challengesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_challengesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_challengesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          findFirst: {
            args: Prisma.mfa_challengesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_challengesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          findMany: {
            args: Prisma.mfa_challengesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          create: {
            args: Prisma.mfa_challengesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          createMany: {
            args: Prisma.mfa_challengesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mfa_challengesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          delete: {
            args: Prisma.mfa_challengesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          update: {
            args: Prisma.mfa_challengesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          deleteMany: {
            args: Prisma.mfa_challengesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_challengesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mfa_challengesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>[]
          }
          upsert: {
            args: Prisma.mfa_challengesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_challengesPayload>
          }
          aggregate: {
            args: Prisma.Mfa_challengesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMfa_challenges>
          }
          groupBy: {
            args: Prisma.mfa_challengesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mfa_challengesGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_challengesCountArgs<ExtArgs>
            result: $Utils.Optional<Mfa_challengesCountAggregateOutputType> | number
          }
        }
      }
      mfa_factors: {
        payload: Prisma.$mfa_factorsPayload<ExtArgs>
        fields: Prisma.mfa_factorsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.mfa_factorsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.mfa_factorsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          findFirst: {
            args: Prisma.mfa_factorsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.mfa_factorsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          findMany: {
            args: Prisma.mfa_factorsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          create: {
            args: Prisma.mfa_factorsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          createMany: {
            args: Prisma.mfa_factorsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.mfa_factorsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          delete: {
            args: Prisma.mfa_factorsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          update: {
            args: Prisma.mfa_factorsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          deleteMany: {
            args: Prisma.mfa_factorsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.mfa_factorsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.mfa_factorsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>[]
          }
          upsert: {
            args: Prisma.mfa_factorsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$mfa_factorsPayload>
          }
          aggregate: {
            args: Prisma.Mfa_factorsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMfa_factors>
          }
          groupBy: {
            args: Prisma.mfa_factorsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Mfa_factorsGroupByOutputType>[]
          }
          count: {
            args: Prisma.mfa_factorsCountArgs<ExtArgs>
            result: $Utils.Optional<Mfa_factorsCountAggregateOutputType> | number
          }
        }
      }
      one_time_tokens: {
        payload: Prisma.$one_time_tokensPayload<ExtArgs>
        fields: Prisma.one_time_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.one_time_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.one_time_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          findFirst: {
            args: Prisma.one_time_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.one_time_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          findMany: {
            args: Prisma.one_time_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>[]
          }
          create: {
            args: Prisma.one_time_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          createMany: {
            args: Prisma.one_time_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.one_time_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>[]
          }
          delete: {
            args: Prisma.one_time_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          update: {
            args: Prisma.one_time_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          deleteMany: {
            args: Prisma.one_time_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.one_time_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.one_time_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>[]
          }
          upsert: {
            args: Prisma.one_time_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$one_time_tokensPayload>
          }
          aggregate: {
            args: Prisma.One_time_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOne_time_tokens>
          }
          groupBy: {
            args: Prisma.one_time_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<One_time_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.one_time_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<One_time_tokensCountAggregateOutputType> | number
          }
        }
      }
      refresh_tokens: {
        payload: Prisma.$refresh_tokensPayload<ExtArgs>
        fields: Prisma.refresh_tokensFieldRefs
        operations: {
          findUnique: {
            args: Prisma.refresh_tokensFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.refresh_tokensFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findFirst: {
            args: Prisma.refresh_tokensFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.refresh_tokensFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          findMany: {
            args: Prisma.refresh_tokensFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          create: {
            args: Prisma.refresh_tokensCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          createMany: {
            args: Prisma.refresh_tokensCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.refresh_tokensCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          delete: {
            args: Prisma.refresh_tokensDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          update: {
            args: Prisma.refresh_tokensUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          deleteMany: {
            args: Prisma.refresh_tokensDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.refresh_tokensUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.refresh_tokensUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>[]
          }
          upsert: {
            args: Prisma.refresh_tokensUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$refresh_tokensPayload>
          }
          aggregate: {
            args: Prisma.Refresh_tokensAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefresh_tokens>
          }
          groupBy: {
            args: Prisma.refresh_tokensGroupByArgs<ExtArgs>
            result: $Utils.Optional<Refresh_tokensGroupByOutputType>[]
          }
          count: {
            args: Prisma.refresh_tokensCountArgs<ExtArgs>
            result: $Utils.Optional<Refresh_tokensCountAggregateOutputType> | number
          }
        }
      }
      saml_providers: {
        payload: Prisma.$saml_providersPayload<ExtArgs>
        fields: Prisma.saml_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.saml_providersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.saml_providersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          findFirst: {
            args: Prisma.saml_providersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.saml_providersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          findMany: {
            args: Prisma.saml_providersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          create: {
            args: Prisma.saml_providersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          createMany: {
            args: Prisma.saml_providersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.saml_providersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          delete: {
            args: Prisma.saml_providersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          update: {
            args: Prisma.saml_providersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          deleteMany: {
            args: Prisma.saml_providersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.saml_providersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.saml_providersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>[]
          }
          upsert: {
            args: Prisma.saml_providersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_providersPayload>
          }
          aggregate: {
            args: Prisma.Saml_providersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSaml_providers>
          }
          groupBy: {
            args: Prisma.saml_providersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Saml_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.saml_providersCountArgs<ExtArgs>
            result: $Utils.Optional<Saml_providersCountAggregateOutputType> | number
          }
        }
      }
      saml_relay_states: {
        payload: Prisma.$saml_relay_statesPayload<ExtArgs>
        fields: Prisma.saml_relay_statesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.saml_relay_statesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          findFirst: {
            args: Prisma.saml_relay_statesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.saml_relay_statesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          findMany: {
            args: Prisma.saml_relay_statesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          create: {
            args: Prisma.saml_relay_statesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          createMany: {
            args: Prisma.saml_relay_statesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.saml_relay_statesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          delete: {
            args: Prisma.saml_relay_statesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          update: {
            args: Prisma.saml_relay_statesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          deleteMany: {
            args: Prisma.saml_relay_statesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.saml_relay_statesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.saml_relay_statesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>[]
          }
          upsert: {
            args: Prisma.saml_relay_statesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$saml_relay_statesPayload>
          }
          aggregate: {
            args: Prisma.Saml_relay_statesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSaml_relay_states>
          }
          groupBy: {
            args: Prisma.saml_relay_statesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Saml_relay_statesGroupByOutputType>[]
          }
          count: {
            args: Prisma.saml_relay_statesCountArgs<ExtArgs>
            result: $Utils.Optional<Saml_relay_statesCountAggregateOutputType> | number
          }
        }
      }
      schema_migrations: {
        payload: Prisma.$schema_migrationsPayload<ExtArgs>
        fields: Prisma.schema_migrationsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.schema_migrationsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.schema_migrationsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findFirst: {
            args: Prisma.schema_migrationsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.schema_migrationsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          findMany: {
            args: Prisma.schema_migrationsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          create: {
            args: Prisma.schema_migrationsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          createMany: {
            args: Prisma.schema_migrationsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.schema_migrationsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          delete: {
            args: Prisma.schema_migrationsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          update: {
            args: Prisma.schema_migrationsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          deleteMany: {
            args: Prisma.schema_migrationsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.schema_migrationsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.schema_migrationsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>[]
          }
          upsert: {
            args: Prisma.schema_migrationsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$schema_migrationsPayload>
          }
          aggregate: {
            args: Prisma.Schema_migrationsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSchema_migrations>
          }
          groupBy: {
            args: Prisma.schema_migrationsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsGroupByOutputType>[]
          }
          count: {
            args: Prisma.schema_migrationsCountArgs<ExtArgs>
            result: $Utils.Optional<Schema_migrationsCountAggregateOutputType> | number
          }
        }
      }
      sessions: {
        payload: Prisma.$sessionsPayload<ExtArgs>
        fields: Prisma.sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findFirst: {
            args: Prisma.sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          findMany: {
            args: Prisma.sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          create: {
            args: Prisma.sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          createMany: {
            args: Prisma.sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          delete: {
            args: Prisma.sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          update: {
            args: Prisma.sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          deleteMany: {
            args: Prisma.sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>[]
          }
          upsert: {
            args: Prisma.sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sessionsPayload>
          }
          aggregate: {
            args: Prisma.SessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSessions>
          }
          groupBy: {
            args: Prisma.sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<SessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<SessionsCountAggregateOutputType> | number
          }
        }
      }
      sso_domains: {
        payload: Prisma.$sso_domainsPayload<ExtArgs>
        fields: Prisma.sso_domainsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_domainsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_domainsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          findFirst: {
            args: Prisma.sso_domainsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_domainsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          findMany: {
            args: Prisma.sso_domainsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          create: {
            args: Prisma.sso_domainsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          createMany: {
            args: Prisma.sso_domainsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sso_domainsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          delete: {
            args: Prisma.sso_domainsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          update: {
            args: Prisma.sso_domainsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          deleteMany: {
            args: Prisma.sso_domainsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sso_domainsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sso_domainsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>[]
          }
          upsert: {
            args: Prisma.sso_domainsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_domainsPayload>
          }
          aggregate: {
            args: Prisma.Sso_domainsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSso_domains>
          }
          groupBy: {
            args: Prisma.sso_domainsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sso_domainsGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_domainsCountArgs<ExtArgs>
            result: $Utils.Optional<Sso_domainsCountAggregateOutputType> | number
          }
        }
      }
      sso_providers: {
        payload: Prisma.$sso_providersPayload<ExtArgs>
        fields: Prisma.sso_providersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.sso_providersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.sso_providersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          findFirst: {
            args: Prisma.sso_providersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.sso_providersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          findMany: {
            args: Prisma.sso_providersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          create: {
            args: Prisma.sso_providersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          createMany: {
            args: Prisma.sso_providersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.sso_providersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          delete: {
            args: Prisma.sso_providersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          update: {
            args: Prisma.sso_providersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          deleteMany: {
            args: Prisma.sso_providersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.sso_providersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.sso_providersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>[]
          }
          upsert: {
            args: Prisma.sso_providersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$sso_providersPayload>
          }
          aggregate: {
            args: Prisma.Sso_providersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSso_providers>
          }
          groupBy: {
            args: Prisma.sso_providersGroupByArgs<ExtArgs>
            result: $Utils.Optional<Sso_providersGroupByOutputType>[]
          }
          count: {
            args: Prisma.sso_providersCountArgs<ExtArgs>
            result: $Utils.Optional<Sso_providersCountAggregateOutputType> | number
          }
        }
      }
      users: {
        payload: Prisma.$usersPayload<ExtArgs>
        fields: Prisma.usersFieldRefs
        operations: {
          findUnique: {
            args: Prisma.usersFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.usersFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findFirst: {
            args: Prisma.usersFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.usersFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          findMany: {
            args: Prisma.usersFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          create: {
            args: Prisma.usersCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          createMany: {
            args: Prisma.usersCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.usersCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          delete: {
            args: Prisma.usersDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          update: {
            args: Prisma.usersUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          deleteMany: {
            args: Prisma.usersDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.usersUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.usersUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>[]
          }
          upsert: {
            args: Prisma.usersUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$usersPayload>
          }
          aggregate: {
            args: Prisma.UsersAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUsers>
          }
          groupBy: {
            args: Prisma.usersGroupByArgs<ExtArgs>
            result: $Utils.Optional<UsersGroupByOutputType>[]
          }
          count: {
            args: Prisma.usersCountArgs<ExtArgs>
            result: $Utils.Optional<UsersCountAggregateOutputType> | number
          }
        }
      }
      public_sessions: {
        payload: Prisma.$public_sessionsPayload<ExtArgs>
        fields: Prisma.public_sessionsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.public_sessionsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.public_sessionsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>
          }
          findFirst: {
            args: Prisma.public_sessionsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.public_sessionsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>
          }
          findMany: {
            args: Prisma.public_sessionsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>[]
          }
          create: {
            args: Prisma.public_sessionsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>
          }
          createMany: {
            args: Prisma.public_sessionsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.public_sessionsCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>[]
          }
          delete: {
            args: Prisma.public_sessionsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>
          }
          update: {
            args: Prisma.public_sessionsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>
          }
          deleteMany: {
            args: Prisma.public_sessionsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.public_sessionsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.public_sessionsUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>[]
          }
          upsert: {
            args: Prisma.public_sessionsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$public_sessionsPayload>
          }
          aggregate: {
            args: Prisma.Public_sessionsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePublic_sessions>
          }
          groupBy: {
            args: Prisma.public_sessionsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Public_sessionsGroupByOutputType>[]
          }
          count: {
            args: Prisma.public_sessionsCountArgs<ExtArgs>
            result: $Utils.Optional<Public_sessionsCountAggregateOutputType> | number
          }
        }
      }
      book_articles: {
        payload: Prisma.$book_articlesPayload<ExtArgs>
        fields: Prisma.book_articlesFieldRefs
        operations: {
          findUnique: {
            args: Prisma.book_articlesFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.book_articlesFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>
          }
          findFirst: {
            args: Prisma.book_articlesFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.book_articlesFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>
          }
          findMany: {
            args: Prisma.book_articlesFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>[]
          }
          create: {
            args: Prisma.book_articlesCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>
          }
          createMany: {
            args: Prisma.book_articlesCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.book_articlesCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>[]
          }
          delete: {
            args: Prisma.book_articlesDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>
          }
          update: {
            args: Prisma.book_articlesUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>
          }
          deleteMany: {
            args: Prisma.book_articlesDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.book_articlesUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.book_articlesUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>[]
          }
          upsert: {
            args: Prisma.book_articlesUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$book_articlesPayload>
          }
          aggregate: {
            args: Prisma.Book_articlesAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBook_articles>
          }
          groupBy: {
            args: Prisma.book_articlesGroupByArgs<ExtArgs>
            result: $Utils.Optional<Book_articlesGroupByOutputType>[]
          }
          count: {
            args: Prisma.book_articlesCountArgs<ExtArgs>
            result: $Utils.Optional<Book_articlesCountAggregateOutputType> | number
          }
        }
      }
      books: {
        payload: Prisma.$booksPayload<ExtArgs>
        fields: Prisma.booksFieldRefs
        operations: {
          findUnique: {
            args: Prisma.booksFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.booksFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>
          }
          findFirst: {
            args: Prisma.booksFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.booksFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>
          }
          findMany: {
            args: Prisma.booksFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>[]
          }
          create: {
            args: Prisma.booksCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>
          }
          createMany: {
            args: Prisma.booksCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.booksCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>[]
          }
          delete: {
            args: Prisma.booksDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>
          }
          update: {
            args: Prisma.booksUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>
          }
          deleteMany: {
            args: Prisma.booksDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.booksUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.booksUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>[]
          }
          upsert: {
            args: Prisma.booksUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$booksPayload>
          }
          aggregate: {
            args: Prisma.BooksAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBooks>
          }
          groupBy: {
            args: Prisma.booksGroupByArgs<ExtArgs>
            result: $Utils.Optional<BooksGroupByOutputType>[]
          }
          count: {
            args: Prisma.booksCountArgs<ExtArgs>
            result: $Utils.Optional<BooksCountAggregateOutputType> | number
          }
        }
      }
      spatial_ref_sys: {
        payload: Prisma.$spatial_ref_sysPayload<ExtArgs>
        fields: Prisma.spatial_ref_sysFieldRefs
        operations: {
          findUnique: {
            args: Prisma.spatial_ref_sysFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          findFirst: {
            args: Prisma.spatial_ref_sysFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.spatial_ref_sysFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          findMany: {
            args: Prisma.spatial_ref_sysFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          create: {
            args: Prisma.spatial_ref_sysCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          createMany: {
            args: Prisma.spatial_ref_sysCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          createManyAndReturn: {
            args: Prisma.spatial_ref_sysCreateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          delete: {
            args: Prisma.spatial_ref_sysDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          update: {
            args: Prisma.spatial_ref_sysUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          deleteMany: {
            args: Prisma.spatial_ref_sysDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.spatial_ref_sysUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateManyAndReturn: {
            args: Prisma.spatial_ref_sysUpdateManyAndReturnArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>[]
          }
          upsert: {
            args: Prisma.spatial_ref_sysUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$spatial_ref_sysPayload>
          }
          aggregate: {
            args: Prisma.Spatial_ref_sysAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpatial_ref_sys>
          }
          groupBy: {
            args: Prisma.spatial_ref_sysGroupByArgs<ExtArgs>
            result: $Utils.Optional<Spatial_ref_sysGroupByOutputType>[]
          }
          count: {
            args: Prisma.spatial_ref_sysCountArgs<ExtArgs>
            result: $Utils.Optional<Spatial_ref_sysCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
    /**
     * Global configuration for omitting model fields by default.
     * 
     * @example
     * ```
     * const prisma = new PrismaClient({
     *   omit: {
     *     user: {
     *       password: true
     *     }
     *   }
     * })
     * ```
     */
    omit?: Prisma.GlobalOmitConfig
  }
  export type GlobalOmitConfig = {
    article_entities?: article_entitiesOmit
    articles?: articlesOmit
    entities?: entitiesOmit
    user_article_views?: user_article_viewsOmit
    public_users?: public_usersOmit
    weekly_forecasts?: weekly_forecastsOmit
    article_tags?: article_tagsOmit
    bookmark_folders?: bookmark_foldersOmit
    bookmarks?: bookmarksOmit
    geo_events?: geo_eventsOmit
    likes?: likesOmit
    tags?: tagsOmit
    views?: viewsOmit
    audit_log_entries?: audit_log_entriesOmit
    flow_state?: flow_stateOmit
    identities?: identitiesOmit
    instances?: instancesOmit
    mfa_amr_claims?: mfa_amr_claimsOmit
    mfa_challenges?: mfa_challengesOmit
    mfa_factors?: mfa_factorsOmit
    one_time_tokens?: one_time_tokensOmit
    refresh_tokens?: refresh_tokensOmit
    saml_providers?: saml_providersOmit
    saml_relay_states?: saml_relay_statesOmit
    schema_migrations?: schema_migrationsOmit
    sessions?: sessionsOmit
    sso_domains?: sso_domainsOmit
    sso_providers?: sso_providersOmit
    users?: usersOmit
    public_sessions?: public_sessionsOmit
    book_articles?: book_articlesOmit
    books?: booksOmit
    spatial_ref_sys?: spatial_ref_sysOmit
  }

  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'updateManyAndReturn'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type ArticlesCountOutputType
   */

  export type ArticlesCountOutputType = {
    article_entities: number
    article_tags: number
    bookmarks: number
    geo_events: number
    likes: number
    views: number
  }

  export type ArticlesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article_entities?: boolean | ArticlesCountOutputTypeCountArticle_entitiesArgs
    article_tags?: boolean | ArticlesCountOutputTypeCountArticle_tagsArgs
    bookmarks?: boolean | ArticlesCountOutputTypeCountBookmarksArgs
    geo_events?: boolean | ArticlesCountOutputTypeCountGeo_eventsArgs
    likes?: boolean | ArticlesCountOutputTypeCountLikesArgs
    views?: boolean | ArticlesCountOutputTypeCountViewsArgs
  }

  // Custom InputTypes
  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ArticlesCountOutputType
     */
    select?: ArticlesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeCountArticle_entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: article_entitiesWhereInput
  }

  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeCountArticle_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: article_tagsWhereInput
  }

  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeCountBookmarksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bookmarksWhereInput
  }

  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeCountGeo_eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: geo_eventsWhereInput
  }

  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: likesWhereInput
  }

  /**
   * ArticlesCountOutputType without action
   */
  export type ArticlesCountOutputTypeCountViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: viewsWhereInput
  }


  /**
   * Count Type EntitiesCountOutputType
   */

  export type EntitiesCountOutputType = {
    article_entities: number
  }

  export type EntitiesCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article_entities?: boolean | EntitiesCountOutputTypeCountArticle_entitiesArgs
  }

  // Custom InputTypes
  /**
   * EntitiesCountOutputType without action
   */
  export type EntitiesCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the EntitiesCountOutputType
     */
    select?: EntitiesCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * EntitiesCountOutputType without action
   */
  export type EntitiesCountOutputTypeCountArticle_entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: article_entitiesWhereInput
  }


  /**
   * Count Type Public_usersCountOutputType
   */

  export type Public_usersCountOutputType = {
    bookmark_folders: number
    bookmarks: number
    likes: number
    views: number
  }

  export type Public_usersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bookmark_folders?: boolean | Public_usersCountOutputTypeCountBookmark_foldersArgs
    bookmarks?: boolean | Public_usersCountOutputTypeCountBookmarksArgs
    likes?: boolean | Public_usersCountOutputTypeCountLikesArgs
    views?: boolean | Public_usersCountOutputTypeCountViewsArgs
  }

  // Custom InputTypes
  /**
   * Public_usersCountOutputType without action
   */
  export type Public_usersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Public_usersCountOutputType
     */
    select?: Public_usersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Public_usersCountOutputType without action
   */
  export type Public_usersCountOutputTypeCountBookmark_foldersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bookmark_foldersWhereInput
  }

  /**
   * Public_usersCountOutputType without action
   */
  export type Public_usersCountOutputTypeCountBookmarksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bookmarksWhereInput
  }

  /**
   * Public_usersCountOutputType without action
   */
  export type Public_usersCountOutputTypeCountLikesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: likesWhereInput
  }

  /**
   * Public_usersCountOutputType without action
   */
  export type Public_usersCountOutputTypeCountViewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: viewsWhereInput
  }


  /**
   * Count Type Bookmark_foldersCountOutputType
   */

  export type Bookmark_foldersCountOutputType = {
    bookmarks: number
  }

  export type Bookmark_foldersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bookmarks?: boolean | Bookmark_foldersCountOutputTypeCountBookmarksArgs
  }

  // Custom InputTypes
  /**
   * Bookmark_foldersCountOutputType without action
   */
  export type Bookmark_foldersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Bookmark_foldersCountOutputType
     */
    select?: Bookmark_foldersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Bookmark_foldersCountOutputType without action
   */
  export type Bookmark_foldersCountOutputTypeCountBookmarksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bookmarksWhereInput
  }


  /**
   * Count Type TagsCountOutputType
   */

  export type TagsCountOutputType = {
    article_tags: number
  }

  export type TagsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article_tags?: boolean | TagsCountOutputTypeCountArticle_tagsArgs
  }

  // Custom InputTypes
  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the TagsCountOutputType
     */
    select?: TagsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * TagsCountOutputType without action
   */
  export type TagsCountOutputTypeCountArticle_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: article_tagsWhereInput
  }


  /**
   * Count Type Flow_stateCountOutputType
   */

  export type Flow_stateCountOutputType = {
    saml_relay_states: number
  }

  export type Flow_stateCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_relay_states?: boolean | Flow_stateCountOutputTypeCountSaml_relay_statesArgs
  }

  // Custom InputTypes
  /**
   * Flow_stateCountOutputType without action
   */
  export type Flow_stateCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Flow_stateCountOutputType
     */
    select?: Flow_stateCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Flow_stateCountOutputType without action
   */
  export type Flow_stateCountOutputTypeCountSaml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
  }


  /**
   * Count Type Mfa_factorsCountOutputType
   */

  export type Mfa_factorsCountOutputType = {
    mfa_challenges: number
  }

  export type Mfa_factorsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_challenges?: boolean | Mfa_factorsCountOutputTypeCountMfa_challengesArgs
  }

  // Custom InputTypes
  /**
   * Mfa_factorsCountOutputType without action
   */
  export type Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Mfa_factorsCountOutputType
     */
    select?: Mfa_factorsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Mfa_factorsCountOutputType without action
   */
  export type Mfa_factorsCountOutputTypeCountMfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_challengesWhereInput
  }


  /**
   * Count Type SessionsCountOutputType
   */

  export type SessionsCountOutputType = {
    mfa_amr_claims: number
    refresh_tokens: number
  }

  export type SessionsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_amr_claims?: boolean | SessionsCountOutputTypeCountMfa_amr_claimsArgs
    refresh_tokens?: boolean | SessionsCountOutputTypeCountRefresh_tokensArgs
  }

  // Custom InputTypes
  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SessionsCountOutputType
     */
    select?: SessionsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeCountMfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_amr_claimsWhereInput
  }

  /**
   * SessionsCountOutputType without action
   */
  export type SessionsCountOutputTypeCountRefresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
  }


  /**
   * Count Type Sso_providersCountOutputType
   */

  export type Sso_providersCountOutputType = {
    saml_providers: number
    saml_relay_states: number
    sso_domains: number
  }

  export type Sso_providersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_providers?: boolean | Sso_providersCountOutputTypeCountSaml_providersArgs
    saml_relay_states?: boolean | Sso_providersCountOutputTypeCountSaml_relay_statesArgs
    sso_domains?: boolean | Sso_providersCountOutputTypeCountSso_domainsArgs
  }

  // Custom InputTypes
  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Sso_providersCountOutputType
     */
    select?: Sso_providersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSaml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_providersWhereInput
  }

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSaml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
  }

  /**
   * Sso_providersCountOutputType without action
   */
  export type Sso_providersCountOutputTypeCountSso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_domainsWhereInput
  }


  /**
   * Count Type UsersCountOutputType
   */

  export type UsersCountOutputType = {
    identities: number
    mfa_factors: number
    one_time_tokens: number
    sessions: number
  }

  export type UsersCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identities?: boolean | UsersCountOutputTypeCountIdentitiesArgs
    mfa_factors?: boolean | UsersCountOutputTypeCountMfa_factorsArgs
    one_time_tokens?: boolean | UsersCountOutputTypeCountOne_time_tokensArgs
    sessions?: boolean | UsersCountOutputTypeCountSessionsArgs
  }

  // Custom InputTypes
  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UsersCountOutputType
     */
    select?: UsersCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountIdentitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: identitiesWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountMfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_factorsWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountOne_time_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: one_time_tokensWhereInput
  }

  /**
   * UsersCountOutputType without action
   */
  export type UsersCountOutputTypeCountSessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
  }


  /**
   * Count Type BooksCountOutputType
   */

  export type BooksCountOutputType = {
    book_articles: number
  }

  export type BooksCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    book_articles?: boolean | BooksCountOutputTypeCountBook_articlesArgs
  }

  // Custom InputTypes
  /**
   * BooksCountOutputType without action
   */
  export type BooksCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BooksCountOutputType
     */
    select?: BooksCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BooksCountOutputType without action
   */
  export type BooksCountOutputTypeCountBook_articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: book_articlesWhereInput
  }


  /**
   * Models
   */

  /**
   * Model article_entities
   */

  export type AggregateArticle_entities = {
    _count: Article_entitiesCountAggregateOutputType | null
    _avg: Article_entitiesAvgAggregateOutputType | null
    _sum: Article_entitiesSumAggregateOutputType | null
    _min: Article_entitiesMinAggregateOutputType | null
    _max: Article_entitiesMaxAggregateOutputType | null
  }

  export type Article_entitiesAvgAggregateOutputType = {
    entity_id: number | null
  }

  export type Article_entitiesSumAggregateOutputType = {
    entity_id: bigint | null
  }

  export type Article_entitiesMinAggregateOutputType = {
    article_id: string | null
    entity_id: bigint | null
  }

  export type Article_entitiesMaxAggregateOutputType = {
    article_id: string | null
    entity_id: bigint | null
  }

  export type Article_entitiesCountAggregateOutputType = {
    article_id: number
    entity_id: number
    _all: number
  }


  export type Article_entitiesAvgAggregateInputType = {
    entity_id?: true
  }

  export type Article_entitiesSumAggregateInputType = {
    entity_id?: true
  }

  export type Article_entitiesMinAggregateInputType = {
    article_id?: true
    entity_id?: true
  }

  export type Article_entitiesMaxAggregateInputType = {
    article_id?: true
    entity_id?: true
  }

  export type Article_entitiesCountAggregateInputType = {
    article_id?: true
    entity_id?: true
    _all?: true
  }

  export type Article_entitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which article_entities to aggregate.
     */
    where?: article_entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_entities to fetch.
     */
    orderBy?: article_entitiesOrderByWithRelationInput | article_entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: article_entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned article_entities
    **/
    _count?: true | Article_entitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Article_entitiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Article_entitiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Article_entitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Article_entitiesMaxAggregateInputType
  }

  export type GetArticle_entitiesAggregateType<T extends Article_entitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateArticle_entities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticle_entities[P]>
      : GetScalarType<T[P], AggregateArticle_entities[P]>
  }




  export type article_entitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: article_entitiesWhereInput
    orderBy?: article_entitiesOrderByWithAggregationInput | article_entitiesOrderByWithAggregationInput[]
    by: Article_entitiesScalarFieldEnum[] | Article_entitiesScalarFieldEnum
    having?: article_entitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Article_entitiesCountAggregateInputType | true
    _avg?: Article_entitiesAvgAggregateInputType
    _sum?: Article_entitiesSumAggregateInputType
    _min?: Article_entitiesMinAggregateInputType
    _max?: Article_entitiesMaxAggregateInputType
  }

  export type Article_entitiesGroupByOutputType = {
    article_id: string
    entity_id: bigint
    _count: Article_entitiesCountAggregateOutputType | null
    _avg: Article_entitiesAvgAggregateOutputType | null
    _sum: Article_entitiesSumAggregateOutputType | null
    _min: Article_entitiesMinAggregateOutputType | null
    _max: Article_entitiesMaxAggregateOutputType | null
  }

  type GetArticle_entitiesGroupByPayload<T extends article_entitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Article_entitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Article_entitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Article_entitiesGroupByOutputType[P]>
            : GetScalarType<T[P], Article_entitiesGroupByOutputType[P]>
        }
      >
    >


  export type article_entitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    article_id?: boolean
    entity_id?: boolean
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article_entities"]>

  export type article_entitiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    article_id?: boolean
    entity_id?: boolean
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article_entities"]>

  export type article_entitiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    article_id?: boolean
    entity_id?: boolean
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article_entities"]>

  export type article_entitiesSelectScalar = {
    article_id?: boolean
    entity_id?: boolean
  }

  export type article_entitiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"article_id" | "entity_id", ExtArgs["result"]["article_entities"]>
  export type article_entitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
  }
  export type article_entitiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
  }
  export type article_entitiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    entities?: boolean | entitiesDefaultArgs<ExtArgs>
  }

  export type $article_entitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "article_entities"
    objects: {
      articles: Prisma.$articlesPayload<ExtArgs>
      entities: Prisma.$entitiesPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      article_id: string
      entity_id: bigint
    }, ExtArgs["result"]["article_entities"]>
    composites: {}
  }

  type article_entitiesGetPayload<S extends boolean | null | undefined | article_entitiesDefaultArgs> = $Result.GetResult<Prisma.$article_entitiesPayload, S>

  type article_entitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<article_entitiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Article_entitiesCountAggregateInputType | true
    }

  export interface article_entitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['article_entities'], meta: { name: 'article_entities' } }
    /**
     * Find zero or one Article_entities that matches the filter.
     * @param {article_entitiesFindUniqueArgs} args - Arguments to find a Article_entities
     * @example
     * // Get one Article_entities
     * const article_entities = await prisma.article_entities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends article_entitiesFindUniqueArgs>(args: SelectSubset<T, article_entitiesFindUniqueArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Article_entities that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {article_entitiesFindUniqueOrThrowArgs} args - Arguments to find a Article_entities
     * @example
     * // Get one Article_entities
     * const article_entities = await prisma.article_entities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends article_entitiesFindUniqueOrThrowArgs>(args: SelectSubset<T, article_entitiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Article_entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_entitiesFindFirstArgs} args - Arguments to find a Article_entities
     * @example
     * // Get one Article_entities
     * const article_entities = await prisma.article_entities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends article_entitiesFindFirstArgs>(args?: SelectSubset<T, article_entitiesFindFirstArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Article_entities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_entitiesFindFirstOrThrowArgs} args - Arguments to find a Article_entities
     * @example
     * // Get one Article_entities
     * const article_entities = await prisma.article_entities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends article_entitiesFindFirstOrThrowArgs>(args?: SelectSubset<T, article_entitiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Article_entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_entitiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Article_entities
     * const article_entities = await prisma.article_entities.findMany()
     * 
     * // Get first 10 Article_entities
     * const article_entities = await prisma.article_entities.findMany({ take: 10 })
     * 
     * // Only select the `article_id`
     * const article_entitiesWithArticle_idOnly = await prisma.article_entities.findMany({ select: { article_id: true } })
     * 
     */
    findMany<T extends article_entitiesFindManyArgs>(args?: SelectSubset<T, article_entitiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Article_entities.
     * @param {article_entitiesCreateArgs} args - Arguments to create a Article_entities.
     * @example
     * // Create one Article_entities
     * const Article_entities = await prisma.article_entities.create({
     *   data: {
     *     // ... data to create a Article_entities
     *   }
     * })
     * 
     */
    create<T extends article_entitiesCreateArgs>(args: SelectSubset<T, article_entitiesCreateArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Article_entities.
     * @param {article_entitiesCreateManyArgs} args - Arguments to create many Article_entities.
     * @example
     * // Create many Article_entities
     * const article_entities = await prisma.article_entities.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends article_entitiesCreateManyArgs>(args?: SelectSubset<T, article_entitiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Article_entities and returns the data saved in the database.
     * @param {article_entitiesCreateManyAndReturnArgs} args - Arguments to create many Article_entities.
     * @example
     * // Create many Article_entities
     * const article_entities = await prisma.article_entities.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Article_entities and only return the `article_id`
     * const article_entitiesWithArticle_idOnly = await prisma.article_entities.createManyAndReturn({
     *   select: { article_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends article_entitiesCreateManyAndReturnArgs>(args?: SelectSubset<T, article_entitiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Article_entities.
     * @param {article_entitiesDeleteArgs} args - Arguments to delete one Article_entities.
     * @example
     * // Delete one Article_entities
     * const Article_entities = await prisma.article_entities.delete({
     *   where: {
     *     // ... filter to delete one Article_entities
     *   }
     * })
     * 
     */
    delete<T extends article_entitiesDeleteArgs>(args: SelectSubset<T, article_entitiesDeleteArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Article_entities.
     * @param {article_entitiesUpdateArgs} args - Arguments to update one Article_entities.
     * @example
     * // Update one Article_entities
     * const article_entities = await prisma.article_entities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends article_entitiesUpdateArgs>(args: SelectSubset<T, article_entitiesUpdateArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Article_entities.
     * @param {article_entitiesDeleteManyArgs} args - Arguments to filter Article_entities to delete.
     * @example
     * // Delete a few Article_entities
     * const { count } = await prisma.article_entities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends article_entitiesDeleteManyArgs>(args?: SelectSubset<T, article_entitiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Article_entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_entitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Article_entities
     * const article_entities = await prisma.article_entities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends article_entitiesUpdateManyArgs>(args: SelectSubset<T, article_entitiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Article_entities and returns the data updated in the database.
     * @param {article_entitiesUpdateManyAndReturnArgs} args - Arguments to update many Article_entities.
     * @example
     * // Update many Article_entities
     * const article_entities = await prisma.article_entities.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Article_entities and only return the `article_id`
     * const article_entitiesWithArticle_idOnly = await prisma.article_entities.updateManyAndReturn({
     *   select: { article_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends article_entitiesUpdateManyAndReturnArgs>(args: SelectSubset<T, article_entitiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Article_entities.
     * @param {article_entitiesUpsertArgs} args - Arguments to update or create a Article_entities.
     * @example
     * // Update or create a Article_entities
     * const article_entities = await prisma.article_entities.upsert({
     *   create: {
     *     // ... data to create a Article_entities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Article_entities we want to update
     *   }
     * })
     */
    upsert<T extends article_entitiesUpsertArgs>(args: SelectSubset<T, article_entitiesUpsertArgs<ExtArgs>>): Prisma__article_entitiesClient<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Article_entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_entitiesCountArgs} args - Arguments to filter Article_entities to count.
     * @example
     * // Count the number of Article_entities
     * const count = await prisma.article_entities.count({
     *   where: {
     *     // ... the filter for the Article_entities we want to count
     *   }
     * })
    **/
    count<T extends article_entitiesCountArgs>(
      args?: Subset<T, article_entitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Article_entitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Article_entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Article_entitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Article_entitiesAggregateArgs>(args: Subset<T, Article_entitiesAggregateArgs>): Prisma.PrismaPromise<GetArticle_entitiesAggregateType<T>>

    /**
     * Group by Article_entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_entitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends article_entitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: article_entitiesGroupByArgs['orderBy'] }
        : { orderBy?: article_entitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, article_entitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticle_entitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the article_entities model
   */
  readonly fields: article_entitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for article_entities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__article_entitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articles<T extends articlesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, articlesDefaultArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    entities<T extends entitiesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, entitiesDefaultArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the article_entities model
   */
  interface article_entitiesFieldRefs {
    readonly article_id: FieldRef<"article_entities", 'String'>
    readonly entity_id: FieldRef<"article_entities", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * article_entities findUnique
   */
  export type article_entitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * Filter, which article_entities to fetch.
     */
    where: article_entitiesWhereUniqueInput
  }

  /**
   * article_entities findUniqueOrThrow
   */
  export type article_entitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * Filter, which article_entities to fetch.
     */
    where: article_entitiesWhereUniqueInput
  }

  /**
   * article_entities findFirst
   */
  export type article_entitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * Filter, which article_entities to fetch.
     */
    where?: article_entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_entities to fetch.
     */
    orderBy?: article_entitiesOrderByWithRelationInput | article_entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for article_entities.
     */
    cursor?: article_entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of article_entities.
     */
    distinct?: Article_entitiesScalarFieldEnum | Article_entitiesScalarFieldEnum[]
  }

  /**
   * article_entities findFirstOrThrow
   */
  export type article_entitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * Filter, which article_entities to fetch.
     */
    where?: article_entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_entities to fetch.
     */
    orderBy?: article_entitiesOrderByWithRelationInput | article_entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for article_entities.
     */
    cursor?: article_entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of article_entities.
     */
    distinct?: Article_entitiesScalarFieldEnum | Article_entitiesScalarFieldEnum[]
  }

  /**
   * article_entities findMany
   */
  export type article_entitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * Filter, which article_entities to fetch.
     */
    where?: article_entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_entities to fetch.
     */
    orderBy?: article_entitiesOrderByWithRelationInput | article_entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing article_entities.
     */
    cursor?: article_entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_entities.
     */
    skip?: number
    distinct?: Article_entitiesScalarFieldEnum | Article_entitiesScalarFieldEnum[]
  }

  /**
   * article_entities create
   */
  export type article_entitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a article_entities.
     */
    data: XOR<article_entitiesCreateInput, article_entitiesUncheckedCreateInput>
  }

  /**
   * article_entities createMany
   */
  export type article_entitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many article_entities.
     */
    data: article_entitiesCreateManyInput | article_entitiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * article_entities createManyAndReturn
   */
  export type article_entitiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * The data used to create many article_entities.
     */
    data: article_entitiesCreateManyInput | article_entitiesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * article_entities update
   */
  export type article_entitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a article_entities.
     */
    data: XOR<article_entitiesUpdateInput, article_entitiesUncheckedUpdateInput>
    /**
     * Choose, which article_entities to update.
     */
    where: article_entitiesWhereUniqueInput
  }

  /**
   * article_entities updateMany
   */
  export type article_entitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update article_entities.
     */
    data: XOR<article_entitiesUpdateManyMutationInput, article_entitiesUncheckedUpdateManyInput>
    /**
     * Filter which article_entities to update
     */
    where?: article_entitiesWhereInput
    /**
     * Limit how many article_entities to update.
     */
    limit?: number
  }

  /**
   * article_entities updateManyAndReturn
   */
  export type article_entitiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * The data used to update article_entities.
     */
    data: XOR<article_entitiesUpdateManyMutationInput, article_entitiesUncheckedUpdateManyInput>
    /**
     * Filter which article_entities to update
     */
    where?: article_entitiesWhereInput
    /**
     * Limit how many article_entities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * article_entities upsert
   */
  export type article_entitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the article_entities to update in case it exists.
     */
    where: article_entitiesWhereUniqueInput
    /**
     * In case the article_entities found by the `where` argument doesn't exist, create a new article_entities with this data.
     */
    create: XOR<article_entitiesCreateInput, article_entitiesUncheckedCreateInput>
    /**
     * In case the article_entities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<article_entitiesUpdateInput, article_entitiesUncheckedUpdateInput>
  }

  /**
   * article_entities delete
   */
  export type article_entitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    /**
     * Filter which article_entities to delete.
     */
    where: article_entitiesWhereUniqueInput
  }

  /**
   * article_entities deleteMany
   */
  export type article_entitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which article_entities to delete
     */
    where?: article_entitiesWhereInput
    /**
     * Limit how many article_entities to delete.
     */
    limit?: number
  }

  /**
   * article_entities without action
   */
  export type article_entitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
  }


  /**
   * Model articles
   */

  export type AggregateArticles = {
    _count: ArticlesCountAggregateOutputType | null
    _avg: ArticlesAvgAggregateOutputType | null
    _sum: ArticlesSumAggregateOutputType | null
    _min: ArticlesMinAggregateOutputType | null
    _max: ArticlesMaxAggregateOutputType | null
  }

  export type ArticlesAvgAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type ArticlesSumAggregateOutputType = {
    lat: number | null
    lng: number | null
  }

  export type ArticlesMinAggregateOutputType = {
    id: string | null
    source: string | null
    title: string | null
    url: string | null
    image_url: string | null
    published_at: Date | null
    category: string | null
    author: string | null
    content: string | null
    summary: string | null
    lat: number | null
    lng: number | null
    location_name: string | null
    sentiment: $Enums.sentiment_type | null
    significance: string | null
    created_at: Date | null
    future_implications: string | null
  }

  export type ArticlesMaxAggregateOutputType = {
    id: string | null
    source: string | null
    title: string | null
    url: string | null
    image_url: string | null
    published_at: Date | null
    category: string | null
    author: string | null
    content: string | null
    summary: string | null
    lat: number | null
    lng: number | null
    location_name: string | null
    sentiment: $Enums.sentiment_type | null
    significance: string | null
    created_at: Date | null
    future_implications: string | null
  }

  export type ArticlesCountAggregateOutputType = {
    id: number
    source: number
    title: number
    url: number
    image_url: number
    published_at: number
    category: number
    author: number
    content: number
    summary: number
    lat: number
    lng: number
    location_name: number
    sentiment: number
    significance: number
    created_at: number
    future_implications: number
    _all: number
  }


  export type ArticlesAvgAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type ArticlesSumAggregateInputType = {
    lat?: true
    lng?: true
  }

  export type ArticlesMinAggregateInputType = {
    id?: true
    source?: true
    title?: true
    url?: true
    image_url?: true
    published_at?: true
    category?: true
    author?: true
    content?: true
    summary?: true
    lat?: true
    lng?: true
    location_name?: true
    sentiment?: true
    significance?: true
    created_at?: true
    future_implications?: true
  }

  export type ArticlesMaxAggregateInputType = {
    id?: true
    source?: true
    title?: true
    url?: true
    image_url?: true
    published_at?: true
    category?: true
    author?: true
    content?: true
    summary?: true
    lat?: true
    lng?: true
    location_name?: true
    sentiment?: true
    significance?: true
    created_at?: true
    future_implications?: true
  }

  export type ArticlesCountAggregateInputType = {
    id?: true
    source?: true
    title?: true
    url?: true
    image_url?: true
    published_at?: true
    category?: true
    author?: true
    content?: true
    summary?: true
    lat?: true
    lng?: true
    location_name?: true
    sentiment?: true
    significance?: true
    created_at?: true
    future_implications?: true
    _all?: true
  }

  export type ArticlesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which articles to aggregate.
     */
    where?: articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of articles to fetch.
     */
    orderBy?: articlesOrderByWithRelationInput | articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned articles
    **/
    _count?: true | ArticlesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ArticlesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ArticlesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ArticlesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ArticlesMaxAggregateInputType
  }

  export type GetArticlesAggregateType<T extends ArticlesAggregateArgs> = {
        [P in keyof T & keyof AggregateArticles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticles[P]>
      : GetScalarType<T[P], AggregateArticles[P]>
  }




  export type articlesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: articlesWhereInput
    orderBy?: articlesOrderByWithAggregationInput | articlesOrderByWithAggregationInput[]
    by: ArticlesScalarFieldEnum[] | ArticlesScalarFieldEnum
    having?: articlesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ArticlesCountAggregateInputType | true
    _avg?: ArticlesAvgAggregateInputType
    _sum?: ArticlesSumAggregateInputType
    _min?: ArticlesMinAggregateInputType
    _max?: ArticlesMaxAggregateInputType
  }

  export type ArticlesGroupByOutputType = {
    id: string
    source: string | null
    title: string | null
    url: string | null
    image_url: string | null
    published_at: Date | null
    category: string | null
    author: string | null
    content: string | null
    summary: string | null
    lat: number | null
    lng: number | null
    location_name: string | null
    sentiment: $Enums.sentiment_type | null
    significance: string | null
    created_at: Date | null
    future_implications: string | null
    _count: ArticlesCountAggregateOutputType | null
    _avg: ArticlesAvgAggregateOutputType | null
    _sum: ArticlesSumAggregateOutputType | null
    _min: ArticlesMinAggregateOutputType | null
    _max: ArticlesMaxAggregateOutputType | null
  }

  type GetArticlesGroupByPayload<T extends articlesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ArticlesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ArticlesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ArticlesGroupByOutputType[P]>
            : GetScalarType<T[P], ArticlesGroupByOutputType[P]>
        }
      >
    >


  export type articlesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    source?: boolean
    title?: boolean
    url?: boolean
    image_url?: boolean
    published_at?: boolean
    category?: boolean
    author?: boolean
    content?: boolean
    summary?: boolean
    lat?: boolean
    lng?: boolean
    location_name?: boolean
    sentiment?: boolean
    significance?: boolean
    created_at?: boolean
    future_implications?: boolean
    article_entities?: boolean | articles$article_entitiesArgs<ExtArgs>
    article_tags?: boolean | articles$article_tagsArgs<ExtArgs>
    bookmarks?: boolean | articles$bookmarksArgs<ExtArgs>
    geo_events?: boolean | articles$geo_eventsArgs<ExtArgs>
    likes?: boolean | articles$likesArgs<ExtArgs>
    views?: boolean | articles$viewsArgs<ExtArgs>
    _count?: boolean | ArticlesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["articles"]>

  export type articlesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    source?: boolean
    title?: boolean
    url?: boolean
    image_url?: boolean
    published_at?: boolean
    category?: boolean
    author?: boolean
    content?: boolean
    summary?: boolean
    lat?: boolean
    lng?: boolean
    location_name?: boolean
    sentiment?: boolean
    significance?: boolean
    created_at?: boolean
    future_implications?: boolean
  }, ExtArgs["result"]["articles"]>

  export type articlesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    source?: boolean
    title?: boolean
    url?: boolean
    image_url?: boolean
    published_at?: boolean
    category?: boolean
    author?: boolean
    content?: boolean
    summary?: boolean
    lat?: boolean
    lng?: boolean
    location_name?: boolean
    sentiment?: boolean
    significance?: boolean
    created_at?: boolean
    future_implications?: boolean
  }, ExtArgs["result"]["articles"]>

  export type articlesSelectScalar = {
    id?: boolean
    source?: boolean
    title?: boolean
    url?: boolean
    image_url?: boolean
    published_at?: boolean
    category?: boolean
    author?: boolean
    content?: boolean
    summary?: boolean
    lat?: boolean
    lng?: boolean
    location_name?: boolean
    sentiment?: boolean
    significance?: boolean
    created_at?: boolean
    future_implications?: boolean
  }

  export type articlesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "source" | "title" | "url" | "image_url" | "published_at" | "category" | "author" | "content" | "summary" | "lat" | "lng" | "location_name" | "sentiment" | "significance" | "created_at" | "future_implications", ExtArgs["result"]["articles"]>
  export type articlesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article_entities?: boolean | articles$article_entitiesArgs<ExtArgs>
    article_tags?: boolean | articles$article_tagsArgs<ExtArgs>
    bookmarks?: boolean | articles$bookmarksArgs<ExtArgs>
    geo_events?: boolean | articles$geo_eventsArgs<ExtArgs>
    likes?: boolean | articles$likesArgs<ExtArgs>
    views?: boolean | articles$viewsArgs<ExtArgs>
    _count?: boolean | ArticlesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type articlesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type articlesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $articlesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "articles"
    objects: {
      article_entities: Prisma.$article_entitiesPayload<ExtArgs>[]
      article_tags: Prisma.$article_tagsPayload<ExtArgs>[]
      bookmarks: Prisma.$bookmarksPayload<ExtArgs>[]
      geo_events: Prisma.$geo_eventsPayload<ExtArgs>[]
      likes: Prisma.$likesPayload<ExtArgs>[]
      views: Prisma.$viewsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      source: string | null
      title: string | null
      url: string | null
      image_url: string | null
      published_at: Date | null
      category: string | null
      author: string | null
      content: string | null
      summary: string | null
      lat: number | null
      lng: number | null
      location_name: string | null
      sentiment: $Enums.sentiment_type | null
      significance: string | null
      created_at: Date | null
      future_implications: string | null
    }, ExtArgs["result"]["articles"]>
    composites: {}
  }

  type articlesGetPayload<S extends boolean | null | undefined | articlesDefaultArgs> = $Result.GetResult<Prisma.$articlesPayload, S>

  type articlesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<articlesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ArticlesCountAggregateInputType | true
    }

  export interface articlesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['articles'], meta: { name: 'articles' } }
    /**
     * Find zero or one Articles that matches the filter.
     * @param {articlesFindUniqueArgs} args - Arguments to find a Articles
     * @example
     * // Get one Articles
     * const articles = await prisma.articles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends articlesFindUniqueArgs>(args: SelectSubset<T, articlesFindUniqueArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Articles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {articlesFindUniqueOrThrowArgs} args - Arguments to find a Articles
     * @example
     * // Get one Articles
     * const articles = await prisma.articles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends articlesFindUniqueOrThrowArgs>(args: SelectSubset<T, articlesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Articles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {articlesFindFirstArgs} args - Arguments to find a Articles
     * @example
     * // Get one Articles
     * const articles = await prisma.articles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends articlesFindFirstArgs>(args?: SelectSubset<T, articlesFindFirstArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Articles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {articlesFindFirstOrThrowArgs} args - Arguments to find a Articles
     * @example
     * // Get one Articles
     * const articles = await prisma.articles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends articlesFindFirstOrThrowArgs>(args?: SelectSubset<T, articlesFindFirstOrThrowArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Articles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {articlesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Articles
     * const articles = await prisma.articles.findMany()
     * 
     * // Get first 10 Articles
     * const articles = await prisma.articles.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const articlesWithIdOnly = await prisma.articles.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends articlesFindManyArgs>(args?: SelectSubset<T, articlesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Articles.
     * @param {articlesCreateArgs} args - Arguments to create a Articles.
     * @example
     * // Create one Articles
     * const Articles = await prisma.articles.create({
     *   data: {
     *     // ... data to create a Articles
     *   }
     * })
     * 
     */
    create<T extends articlesCreateArgs>(args: SelectSubset<T, articlesCreateArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Articles.
     * @param {articlesCreateManyArgs} args - Arguments to create many Articles.
     * @example
     * // Create many Articles
     * const articles = await prisma.articles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends articlesCreateManyArgs>(args?: SelectSubset<T, articlesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Articles and returns the data saved in the database.
     * @param {articlesCreateManyAndReturnArgs} args - Arguments to create many Articles.
     * @example
     * // Create many Articles
     * const articles = await prisma.articles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Articles and only return the `id`
     * const articlesWithIdOnly = await prisma.articles.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends articlesCreateManyAndReturnArgs>(args?: SelectSubset<T, articlesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Articles.
     * @param {articlesDeleteArgs} args - Arguments to delete one Articles.
     * @example
     * // Delete one Articles
     * const Articles = await prisma.articles.delete({
     *   where: {
     *     // ... filter to delete one Articles
     *   }
     * })
     * 
     */
    delete<T extends articlesDeleteArgs>(args: SelectSubset<T, articlesDeleteArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Articles.
     * @param {articlesUpdateArgs} args - Arguments to update one Articles.
     * @example
     * // Update one Articles
     * const articles = await prisma.articles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends articlesUpdateArgs>(args: SelectSubset<T, articlesUpdateArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Articles.
     * @param {articlesDeleteManyArgs} args - Arguments to filter Articles to delete.
     * @example
     * // Delete a few Articles
     * const { count } = await prisma.articles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends articlesDeleteManyArgs>(args?: SelectSubset<T, articlesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {articlesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Articles
     * const articles = await prisma.articles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends articlesUpdateManyArgs>(args: SelectSubset<T, articlesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Articles and returns the data updated in the database.
     * @param {articlesUpdateManyAndReturnArgs} args - Arguments to update many Articles.
     * @example
     * // Update many Articles
     * const articles = await prisma.articles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Articles and only return the `id`
     * const articlesWithIdOnly = await prisma.articles.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends articlesUpdateManyAndReturnArgs>(args: SelectSubset<T, articlesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Articles.
     * @param {articlesUpsertArgs} args - Arguments to update or create a Articles.
     * @example
     * // Update or create a Articles
     * const articles = await prisma.articles.upsert({
     *   create: {
     *     // ... data to create a Articles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Articles we want to update
     *   }
     * })
     */
    upsert<T extends articlesUpsertArgs>(args: SelectSubset<T, articlesUpsertArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {articlesCountArgs} args - Arguments to filter Articles to count.
     * @example
     * // Count the number of Articles
     * const count = await prisma.articles.count({
     *   where: {
     *     // ... the filter for the Articles we want to count
     *   }
     * })
    **/
    count<T extends articlesCountArgs>(
      args?: Subset<T, articlesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ArticlesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ArticlesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ArticlesAggregateArgs>(args: Subset<T, ArticlesAggregateArgs>): Prisma.PrismaPromise<GetArticlesAggregateType<T>>

    /**
     * Group by Articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {articlesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends articlesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: articlesGroupByArgs['orderBy'] }
        : { orderBy?: articlesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, articlesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticlesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the articles model
   */
  readonly fields: articlesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for articles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__articlesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    article_entities<T extends articles$article_entitiesArgs<ExtArgs> = {}>(args?: Subset<T, articles$article_entitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    article_tags<T extends articles$article_tagsArgs<ExtArgs> = {}>(args?: Subset<T, articles$article_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bookmarks<T extends articles$bookmarksArgs<ExtArgs> = {}>(args?: Subset<T, articles$bookmarksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    geo_events<T extends articles$geo_eventsArgs<ExtArgs> = {}>(args?: Subset<T, articles$geo_eventsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends articles$likesArgs<ExtArgs> = {}>(args?: Subset<T, articles$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    views<T extends articles$viewsArgs<ExtArgs> = {}>(args?: Subset<T, articles$viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the articles model
   */
  interface articlesFieldRefs {
    readonly id: FieldRef<"articles", 'String'>
    readonly source: FieldRef<"articles", 'String'>
    readonly title: FieldRef<"articles", 'String'>
    readonly url: FieldRef<"articles", 'String'>
    readonly image_url: FieldRef<"articles", 'String'>
    readonly published_at: FieldRef<"articles", 'DateTime'>
    readonly category: FieldRef<"articles", 'String'>
    readonly author: FieldRef<"articles", 'String'>
    readonly content: FieldRef<"articles", 'String'>
    readonly summary: FieldRef<"articles", 'String'>
    readonly lat: FieldRef<"articles", 'Float'>
    readonly lng: FieldRef<"articles", 'Float'>
    readonly location_name: FieldRef<"articles", 'String'>
    readonly sentiment: FieldRef<"articles", 'sentiment_type'>
    readonly significance: FieldRef<"articles", 'String'>
    readonly created_at: FieldRef<"articles", 'DateTime'>
    readonly future_implications: FieldRef<"articles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * articles findUnique
   */
  export type articlesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * Filter, which articles to fetch.
     */
    where: articlesWhereUniqueInput
  }

  /**
   * articles findUniqueOrThrow
   */
  export type articlesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * Filter, which articles to fetch.
     */
    where: articlesWhereUniqueInput
  }

  /**
   * articles findFirst
   */
  export type articlesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * Filter, which articles to fetch.
     */
    where?: articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of articles to fetch.
     */
    orderBy?: articlesOrderByWithRelationInput | articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for articles.
     */
    cursor?: articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of articles.
     */
    distinct?: ArticlesScalarFieldEnum | ArticlesScalarFieldEnum[]
  }

  /**
   * articles findFirstOrThrow
   */
  export type articlesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * Filter, which articles to fetch.
     */
    where?: articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of articles to fetch.
     */
    orderBy?: articlesOrderByWithRelationInput | articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for articles.
     */
    cursor?: articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of articles.
     */
    distinct?: ArticlesScalarFieldEnum | ArticlesScalarFieldEnum[]
  }

  /**
   * articles findMany
   */
  export type articlesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * Filter, which articles to fetch.
     */
    where?: articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of articles to fetch.
     */
    orderBy?: articlesOrderByWithRelationInput | articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing articles.
     */
    cursor?: articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` articles.
     */
    skip?: number
    distinct?: ArticlesScalarFieldEnum | ArticlesScalarFieldEnum[]
  }

  /**
   * articles create
   */
  export type articlesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * The data needed to create a articles.
     */
    data?: XOR<articlesCreateInput, articlesUncheckedCreateInput>
  }

  /**
   * articles createMany
   */
  export type articlesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many articles.
     */
    data: articlesCreateManyInput | articlesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * articles createManyAndReturn
   */
  export type articlesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * The data used to create many articles.
     */
    data: articlesCreateManyInput | articlesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * articles update
   */
  export type articlesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * The data needed to update a articles.
     */
    data: XOR<articlesUpdateInput, articlesUncheckedUpdateInput>
    /**
     * Choose, which articles to update.
     */
    where: articlesWhereUniqueInput
  }

  /**
   * articles updateMany
   */
  export type articlesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update articles.
     */
    data: XOR<articlesUpdateManyMutationInput, articlesUncheckedUpdateManyInput>
    /**
     * Filter which articles to update
     */
    where?: articlesWhereInput
    /**
     * Limit how many articles to update.
     */
    limit?: number
  }

  /**
   * articles updateManyAndReturn
   */
  export type articlesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * The data used to update articles.
     */
    data: XOR<articlesUpdateManyMutationInput, articlesUncheckedUpdateManyInput>
    /**
     * Filter which articles to update
     */
    where?: articlesWhereInput
    /**
     * Limit how many articles to update.
     */
    limit?: number
  }

  /**
   * articles upsert
   */
  export type articlesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * The filter to search for the articles to update in case it exists.
     */
    where: articlesWhereUniqueInput
    /**
     * In case the articles found by the `where` argument doesn't exist, create a new articles with this data.
     */
    create: XOR<articlesCreateInput, articlesUncheckedCreateInput>
    /**
     * In case the articles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<articlesUpdateInput, articlesUncheckedUpdateInput>
  }

  /**
   * articles delete
   */
  export type articlesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    /**
     * Filter which articles to delete.
     */
    where: articlesWhereUniqueInput
  }

  /**
   * articles deleteMany
   */
  export type articlesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which articles to delete
     */
    where?: articlesWhereInput
    /**
     * Limit how many articles to delete.
     */
    limit?: number
  }

  /**
   * articles.article_entities
   */
  export type articles$article_entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    where?: article_entitiesWhereInput
    orderBy?: article_entitiesOrderByWithRelationInput | article_entitiesOrderByWithRelationInput[]
    cursor?: article_entitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Article_entitiesScalarFieldEnum | Article_entitiesScalarFieldEnum[]
  }

  /**
   * articles.article_tags
   */
  export type articles$article_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    where?: article_tagsWhereInput
    orderBy?: article_tagsOrderByWithRelationInput | article_tagsOrderByWithRelationInput[]
    cursor?: article_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Article_tagsScalarFieldEnum | Article_tagsScalarFieldEnum[]
  }

  /**
   * articles.bookmarks
   */
  export type articles$bookmarksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    where?: bookmarksWhereInput
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    cursor?: bookmarksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BookmarksScalarFieldEnum | BookmarksScalarFieldEnum[]
  }

  /**
   * articles.geo_events
   */
  export type articles$geo_eventsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    where?: geo_eventsWhereInput
    orderBy?: geo_eventsOrderByWithRelationInput | geo_eventsOrderByWithRelationInput[]
    cursor?: geo_eventsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Geo_eventsScalarFieldEnum | Geo_eventsScalarFieldEnum[]
  }

  /**
   * articles.likes
   */
  export type articles$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    where?: likesWhereInput
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    cursor?: likesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * articles.views
   */
  export type articles$viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    where?: viewsWhereInput
    orderBy?: viewsOrderByWithRelationInput | viewsOrderByWithRelationInput[]
    cursor?: viewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ViewsScalarFieldEnum | ViewsScalarFieldEnum[]
  }

  /**
   * articles without action
   */
  export type articlesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
  }


  /**
   * Model entities
   */

  export type AggregateEntities = {
    _count: EntitiesCountAggregateOutputType | null
    _avg: EntitiesAvgAggregateOutputType | null
    _sum: EntitiesSumAggregateOutputType | null
    _min: EntitiesMinAggregateOutputType | null
    _max: EntitiesMaxAggregateOutputType | null
  }

  export type EntitiesAvgAggregateOutputType = {
    id: number | null
  }

  export type EntitiesSumAggregateOutputType = {
    id: bigint | null
  }

  export type EntitiesMinAggregateOutputType = {
    id: bigint | null
    name: string | null
    type: string | null
    description: string | null
    wiki_url: string | null
    created_at: Date | null
  }

  export type EntitiesMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
    type: string | null
    description: string | null
    wiki_url: string | null
    created_at: Date | null
  }

  export type EntitiesCountAggregateOutputType = {
    id: number
    name: number
    type: number
    description: number
    wiki_url: number
    created_at: number
    _all: number
  }


  export type EntitiesAvgAggregateInputType = {
    id?: true
  }

  export type EntitiesSumAggregateInputType = {
    id?: true
  }

  export type EntitiesMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    description?: true
    wiki_url?: true
    created_at?: true
  }

  export type EntitiesMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    description?: true
    wiki_url?: true
    created_at?: true
  }

  export type EntitiesCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    description?: true
    wiki_url?: true
    created_at?: true
    _all?: true
  }

  export type EntitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities to aggregate.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned entities
    **/
    _count?: true | EntitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: EntitiesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: EntitiesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: EntitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: EntitiesMaxAggregateInputType
  }

  export type GetEntitiesAggregateType<T extends EntitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateEntities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateEntities[P]>
      : GetScalarType<T[P], AggregateEntities[P]>
  }




  export type entitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: entitiesWhereInput
    orderBy?: entitiesOrderByWithAggregationInput | entitiesOrderByWithAggregationInput[]
    by: EntitiesScalarFieldEnum[] | EntitiesScalarFieldEnum
    having?: entitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: EntitiesCountAggregateInputType | true
    _avg?: EntitiesAvgAggregateInputType
    _sum?: EntitiesSumAggregateInputType
    _min?: EntitiesMinAggregateInputType
    _max?: EntitiesMaxAggregateInputType
  }

  export type EntitiesGroupByOutputType = {
    id: bigint
    name: string
    type: string
    description: string | null
    wiki_url: string | null
    created_at: Date | null
    _count: EntitiesCountAggregateOutputType | null
    _avg: EntitiesAvgAggregateOutputType | null
    _sum: EntitiesSumAggregateOutputType | null
    _min: EntitiesMinAggregateOutputType | null
    _max: EntitiesMaxAggregateOutputType | null
  }

  type GetEntitiesGroupByPayload<T extends entitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<EntitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof EntitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], EntitiesGroupByOutputType[P]>
            : GetScalarType<T[P], EntitiesGroupByOutputType[P]>
        }
      >
    >


  export type entitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    description?: boolean
    wiki_url?: boolean
    created_at?: boolean
    article_entities?: boolean | entities$article_entitiesArgs<ExtArgs>
    _count?: boolean | EntitiesCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["entities"]>

  export type entitiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    description?: boolean
    wiki_url?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["entities"]>

  export type entitiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    description?: boolean
    wiki_url?: boolean
    created_at?: boolean
  }, ExtArgs["result"]["entities"]>

  export type entitiesSelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    description?: boolean
    wiki_url?: boolean
    created_at?: boolean
  }

  export type entitiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "type" | "description" | "wiki_url" | "created_at", ExtArgs["result"]["entities"]>
  export type entitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article_entities?: boolean | entities$article_entitiesArgs<ExtArgs>
    _count?: boolean | EntitiesCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type entitiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type entitiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $entitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "entities"
    objects: {
      article_entities: Prisma.$article_entitiesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string
      type: string
      description: string | null
      wiki_url: string | null
      created_at: Date | null
    }, ExtArgs["result"]["entities"]>
    composites: {}
  }

  type entitiesGetPayload<S extends boolean | null | undefined | entitiesDefaultArgs> = $Result.GetResult<Prisma.$entitiesPayload, S>

  type entitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<entitiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: EntitiesCountAggregateInputType | true
    }

  export interface entitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['entities'], meta: { name: 'entities' } }
    /**
     * Find zero or one Entities that matches the filter.
     * @param {entitiesFindUniqueArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends entitiesFindUniqueArgs>(args: SelectSubset<T, entitiesFindUniqueArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Entities that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {entitiesFindUniqueOrThrowArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends entitiesFindUniqueOrThrowArgs>(args: SelectSubset<T, entitiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesFindFirstArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends entitiesFindFirstArgs>(args?: SelectSubset<T, entitiesFindFirstArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Entities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesFindFirstOrThrowArgs} args - Arguments to find a Entities
     * @example
     * // Get one Entities
     * const entities = await prisma.entities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends entitiesFindFirstOrThrowArgs>(args?: SelectSubset<T, entitiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Entities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Entities
     * const entities = await prisma.entities.findMany()
     * 
     * // Get first 10 Entities
     * const entities = await prisma.entities.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const entitiesWithIdOnly = await prisma.entities.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends entitiesFindManyArgs>(args?: SelectSubset<T, entitiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Entities.
     * @param {entitiesCreateArgs} args - Arguments to create a Entities.
     * @example
     * // Create one Entities
     * const Entities = await prisma.entities.create({
     *   data: {
     *     // ... data to create a Entities
     *   }
     * })
     * 
     */
    create<T extends entitiesCreateArgs>(args: SelectSubset<T, entitiesCreateArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Entities.
     * @param {entitiesCreateManyArgs} args - Arguments to create many Entities.
     * @example
     * // Create many Entities
     * const entities = await prisma.entities.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends entitiesCreateManyArgs>(args?: SelectSubset<T, entitiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Entities and returns the data saved in the database.
     * @param {entitiesCreateManyAndReturnArgs} args - Arguments to create many Entities.
     * @example
     * // Create many Entities
     * const entities = await prisma.entities.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Entities and only return the `id`
     * const entitiesWithIdOnly = await prisma.entities.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends entitiesCreateManyAndReturnArgs>(args?: SelectSubset<T, entitiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Entities.
     * @param {entitiesDeleteArgs} args - Arguments to delete one Entities.
     * @example
     * // Delete one Entities
     * const Entities = await prisma.entities.delete({
     *   where: {
     *     // ... filter to delete one Entities
     *   }
     * })
     * 
     */
    delete<T extends entitiesDeleteArgs>(args: SelectSubset<T, entitiesDeleteArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Entities.
     * @param {entitiesUpdateArgs} args - Arguments to update one Entities.
     * @example
     * // Update one Entities
     * const entities = await prisma.entities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends entitiesUpdateArgs>(args: SelectSubset<T, entitiesUpdateArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Entities.
     * @param {entitiesDeleteManyArgs} args - Arguments to filter Entities to delete.
     * @example
     * // Delete a few Entities
     * const { count } = await prisma.entities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends entitiesDeleteManyArgs>(args?: SelectSubset<T, entitiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Entities
     * const entities = await prisma.entities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends entitiesUpdateManyArgs>(args: SelectSubset<T, entitiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Entities and returns the data updated in the database.
     * @param {entitiesUpdateManyAndReturnArgs} args - Arguments to update many Entities.
     * @example
     * // Update many Entities
     * const entities = await prisma.entities.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Entities and only return the `id`
     * const entitiesWithIdOnly = await prisma.entities.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends entitiesUpdateManyAndReturnArgs>(args: SelectSubset<T, entitiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Entities.
     * @param {entitiesUpsertArgs} args - Arguments to update or create a Entities.
     * @example
     * // Update or create a Entities
     * const entities = await prisma.entities.upsert({
     *   create: {
     *     // ... data to create a Entities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Entities we want to update
     *   }
     * })
     */
    upsert<T extends entitiesUpsertArgs>(args: SelectSubset<T, entitiesUpsertArgs<ExtArgs>>): Prisma__entitiesClient<$Result.GetResult<Prisma.$entitiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesCountArgs} args - Arguments to filter Entities to count.
     * @example
     * // Count the number of Entities
     * const count = await prisma.entities.count({
     *   where: {
     *     // ... the filter for the Entities we want to count
     *   }
     * })
    **/
    count<T extends entitiesCountArgs>(
      args?: Subset<T, entitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], EntitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {EntitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends EntitiesAggregateArgs>(args: Subset<T, EntitiesAggregateArgs>): Prisma.PrismaPromise<GetEntitiesAggregateType<T>>

    /**
     * Group by Entities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {entitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends entitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: entitiesGroupByArgs['orderBy'] }
        : { orderBy?: entitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, entitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetEntitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the entities model
   */
  readonly fields: entitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for entities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__entitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    article_entities<T extends entities$article_entitiesArgs<ExtArgs> = {}>(args?: Subset<T, entities$article_entitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_entitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the entities model
   */
  interface entitiesFieldRefs {
    readonly id: FieldRef<"entities", 'BigInt'>
    readonly name: FieldRef<"entities", 'String'>
    readonly type: FieldRef<"entities", 'String'>
    readonly description: FieldRef<"entities", 'String'>
    readonly wiki_url: FieldRef<"entities", 'String'>
    readonly created_at: FieldRef<"entities", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * entities findUnique
   */
  export type entitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where: entitiesWhereUniqueInput
  }

  /**
   * entities findUniqueOrThrow
   */
  export type entitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where: entitiesWhereUniqueInput
  }

  /**
   * entities findFirst
   */
  export type entitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities.
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities.
     */
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }

  /**
   * entities findFirstOrThrow
   */
  export type entitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for entities.
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of entities.
     */
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }

  /**
   * entities findMany
   */
  export type entitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter, which entities to fetch.
     */
    where?: entitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of entities to fetch.
     */
    orderBy?: entitiesOrderByWithRelationInput | entitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing entities.
     */
    cursor?: entitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` entities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` entities.
     */
    skip?: number
    distinct?: EntitiesScalarFieldEnum | EntitiesScalarFieldEnum[]
  }

  /**
   * entities create
   */
  export type entitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a entities.
     */
    data: XOR<entitiesCreateInput, entitiesUncheckedCreateInput>
  }

  /**
   * entities createMany
   */
  export type entitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many entities.
     */
    data: entitiesCreateManyInput | entitiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * entities createManyAndReturn
   */
  export type entitiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * The data used to create many entities.
     */
    data: entitiesCreateManyInput | entitiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * entities update
   */
  export type entitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a entities.
     */
    data: XOR<entitiesUpdateInput, entitiesUncheckedUpdateInput>
    /**
     * Choose, which entities to update.
     */
    where: entitiesWhereUniqueInput
  }

  /**
   * entities updateMany
   */
  export type entitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update entities.
     */
    data: XOR<entitiesUpdateManyMutationInput, entitiesUncheckedUpdateManyInput>
    /**
     * Filter which entities to update
     */
    where?: entitiesWhereInput
    /**
     * Limit how many entities to update.
     */
    limit?: number
  }

  /**
   * entities updateManyAndReturn
   */
  export type entitiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * The data used to update entities.
     */
    data: XOR<entitiesUpdateManyMutationInput, entitiesUncheckedUpdateManyInput>
    /**
     * Filter which entities to update
     */
    where?: entitiesWhereInput
    /**
     * Limit how many entities to update.
     */
    limit?: number
  }

  /**
   * entities upsert
   */
  export type entitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the entities to update in case it exists.
     */
    where: entitiesWhereUniqueInput
    /**
     * In case the entities found by the `where` argument doesn't exist, create a new entities with this data.
     */
    create: XOR<entitiesCreateInput, entitiesUncheckedCreateInput>
    /**
     * In case the entities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<entitiesUpdateInput, entitiesUncheckedUpdateInput>
  }

  /**
   * entities delete
   */
  export type entitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
    /**
     * Filter which entities to delete.
     */
    where: entitiesWhereUniqueInput
  }

  /**
   * entities deleteMany
   */
  export type entitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which entities to delete
     */
    where?: entitiesWhereInput
    /**
     * Limit how many entities to delete.
     */
    limit?: number
  }

  /**
   * entities.article_entities
   */
  export type entities$article_entitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_entities
     */
    select?: article_entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_entities
     */
    omit?: article_entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_entitiesInclude<ExtArgs> | null
    where?: article_entitiesWhereInput
    orderBy?: article_entitiesOrderByWithRelationInput | article_entitiesOrderByWithRelationInput[]
    cursor?: article_entitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Article_entitiesScalarFieldEnum | Article_entitiesScalarFieldEnum[]
  }

  /**
   * entities without action
   */
  export type entitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the entities
     */
    select?: entitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the entities
     */
    omit?: entitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: entitiesInclude<ExtArgs> | null
  }


  /**
   * Model user_article_views
   */

  export type AggregateUser_article_views = {
    _count: User_article_viewsCountAggregateOutputType | null
    _avg: User_article_viewsAvgAggregateOutputType | null
    _sum: User_article_viewsSumAggregateOutputType | null
    _min: User_article_viewsMinAggregateOutputType | null
    _max: User_article_viewsMaxAggregateOutputType | null
  }

  export type User_article_viewsAvgAggregateOutputType = {
    id: number | null
  }

  export type User_article_viewsSumAggregateOutputType = {
    id: bigint | null
  }

  export type User_article_viewsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    viewed_at: Date | null
    liked: boolean | null
    bookmarked: boolean | null
  }

  export type User_article_viewsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    viewed_at: Date | null
    liked: boolean | null
    bookmarked: boolean | null
  }

  export type User_article_viewsCountAggregateOutputType = {
    id: number
    user_id: number
    article_id: number
    viewed_at: number
    liked: number
    bookmarked: number
    _all: number
  }


  export type User_article_viewsAvgAggregateInputType = {
    id?: true
  }

  export type User_article_viewsSumAggregateInputType = {
    id?: true
  }

  export type User_article_viewsMinAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    viewed_at?: true
    liked?: true
    bookmarked?: true
  }

  export type User_article_viewsMaxAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    viewed_at?: true
    liked?: true
    bookmarked?: true
  }

  export type User_article_viewsCountAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    viewed_at?: true
    liked?: true
    bookmarked?: true
    _all?: true
  }

  export type User_article_viewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_article_views to aggregate.
     */
    where?: user_article_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_article_views to fetch.
     */
    orderBy?: user_article_viewsOrderByWithRelationInput | user_article_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_article_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_article_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_article_views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_article_views
    **/
    _count?: true | User_article_viewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_article_viewsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_article_viewsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_article_viewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_article_viewsMaxAggregateInputType
  }

  export type GetUser_article_viewsAggregateType<T extends User_article_viewsAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_article_views]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_article_views[P]>
      : GetScalarType<T[P], AggregateUser_article_views[P]>
  }




  export type user_article_viewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_article_viewsWhereInput
    orderBy?: user_article_viewsOrderByWithAggregationInput | user_article_viewsOrderByWithAggregationInput[]
    by: User_article_viewsScalarFieldEnum[] | User_article_viewsScalarFieldEnum
    having?: user_article_viewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_article_viewsCountAggregateInputType | true
    _avg?: User_article_viewsAvgAggregateInputType
    _sum?: User_article_viewsSumAggregateInputType
    _min?: User_article_viewsMinAggregateInputType
    _max?: User_article_viewsMaxAggregateInputType
  }

  export type User_article_viewsGroupByOutputType = {
    id: bigint
    user_id: string | null
    article_id: string | null
    viewed_at: Date | null
    liked: boolean | null
    bookmarked: boolean | null
    _count: User_article_viewsCountAggregateOutputType | null
    _avg: User_article_viewsAvgAggregateOutputType | null
    _sum: User_article_viewsSumAggregateOutputType | null
    _min: User_article_viewsMinAggregateOutputType | null
    _max: User_article_viewsMaxAggregateOutputType | null
  }

  type GetUser_article_viewsGroupByPayload<T extends user_article_viewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_article_viewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_article_viewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_article_viewsGroupByOutputType[P]>
            : GetScalarType<T[P], User_article_viewsGroupByOutputType[P]>
        }
      >
    >


  export type user_article_viewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    liked?: boolean
    bookmarked?: boolean
  }, ExtArgs["result"]["user_article_views"]>

  export type user_article_viewsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    liked?: boolean
    bookmarked?: boolean
  }, ExtArgs["result"]["user_article_views"]>

  export type user_article_viewsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    liked?: boolean
    bookmarked?: boolean
  }, ExtArgs["result"]["user_article_views"]>

  export type user_article_viewsSelectScalar = {
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    liked?: boolean
    bookmarked?: boolean
  }

  export type user_article_viewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "article_id" | "viewed_at" | "liked" | "bookmarked", ExtArgs["result"]["user_article_views"]>

  export type $user_article_viewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_article_views"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string | null
      article_id: string | null
      viewed_at: Date | null
      liked: boolean | null
      bookmarked: boolean | null
    }, ExtArgs["result"]["user_article_views"]>
    composites: {}
  }

  type user_article_viewsGetPayload<S extends boolean | null | undefined | user_article_viewsDefaultArgs> = $Result.GetResult<Prisma.$user_article_viewsPayload, S>

  type user_article_viewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<user_article_viewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: User_article_viewsCountAggregateInputType | true
    }

  export interface user_article_viewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_article_views'], meta: { name: 'user_article_views' } }
    /**
     * Find zero or one User_article_views that matches the filter.
     * @param {user_article_viewsFindUniqueArgs} args - Arguments to find a User_article_views
     * @example
     * // Get one User_article_views
     * const user_article_views = await prisma.user_article_views.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_article_viewsFindUniqueArgs>(args: SelectSubset<T, user_article_viewsFindUniqueArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one User_article_views that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {user_article_viewsFindUniqueOrThrowArgs} args - Arguments to find a User_article_views
     * @example
     * // Get one User_article_views
     * const user_article_views = await prisma.user_article_views.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_article_viewsFindUniqueOrThrowArgs>(args: SelectSubset<T, user_article_viewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_article_views that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_article_viewsFindFirstArgs} args - Arguments to find a User_article_views
     * @example
     * // Get one User_article_views
     * const user_article_views = await prisma.user_article_views.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_article_viewsFindFirstArgs>(args?: SelectSubset<T, user_article_viewsFindFirstArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first User_article_views that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_article_viewsFindFirstOrThrowArgs} args - Arguments to find a User_article_views
     * @example
     * // Get one User_article_views
     * const user_article_views = await prisma.user_article_views.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_article_viewsFindFirstOrThrowArgs>(args?: SelectSubset<T, user_article_viewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more User_article_views that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_article_viewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_article_views
     * const user_article_views = await prisma.user_article_views.findMany()
     * 
     * // Get first 10 User_article_views
     * const user_article_views = await prisma.user_article_views.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_article_viewsWithIdOnly = await prisma.user_article_views.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_article_viewsFindManyArgs>(args?: SelectSubset<T, user_article_viewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a User_article_views.
     * @param {user_article_viewsCreateArgs} args - Arguments to create a User_article_views.
     * @example
     * // Create one User_article_views
     * const User_article_views = await prisma.user_article_views.create({
     *   data: {
     *     // ... data to create a User_article_views
     *   }
     * })
     * 
     */
    create<T extends user_article_viewsCreateArgs>(args: SelectSubset<T, user_article_viewsCreateArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many User_article_views.
     * @param {user_article_viewsCreateManyArgs} args - Arguments to create many User_article_views.
     * @example
     * // Create many User_article_views
     * const user_article_views = await prisma.user_article_views.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_article_viewsCreateManyArgs>(args?: SelectSubset<T, user_article_viewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many User_article_views and returns the data saved in the database.
     * @param {user_article_viewsCreateManyAndReturnArgs} args - Arguments to create many User_article_views.
     * @example
     * // Create many User_article_views
     * const user_article_views = await prisma.user_article_views.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many User_article_views and only return the `id`
     * const user_article_viewsWithIdOnly = await prisma.user_article_views.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends user_article_viewsCreateManyAndReturnArgs>(args?: SelectSubset<T, user_article_viewsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a User_article_views.
     * @param {user_article_viewsDeleteArgs} args - Arguments to delete one User_article_views.
     * @example
     * // Delete one User_article_views
     * const User_article_views = await prisma.user_article_views.delete({
     *   where: {
     *     // ... filter to delete one User_article_views
     *   }
     * })
     * 
     */
    delete<T extends user_article_viewsDeleteArgs>(args: SelectSubset<T, user_article_viewsDeleteArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one User_article_views.
     * @param {user_article_viewsUpdateArgs} args - Arguments to update one User_article_views.
     * @example
     * // Update one User_article_views
     * const user_article_views = await prisma.user_article_views.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_article_viewsUpdateArgs>(args: SelectSubset<T, user_article_viewsUpdateArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more User_article_views.
     * @param {user_article_viewsDeleteManyArgs} args - Arguments to filter User_article_views to delete.
     * @example
     * // Delete a few User_article_views
     * const { count } = await prisma.user_article_views.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_article_viewsDeleteManyArgs>(args?: SelectSubset<T, user_article_viewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_article_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_article_viewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_article_views
     * const user_article_views = await prisma.user_article_views.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_article_viewsUpdateManyArgs>(args: SelectSubset<T, user_article_viewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_article_views and returns the data updated in the database.
     * @param {user_article_viewsUpdateManyAndReturnArgs} args - Arguments to update many User_article_views.
     * @example
     * // Update many User_article_views
     * const user_article_views = await prisma.user_article_views.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more User_article_views and only return the `id`
     * const user_article_viewsWithIdOnly = await prisma.user_article_views.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends user_article_viewsUpdateManyAndReturnArgs>(args: SelectSubset<T, user_article_viewsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one User_article_views.
     * @param {user_article_viewsUpsertArgs} args - Arguments to update or create a User_article_views.
     * @example
     * // Update or create a User_article_views
     * const user_article_views = await prisma.user_article_views.upsert({
     *   create: {
     *     // ... data to create a User_article_views
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_article_views we want to update
     *   }
     * })
     */
    upsert<T extends user_article_viewsUpsertArgs>(args: SelectSubset<T, user_article_viewsUpsertArgs<ExtArgs>>): Prisma__user_article_viewsClient<$Result.GetResult<Prisma.$user_article_viewsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of User_article_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_article_viewsCountArgs} args - Arguments to filter User_article_views to count.
     * @example
     * // Count the number of User_article_views
     * const count = await prisma.user_article_views.count({
     *   where: {
     *     // ... the filter for the User_article_views we want to count
     *   }
     * })
    **/
    count<T extends user_article_viewsCountArgs>(
      args?: Subset<T, user_article_viewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_article_viewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_article_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_article_viewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_article_viewsAggregateArgs>(args: Subset<T, User_article_viewsAggregateArgs>): Prisma.PrismaPromise<GetUser_article_viewsAggregateType<T>>

    /**
     * Group by User_article_views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_article_viewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_article_viewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_article_viewsGroupByArgs['orderBy'] }
        : { orderBy?: user_article_viewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_article_viewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_article_viewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_article_views model
   */
  readonly fields: user_article_viewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_article_views.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_article_viewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_article_views model
   */
  interface user_article_viewsFieldRefs {
    readonly id: FieldRef<"user_article_views", 'BigInt'>
    readonly user_id: FieldRef<"user_article_views", 'String'>
    readonly article_id: FieldRef<"user_article_views", 'String'>
    readonly viewed_at: FieldRef<"user_article_views", 'DateTime'>
    readonly liked: FieldRef<"user_article_views", 'Boolean'>
    readonly bookmarked: FieldRef<"user_article_views", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * user_article_views findUnique
   */
  export type user_article_viewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * Filter, which user_article_views to fetch.
     */
    where: user_article_viewsWhereUniqueInput
  }

  /**
   * user_article_views findUniqueOrThrow
   */
  export type user_article_viewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * Filter, which user_article_views to fetch.
     */
    where: user_article_viewsWhereUniqueInput
  }

  /**
   * user_article_views findFirst
   */
  export type user_article_viewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * Filter, which user_article_views to fetch.
     */
    where?: user_article_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_article_views to fetch.
     */
    orderBy?: user_article_viewsOrderByWithRelationInput | user_article_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_article_views.
     */
    cursor?: user_article_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_article_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_article_views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_article_views.
     */
    distinct?: User_article_viewsScalarFieldEnum | User_article_viewsScalarFieldEnum[]
  }

  /**
   * user_article_views findFirstOrThrow
   */
  export type user_article_viewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * Filter, which user_article_views to fetch.
     */
    where?: user_article_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_article_views to fetch.
     */
    orderBy?: user_article_viewsOrderByWithRelationInput | user_article_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_article_views.
     */
    cursor?: user_article_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_article_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_article_views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_article_views.
     */
    distinct?: User_article_viewsScalarFieldEnum | User_article_viewsScalarFieldEnum[]
  }

  /**
   * user_article_views findMany
   */
  export type user_article_viewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * Filter, which user_article_views to fetch.
     */
    where?: user_article_viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_article_views to fetch.
     */
    orderBy?: user_article_viewsOrderByWithRelationInput | user_article_viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_article_views.
     */
    cursor?: user_article_viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_article_views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_article_views.
     */
    skip?: number
    distinct?: User_article_viewsScalarFieldEnum | User_article_viewsScalarFieldEnum[]
  }

  /**
   * user_article_views create
   */
  export type user_article_viewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * The data needed to create a user_article_views.
     */
    data?: XOR<user_article_viewsCreateInput, user_article_viewsUncheckedCreateInput>
  }

  /**
   * user_article_views createMany
   */
  export type user_article_viewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_article_views.
     */
    data: user_article_viewsCreateManyInput | user_article_viewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_article_views createManyAndReturn
   */
  export type user_article_viewsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * The data used to create many user_article_views.
     */
    data: user_article_viewsCreateManyInput | user_article_viewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_article_views update
   */
  export type user_article_viewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * The data needed to update a user_article_views.
     */
    data: XOR<user_article_viewsUpdateInput, user_article_viewsUncheckedUpdateInput>
    /**
     * Choose, which user_article_views to update.
     */
    where: user_article_viewsWhereUniqueInput
  }

  /**
   * user_article_views updateMany
   */
  export type user_article_viewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_article_views.
     */
    data: XOR<user_article_viewsUpdateManyMutationInput, user_article_viewsUncheckedUpdateManyInput>
    /**
     * Filter which user_article_views to update
     */
    where?: user_article_viewsWhereInput
    /**
     * Limit how many user_article_views to update.
     */
    limit?: number
  }

  /**
   * user_article_views updateManyAndReturn
   */
  export type user_article_viewsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * The data used to update user_article_views.
     */
    data: XOR<user_article_viewsUpdateManyMutationInput, user_article_viewsUncheckedUpdateManyInput>
    /**
     * Filter which user_article_views to update
     */
    where?: user_article_viewsWhereInput
    /**
     * Limit how many user_article_views to update.
     */
    limit?: number
  }

  /**
   * user_article_views upsert
   */
  export type user_article_viewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * The filter to search for the user_article_views to update in case it exists.
     */
    where: user_article_viewsWhereUniqueInput
    /**
     * In case the user_article_views found by the `where` argument doesn't exist, create a new user_article_views with this data.
     */
    create: XOR<user_article_viewsCreateInput, user_article_viewsUncheckedCreateInput>
    /**
     * In case the user_article_views was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_article_viewsUpdateInput, user_article_viewsUncheckedUpdateInput>
  }

  /**
   * user_article_views delete
   */
  export type user_article_viewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
    /**
     * Filter which user_article_views to delete.
     */
    where: user_article_viewsWhereUniqueInput
  }

  /**
   * user_article_views deleteMany
   */
  export type user_article_viewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_article_views to delete
     */
    where?: user_article_viewsWhereInput
    /**
     * Limit how many user_article_views to delete.
     */
    limit?: number
  }

  /**
   * user_article_views without action
   */
  export type user_article_viewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_article_views
     */
    select?: user_article_viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the user_article_views
     */
    omit?: user_article_viewsOmit<ExtArgs> | null
  }


  /**
   * Model public_users
   */

  export type AggregatePublic_users = {
    _count: Public_usersCountAggregateOutputType | null
    _min: Public_usersMinAggregateOutputType | null
    _max: Public_usersMaxAggregateOutputType | null
  }

  export type Public_usersMinAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    created_at: Date | null
    last_active: Date | null
  }

  export type Public_usersMaxAggregateOutputType = {
    id: string | null
    name: string | null
    email: string | null
    password: string | null
    created_at: Date | null
    last_active: Date | null
  }

  export type Public_usersCountAggregateOutputType = {
    id: number
    name: number
    email: number
    password: number
    preferences: number
    created_at: number
    last_active: number
    _all: number
  }


  export type Public_usersMinAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    created_at?: true
    last_active?: true
  }

  export type Public_usersMaxAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    created_at?: true
    last_active?: true
  }

  export type Public_usersCountAggregateInputType = {
    id?: true
    name?: true
    email?: true
    password?: true
    preferences?: true
    created_at?: true
    last_active?: true
    _all?: true
  }

  export type Public_usersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which public_users to aggregate.
     */
    where?: public_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_users to fetch.
     */
    orderBy?: public_usersOrderByWithRelationInput | public_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: public_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned public_users
    **/
    _count?: true | Public_usersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Public_usersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Public_usersMaxAggregateInputType
  }

  export type GetPublic_usersAggregateType<T extends Public_usersAggregateArgs> = {
        [P in keyof T & keyof AggregatePublic_users]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublic_users[P]>
      : GetScalarType<T[P], AggregatePublic_users[P]>
  }




  export type public_usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: public_usersWhereInput
    orderBy?: public_usersOrderByWithAggregationInput | public_usersOrderByWithAggregationInput[]
    by: Public_usersScalarFieldEnum[] | Public_usersScalarFieldEnum
    having?: public_usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Public_usersCountAggregateInputType | true
    _min?: Public_usersMinAggregateInputType
    _max?: Public_usersMaxAggregateInputType
  }

  export type Public_usersGroupByOutputType = {
    id: string
    name: string | null
    email: string | null
    password: string | null
    preferences: JsonValue | null
    created_at: Date | null
    last_active: Date | null
    _count: Public_usersCountAggregateOutputType | null
    _min: Public_usersMinAggregateOutputType | null
    _max: Public_usersMaxAggregateOutputType | null
  }

  type GetPublic_usersGroupByPayload<T extends public_usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Public_usersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Public_usersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Public_usersGroupByOutputType[P]>
            : GetScalarType<T[P], Public_usersGroupByOutputType[P]>
        }
      >
    >


  export type public_usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    preferences?: boolean
    created_at?: boolean
    last_active?: boolean
    bookmark_folders?: boolean | public_users$bookmark_foldersArgs<ExtArgs>
    bookmarks?: boolean | public_users$bookmarksArgs<ExtArgs>
    likes?: boolean | public_users$likesArgs<ExtArgs>
    sessions?: boolean | public_users$sessionsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    views?: boolean | public_users$viewsArgs<ExtArgs>
    _count?: boolean | Public_usersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["public_users"]>

  export type public_usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    preferences?: boolean
    created_at?: boolean
    last_active?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["public_users"]>

  export type public_usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    preferences?: boolean
    created_at?: boolean
    last_active?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["public_users"]>

  export type public_usersSelectScalar = {
    id?: boolean
    name?: boolean
    email?: boolean
    password?: boolean
    preferences?: boolean
    created_at?: boolean
    last_active?: boolean
  }

  export type public_usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name" | "email" | "password" | "preferences" | "created_at" | "last_active", ExtArgs["result"]["public_users"]>
  export type public_usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    bookmark_folders?: boolean | public_users$bookmark_foldersArgs<ExtArgs>
    bookmarks?: boolean | public_users$bookmarksArgs<ExtArgs>
    likes?: boolean | public_users$likesArgs<ExtArgs>
    sessions?: boolean | public_users$sessionsArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    views?: boolean | public_users$viewsArgs<ExtArgs>
    _count?: boolean | Public_usersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type public_usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type public_usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $public_usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "public_users"
    objects: {
      bookmark_folders: Prisma.$bookmark_foldersPayload<ExtArgs>[]
      bookmarks: Prisma.$bookmarksPayload<ExtArgs>[]
      likes: Prisma.$likesPayload<ExtArgs>[]
      sessions: Prisma.$public_sessionsPayload<ExtArgs> | null
      users: Prisma.$usersPayload<ExtArgs>
      views: Prisma.$viewsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string | null
      email: string | null
      password: string | null
      preferences: Prisma.JsonValue | null
      created_at: Date | null
      last_active: Date | null
    }, ExtArgs["result"]["public_users"]>
    composites: {}
  }

  type public_usersGetPayload<S extends boolean | null | undefined | public_usersDefaultArgs> = $Result.GetResult<Prisma.$public_usersPayload, S>

  type public_usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<public_usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Public_usersCountAggregateInputType | true
    }

  export interface public_usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['public_users'], meta: { name: 'public_users' } }
    /**
     * Find zero or one Public_users that matches the filter.
     * @param {public_usersFindUniqueArgs} args - Arguments to find a Public_users
     * @example
     * // Get one Public_users
     * const public_users = await prisma.public_users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends public_usersFindUniqueArgs>(args: SelectSubset<T, public_usersFindUniqueArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Public_users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {public_usersFindUniqueOrThrowArgs} args - Arguments to find a Public_users
     * @example
     * // Get one Public_users
     * const public_users = await prisma.public_users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends public_usersFindUniqueOrThrowArgs>(args: SelectSubset<T, public_usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Public_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_usersFindFirstArgs} args - Arguments to find a Public_users
     * @example
     * // Get one Public_users
     * const public_users = await prisma.public_users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends public_usersFindFirstArgs>(args?: SelectSubset<T, public_usersFindFirstArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Public_users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_usersFindFirstOrThrowArgs} args - Arguments to find a Public_users
     * @example
     * // Get one Public_users
     * const public_users = await prisma.public_users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends public_usersFindFirstOrThrowArgs>(args?: SelectSubset<T, public_usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Public_users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Public_users
     * const public_users = await prisma.public_users.findMany()
     * 
     * // Get first 10 Public_users
     * const public_users = await prisma.public_users.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const public_usersWithIdOnly = await prisma.public_users.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends public_usersFindManyArgs>(args?: SelectSubset<T, public_usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Public_users.
     * @param {public_usersCreateArgs} args - Arguments to create a Public_users.
     * @example
     * // Create one Public_users
     * const Public_users = await prisma.public_users.create({
     *   data: {
     *     // ... data to create a Public_users
     *   }
     * })
     * 
     */
    create<T extends public_usersCreateArgs>(args: SelectSubset<T, public_usersCreateArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Public_users.
     * @param {public_usersCreateManyArgs} args - Arguments to create many Public_users.
     * @example
     * // Create many Public_users
     * const public_users = await prisma.public_users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends public_usersCreateManyArgs>(args?: SelectSubset<T, public_usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Public_users and returns the data saved in the database.
     * @param {public_usersCreateManyAndReturnArgs} args - Arguments to create many Public_users.
     * @example
     * // Create many Public_users
     * const public_users = await prisma.public_users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Public_users and only return the `id`
     * const public_usersWithIdOnly = await prisma.public_users.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends public_usersCreateManyAndReturnArgs>(args?: SelectSubset<T, public_usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Public_users.
     * @param {public_usersDeleteArgs} args - Arguments to delete one Public_users.
     * @example
     * // Delete one Public_users
     * const Public_users = await prisma.public_users.delete({
     *   where: {
     *     // ... filter to delete one Public_users
     *   }
     * })
     * 
     */
    delete<T extends public_usersDeleteArgs>(args: SelectSubset<T, public_usersDeleteArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Public_users.
     * @param {public_usersUpdateArgs} args - Arguments to update one Public_users.
     * @example
     * // Update one Public_users
     * const public_users = await prisma.public_users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends public_usersUpdateArgs>(args: SelectSubset<T, public_usersUpdateArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Public_users.
     * @param {public_usersDeleteManyArgs} args - Arguments to filter Public_users to delete.
     * @example
     * // Delete a few Public_users
     * const { count } = await prisma.public_users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends public_usersDeleteManyArgs>(args?: SelectSubset<T, public_usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Public_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Public_users
     * const public_users = await prisma.public_users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends public_usersUpdateManyArgs>(args: SelectSubset<T, public_usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Public_users and returns the data updated in the database.
     * @param {public_usersUpdateManyAndReturnArgs} args - Arguments to update many Public_users.
     * @example
     * // Update many Public_users
     * const public_users = await prisma.public_users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Public_users and only return the `id`
     * const public_usersWithIdOnly = await prisma.public_users.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends public_usersUpdateManyAndReturnArgs>(args: SelectSubset<T, public_usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Public_users.
     * @param {public_usersUpsertArgs} args - Arguments to update or create a Public_users.
     * @example
     * // Update or create a Public_users
     * const public_users = await prisma.public_users.upsert({
     *   create: {
     *     // ... data to create a Public_users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Public_users we want to update
     *   }
     * })
     */
    upsert<T extends public_usersUpsertArgs>(args: SelectSubset<T, public_usersUpsertArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Public_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_usersCountArgs} args - Arguments to filter Public_users to count.
     * @example
     * // Count the number of Public_users
     * const count = await prisma.public_users.count({
     *   where: {
     *     // ... the filter for the Public_users we want to count
     *   }
     * })
    **/
    count<T extends public_usersCountArgs>(
      args?: Subset<T, public_usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Public_usersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Public_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Public_usersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Public_usersAggregateArgs>(args: Subset<T, Public_usersAggregateArgs>): Prisma.PrismaPromise<GetPublic_usersAggregateType<T>>

    /**
     * Group by Public_users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends public_usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: public_usersGroupByArgs['orderBy'] }
        : { orderBy?: public_usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, public_usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublic_usersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the public_users model
   */
  readonly fields: public_usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for public_users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__public_usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    bookmark_folders<T extends public_users$bookmark_foldersArgs<ExtArgs> = {}>(args?: Subset<T, public_users$bookmark_foldersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    bookmarks<T extends public_users$bookmarksArgs<ExtArgs> = {}>(args?: Subset<T, public_users$bookmarksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    likes<T extends public_users$likesArgs<ExtArgs> = {}>(args?: Subset<T, public_users$likesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends public_users$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, public_users$sessionsArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    views<T extends public_users$viewsArgs<ExtArgs> = {}>(args?: Subset<T, public_users$viewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the public_users model
   */
  interface public_usersFieldRefs {
    readonly id: FieldRef<"public_users", 'String'>
    readonly name: FieldRef<"public_users", 'String'>
    readonly email: FieldRef<"public_users", 'String'>
    readonly password: FieldRef<"public_users", 'String'>
    readonly preferences: FieldRef<"public_users", 'Json'>
    readonly created_at: FieldRef<"public_users", 'DateTime'>
    readonly last_active: FieldRef<"public_users", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * public_users findUnique
   */
  export type public_usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * Filter, which public_users to fetch.
     */
    where: public_usersWhereUniqueInput
  }

  /**
   * public_users findUniqueOrThrow
   */
  export type public_usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * Filter, which public_users to fetch.
     */
    where: public_usersWhereUniqueInput
  }

  /**
   * public_users findFirst
   */
  export type public_usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * Filter, which public_users to fetch.
     */
    where?: public_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_users to fetch.
     */
    orderBy?: public_usersOrderByWithRelationInput | public_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for public_users.
     */
    cursor?: public_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of public_users.
     */
    distinct?: Public_usersScalarFieldEnum | Public_usersScalarFieldEnum[]
  }

  /**
   * public_users findFirstOrThrow
   */
  export type public_usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * Filter, which public_users to fetch.
     */
    where?: public_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_users to fetch.
     */
    orderBy?: public_usersOrderByWithRelationInput | public_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for public_users.
     */
    cursor?: public_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of public_users.
     */
    distinct?: Public_usersScalarFieldEnum | Public_usersScalarFieldEnum[]
  }

  /**
   * public_users findMany
   */
  export type public_usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * Filter, which public_users to fetch.
     */
    where?: public_usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_users to fetch.
     */
    orderBy?: public_usersOrderByWithRelationInput | public_usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing public_users.
     */
    cursor?: public_usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_users.
     */
    skip?: number
    distinct?: Public_usersScalarFieldEnum | Public_usersScalarFieldEnum[]
  }

  /**
   * public_users create
   */
  export type public_usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * The data needed to create a public_users.
     */
    data: XOR<public_usersCreateInput, public_usersUncheckedCreateInput>
  }

  /**
   * public_users createMany
   */
  export type public_usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many public_users.
     */
    data: public_usersCreateManyInput | public_usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * public_users createManyAndReturn
   */
  export type public_usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * The data used to create many public_users.
     */
    data: public_usersCreateManyInput | public_usersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * public_users update
   */
  export type public_usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * The data needed to update a public_users.
     */
    data: XOR<public_usersUpdateInput, public_usersUncheckedUpdateInput>
    /**
     * Choose, which public_users to update.
     */
    where: public_usersWhereUniqueInput
  }

  /**
   * public_users updateMany
   */
  export type public_usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update public_users.
     */
    data: XOR<public_usersUpdateManyMutationInput, public_usersUncheckedUpdateManyInput>
    /**
     * Filter which public_users to update
     */
    where?: public_usersWhereInput
    /**
     * Limit how many public_users to update.
     */
    limit?: number
  }

  /**
   * public_users updateManyAndReturn
   */
  export type public_usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * The data used to update public_users.
     */
    data: XOR<public_usersUpdateManyMutationInput, public_usersUncheckedUpdateManyInput>
    /**
     * Filter which public_users to update
     */
    where?: public_usersWhereInput
    /**
     * Limit how many public_users to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * public_users upsert
   */
  export type public_usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * The filter to search for the public_users to update in case it exists.
     */
    where: public_usersWhereUniqueInput
    /**
     * In case the public_users found by the `where` argument doesn't exist, create a new public_users with this data.
     */
    create: XOR<public_usersCreateInput, public_usersUncheckedCreateInput>
    /**
     * In case the public_users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<public_usersUpdateInput, public_usersUncheckedUpdateInput>
  }

  /**
   * public_users delete
   */
  export type public_usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    /**
     * Filter which public_users to delete.
     */
    where: public_usersWhereUniqueInput
  }

  /**
   * public_users deleteMany
   */
  export type public_usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which public_users to delete
     */
    where?: public_usersWhereInput
    /**
     * Limit how many public_users to delete.
     */
    limit?: number
  }

  /**
   * public_users.bookmark_folders
   */
  export type public_users$bookmark_foldersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    where?: bookmark_foldersWhereInput
    orderBy?: bookmark_foldersOrderByWithRelationInput | bookmark_foldersOrderByWithRelationInput[]
    cursor?: bookmark_foldersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Bookmark_foldersScalarFieldEnum | Bookmark_foldersScalarFieldEnum[]
  }

  /**
   * public_users.bookmarks
   */
  export type public_users$bookmarksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    where?: bookmarksWhereInput
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    cursor?: bookmarksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BookmarksScalarFieldEnum | BookmarksScalarFieldEnum[]
  }

  /**
   * public_users.likes
   */
  export type public_users$likesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    where?: likesWhereInput
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    cursor?: likesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * public_users.sessions
   */
  export type public_users$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    where?: public_sessionsWhereInput
  }

  /**
   * public_users.views
   */
  export type public_users$viewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    where?: viewsWhereInput
    orderBy?: viewsOrderByWithRelationInput | viewsOrderByWithRelationInput[]
    cursor?: viewsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ViewsScalarFieldEnum | ViewsScalarFieldEnum[]
  }

  /**
   * public_users without action
   */
  export type public_usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
  }


  /**
   * Model weekly_forecasts
   */

  export type AggregateWeekly_forecasts = {
    _count: Weekly_forecastsCountAggregateOutputType | null
    _avg: Weekly_forecastsAvgAggregateOutputType | null
    _sum: Weekly_forecastsSumAggregateOutputType | null
    _min: Weekly_forecastsMinAggregateOutputType | null
    _max: Weekly_forecastsMaxAggregateOutputType | null
  }

  export type Weekly_forecastsAvgAggregateOutputType = {
    id: number | null
  }

  export type Weekly_forecastsSumAggregateOutputType = {
    id: bigint | null
  }

  export type Weekly_forecastsMinAggregateOutputType = {
    id: bigint | null
    week_start: Date | null
    generated_at: Date | null
    content: string | null
  }

  export type Weekly_forecastsMaxAggregateOutputType = {
    id: bigint | null
    week_start: Date | null
    generated_at: Date | null
    content: string | null
  }

  export type Weekly_forecastsCountAggregateOutputType = {
    id: number
    week_start: number
    generated_at: number
    content: number
    _all: number
  }


  export type Weekly_forecastsAvgAggregateInputType = {
    id?: true
  }

  export type Weekly_forecastsSumAggregateInputType = {
    id?: true
  }

  export type Weekly_forecastsMinAggregateInputType = {
    id?: true
    week_start?: true
    generated_at?: true
    content?: true
  }

  export type Weekly_forecastsMaxAggregateInputType = {
    id?: true
    week_start?: true
    generated_at?: true
    content?: true
  }

  export type Weekly_forecastsCountAggregateInputType = {
    id?: true
    week_start?: true
    generated_at?: true
    content?: true
    _all?: true
  }

  export type Weekly_forecastsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which weekly_forecasts to aggregate.
     */
    where?: weekly_forecastsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weekly_forecasts to fetch.
     */
    orderBy?: weekly_forecastsOrderByWithRelationInput | weekly_forecastsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: weekly_forecastsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weekly_forecasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weekly_forecasts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned weekly_forecasts
    **/
    _count?: true | Weekly_forecastsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Weekly_forecastsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Weekly_forecastsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Weekly_forecastsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Weekly_forecastsMaxAggregateInputType
  }

  export type GetWeekly_forecastsAggregateType<T extends Weekly_forecastsAggregateArgs> = {
        [P in keyof T & keyof AggregateWeekly_forecasts]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWeekly_forecasts[P]>
      : GetScalarType<T[P], AggregateWeekly_forecasts[P]>
  }




  export type weekly_forecastsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: weekly_forecastsWhereInput
    orderBy?: weekly_forecastsOrderByWithAggregationInput | weekly_forecastsOrderByWithAggregationInput[]
    by: Weekly_forecastsScalarFieldEnum[] | Weekly_forecastsScalarFieldEnum
    having?: weekly_forecastsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Weekly_forecastsCountAggregateInputType | true
    _avg?: Weekly_forecastsAvgAggregateInputType
    _sum?: Weekly_forecastsSumAggregateInputType
    _min?: Weekly_forecastsMinAggregateInputType
    _max?: Weekly_forecastsMaxAggregateInputType
  }

  export type Weekly_forecastsGroupByOutputType = {
    id: bigint
    week_start: Date | null
    generated_at: Date | null
    content: string | null
    _count: Weekly_forecastsCountAggregateOutputType | null
    _avg: Weekly_forecastsAvgAggregateOutputType | null
    _sum: Weekly_forecastsSumAggregateOutputType | null
    _min: Weekly_forecastsMinAggregateOutputType | null
    _max: Weekly_forecastsMaxAggregateOutputType | null
  }

  type GetWeekly_forecastsGroupByPayload<T extends weekly_forecastsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Weekly_forecastsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Weekly_forecastsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Weekly_forecastsGroupByOutputType[P]>
            : GetScalarType<T[P], Weekly_forecastsGroupByOutputType[P]>
        }
      >
    >


  export type weekly_forecastsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    week_start?: boolean
    generated_at?: boolean
    content?: boolean
  }, ExtArgs["result"]["weekly_forecasts"]>

  export type weekly_forecastsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    week_start?: boolean
    generated_at?: boolean
    content?: boolean
  }, ExtArgs["result"]["weekly_forecasts"]>

  export type weekly_forecastsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    week_start?: boolean
    generated_at?: boolean
    content?: boolean
  }, ExtArgs["result"]["weekly_forecasts"]>

  export type weekly_forecastsSelectScalar = {
    id?: boolean
    week_start?: boolean
    generated_at?: boolean
    content?: boolean
  }

  export type weekly_forecastsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "week_start" | "generated_at" | "content", ExtArgs["result"]["weekly_forecasts"]>

  export type $weekly_forecastsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "weekly_forecasts"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      week_start: Date | null
      generated_at: Date | null
      content: string | null
    }, ExtArgs["result"]["weekly_forecasts"]>
    composites: {}
  }

  type weekly_forecastsGetPayload<S extends boolean | null | undefined | weekly_forecastsDefaultArgs> = $Result.GetResult<Prisma.$weekly_forecastsPayload, S>

  type weekly_forecastsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<weekly_forecastsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Weekly_forecastsCountAggregateInputType | true
    }

  export interface weekly_forecastsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['weekly_forecasts'], meta: { name: 'weekly_forecasts' } }
    /**
     * Find zero or one Weekly_forecasts that matches the filter.
     * @param {weekly_forecastsFindUniqueArgs} args - Arguments to find a Weekly_forecasts
     * @example
     * // Get one Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends weekly_forecastsFindUniqueArgs>(args: SelectSubset<T, weekly_forecastsFindUniqueArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Weekly_forecasts that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {weekly_forecastsFindUniqueOrThrowArgs} args - Arguments to find a Weekly_forecasts
     * @example
     * // Get one Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends weekly_forecastsFindUniqueOrThrowArgs>(args: SelectSubset<T, weekly_forecastsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Weekly_forecasts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weekly_forecastsFindFirstArgs} args - Arguments to find a Weekly_forecasts
     * @example
     * // Get one Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends weekly_forecastsFindFirstArgs>(args?: SelectSubset<T, weekly_forecastsFindFirstArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Weekly_forecasts that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weekly_forecastsFindFirstOrThrowArgs} args - Arguments to find a Weekly_forecasts
     * @example
     * // Get one Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends weekly_forecastsFindFirstOrThrowArgs>(args?: SelectSubset<T, weekly_forecastsFindFirstOrThrowArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Weekly_forecasts that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weekly_forecastsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.findMany()
     * 
     * // Get first 10 Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const weekly_forecastsWithIdOnly = await prisma.weekly_forecasts.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends weekly_forecastsFindManyArgs>(args?: SelectSubset<T, weekly_forecastsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Weekly_forecasts.
     * @param {weekly_forecastsCreateArgs} args - Arguments to create a Weekly_forecasts.
     * @example
     * // Create one Weekly_forecasts
     * const Weekly_forecasts = await prisma.weekly_forecasts.create({
     *   data: {
     *     // ... data to create a Weekly_forecasts
     *   }
     * })
     * 
     */
    create<T extends weekly_forecastsCreateArgs>(args: SelectSubset<T, weekly_forecastsCreateArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Weekly_forecasts.
     * @param {weekly_forecastsCreateManyArgs} args - Arguments to create many Weekly_forecasts.
     * @example
     * // Create many Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends weekly_forecastsCreateManyArgs>(args?: SelectSubset<T, weekly_forecastsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Weekly_forecasts and returns the data saved in the database.
     * @param {weekly_forecastsCreateManyAndReturnArgs} args - Arguments to create many Weekly_forecasts.
     * @example
     * // Create many Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Weekly_forecasts and only return the `id`
     * const weekly_forecastsWithIdOnly = await prisma.weekly_forecasts.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends weekly_forecastsCreateManyAndReturnArgs>(args?: SelectSubset<T, weekly_forecastsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Weekly_forecasts.
     * @param {weekly_forecastsDeleteArgs} args - Arguments to delete one Weekly_forecasts.
     * @example
     * // Delete one Weekly_forecasts
     * const Weekly_forecasts = await prisma.weekly_forecasts.delete({
     *   where: {
     *     // ... filter to delete one Weekly_forecasts
     *   }
     * })
     * 
     */
    delete<T extends weekly_forecastsDeleteArgs>(args: SelectSubset<T, weekly_forecastsDeleteArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Weekly_forecasts.
     * @param {weekly_forecastsUpdateArgs} args - Arguments to update one Weekly_forecasts.
     * @example
     * // Update one Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends weekly_forecastsUpdateArgs>(args: SelectSubset<T, weekly_forecastsUpdateArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Weekly_forecasts.
     * @param {weekly_forecastsDeleteManyArgs} args - Arguments to filter Weekly_forecasts to delete.
     * @example
     * // Delete a few Weekly_forecasts
     * const { count } = await prisma.weekly_forecasts.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends weekly_forecastsDeleteManyArgs>(args?: SelectSubset<T, weekly_forecastsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Weekly_forecasts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weekly_forecastsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends weekly_forecastsUpdateManyArgs>(args: SelectSubset<T, weekly_forecastsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Weekly_forecasts and returns the data updated in the database.
     * @param {weekly_forecastsUpdateManyAndReturnArgs} args - Arguments to update many Weekly_forecasts.
     * @example
     * // Update many Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Weekly_forecasts and only return the `id`
     * const weekly_forecastsWithIdOnly = await prisma.weekly_forecasts.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends weekly_forecastsUpdateManyAndReturnArgs>(args: SelectSubset<T, weekly_forecastsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Weekly_forecasts.
     * @param {weekly_forecastsUpsertArgs} args - Arguments to update or create a Weekly_forecasts.
     * @example
     * // Update or create a Weekly_forecasts
     * const weekly_forecasts = await prisma.weekly_forecasts.upsert({
     *   create: {
     *     // ... data to create a Weekly_forecasts
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Weekly_forecasts we want to update
     *   }
     * })
     */
    upsert<T extends weekly_forecastsUpsertArgs>(args: SelectSubset<T, weekly_forecastsUpsertArgs<ExtArgs>>): Prisma__weekly_forecastsClient<$Result.GetResult<Prisma.$weekly_forecastsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Weekly_forecasts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weekly_forecastsCountArgs} args - Arguments to filter Weekly_forecasts to count.
     * @example
     * // Count the number of Weekly_forecasts
     * const count = await prisma.weekly_forecasts.count({
     *   where: {
     *     // ... the filter for the Weekly_forecasts we want to count
     *   }
     * })
    **/
    count<T extends weekly_forecastsCountArgs>(
      args?: Subset<T, weekly_forecastsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Weekly_forecastsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Weekly_forecasts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Weekly_forecastsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Weekly_forecastsAggregateArgs>(args: Subset<T, Weekly_forecastsAggregateArgs>): Prisma.PrismaPromise<GetWeekly_forecastsAggregateType<T>>

    /**
     * Group by Weekly_forecasts.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {weekly_forecastsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends weekly_forecastsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: weekly_forecastsGroupByArgs['orderBy'] }
        : { orderBy?: weekly_forecastsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, weekly_forecastsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWeekly_forecastsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the weekly_forecasts model
   */
  readonly fields: weekly_forecastsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for weekly_forecasts.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__weekly_forecastsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the weekly_forecasts model
   */
  interface weekly_forecastsFieldRefs {
    readonly id: FieldRef<"weekly_forecasts", 'BigInt'>
    readonly week_start: FieldRef<"weekly_forecasts", 'DateTime'>
    readonly generated_at: FieldRef<"weekly_forecasts", 'DateTime'>
    readonly content: FieldRef<"weekly_forecasts", 'String'>
  }
    

  // Custom InputTypes
  /**
   * weekly_forecasts findUnique
   */
  export type weekly_forecastsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * Filter, which weekly_forecasts to fetch.
     */
    where: weekly_forecastsWhereUniqueInput
  }

  /**
   * weekly_forecasts findUniqueOrThrow
   */
  export type weekly_forecastsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * Filter, which weekly_forecasts to fetch.
     */
    where: weekly_forecastsWhereUniqueInput
  }

  /**
   * weekly_forecasts findFirst
   */
  export type weekly_forecastsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * Filter, which weekly_forecasts to fetch.
     */
    where?: weekly_forecastsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weekly_forecasts to fetch.
     */
    orderBy?: weekly_forecastsOrderByWithRelationInput | weekly_forecastsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for weekly_forecasts.
     */
    cursor?: weekly_forecastsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weekly_forecasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weekly_forecasts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of weekly_forecasts.
     */
    distinct?: Weekly_forecastsScalarFieldEnum | Weekly_forecastsScalarFieldEnum[]
  }

  /**
   * weekly_forecasts findFirstOrThrow
   */
  export type weekly_forecastsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * Filter, which weekly_forecasts to fetch.
     */
    where?: weekly_forecastsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weekly_forecasts to fetch.
     */
    orderBy?: weekly_forecastsOrderByWithRelationInput | weekly_forecastsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for weekly_forecasts.
     */
    cursor?: weekly_forecastsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weekly_forecasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weekly_forecasts.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of weekly_forecasts.
     */
    distinct?: Weekly_forecastsScalarFieldEnum | Weekly_forecastsScalarFieldEnum[]
  }

  /**
   * weekly_forecasts findMany
   */
  export type weekly_forecastsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * Filter, which weekly_forecasts to fetch.
     */
    where?: weekly_forecastsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of weekly_forecasts to fetch.
     */
    orderBy?: weekly_forecastsOrderByWithRelationInput | weekly_forecastsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing weekly_forecasts.
     */
    cursor?: weekly_forecastsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` weekly_forecasts from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` weekly_forecasts.
     */
    skip?: number
    distinct?: Weekly_forecastsScalarFieldEnum | Weekly_forecastsScalarFieldEnum[]
  }

  /**
   * weekly_forecasts create
   */
  export type weekly_forecastsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * The data needed to create a weekly_forecasts.
     */
    data?: XOR<weekly_forecastsCreateInput, weekly_forecastsUncheckedCreateInput>
  }

  /**
   * weekly_forecasts createMany
   */
  export type weekly_forecastsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many weekly_forecasts.
     */
    data: weekly_forecastsCreateManyInput | weekly_forecastsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * weekly_forecasts createManyAndReturn
   */
  export type weekly_forecastsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * The data used to create many weekly_forecasts.
     */
    data: weekly_forecastsCreateManyInput | weekly_forecastsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * weekly_forecasts update
   */
  export type weekly_forecastsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * The data needed to update a weekly_forecasts.
     */
    data: XOR<weekly_forecastsUpdateInput, weekly_forecastsUncheckedUpdateInput>
    /**
     * Choose, which weekly_forecasts to update.
     */
    where: weekly_forecastsWhereUniqueInput
  }

  /**
   * weekly_forecasts updateMany
   */
  export type weekly_forecastsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update weekly_forecasts.
     */
    data: XOR<weekly_forecastsUpdateManyMutationInput, weekly_forecastsUncheckedUpdateManyInput>
    /**
     * Filter which weekly_forecasts to update
     */
    where?: weekly_forecastsWhereInput
    /**
     * Limit how many weekly_forecasts to update.
     */
    limit?: number
  }

  /**
   * weekly_forecasts updateManyAndReturn
   */
  export type weekly_forecastsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * The data used to update weekly_forecasts.
     */
    data: XOR<weekly_forecastsUpdateManyMutationInput, weekly_forecastsUncheckedUpdateManyInput>
    /**
     * Filter which weekly_forecasts to update
     */
    where?: weekly_forecastsWhereInput
    /**
     * Limit how many weekly_forecasts to update.
     */
    limit?: number
  }

  /**
   * weekly_forecasts upsert
   */
  export type weekly_forecastsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * The filter to search for the weekly_forecasts to update in case it exists.
     */
    where: weekly_forecastsWhereUniqueInput
    /**
     * In case the weekly_forecasts found by the `where` argument doesn't exist, create a new weekly_forecasts with this data.
     */
    create: XOR<weekly_forecastsCreateInput, weekly_forecastsUncheckedCreateInput>
    /**
     * In case the weekly_forecasts was found with the provided `where` argument, update it with this data.
     */
    update: XOR<weekly_forecastsUpdateInput, weekly_forecastsUncheckedUpdateInput>
  }

  /**
   * weekly_forecasts delete
   */
  export type weekly_forecastsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
    /**
     * Filter which weekly_forecasts to delete.
     */
    where: weekly_forecastsWhereUniqueInput
  }

  /**
   * weekly_forecasts deleteMany
   */
  export type weekly_forecastsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which weekly_forecasts to delete
     */
    where?: weekly_forecastsWhereInput
    /**
     * Limit how many weekly_forecasts to delete.
     */
    limit?: number
  }

  /**
   * weekly_forecasts without action
   */
  export type weekly_forecastsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the weekly_forecasts
     */
    select?: weekly_forecastsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the weekly_forecasts
     */
    omit?: weekly_forecastsOmit<ExtArgs> | null
  }


  /**
   * Model article_tags
   */

  export type AggregateArticle_tags = {
    _count: Article_tagsCountAggregateOutputType | null
    _avg: Article_tagsAvgAggregateOutputType | null
    _sum: Article_tagsSumAggregateOutputType | null
    _min: Article_tagsMinAggregateOutputType | null
    _max: Article_tagsMaxAggregateOutputType | null
  }

  export type Article_tagsAvgAggregateOutputType = {
    tag_id: number | null
  }

  export type Article_tagsSumAggregateOutputType = {
    tag_id: bigint | null
  }

  export type Article_tagsMinAggregateOutputType = {
    article_id: string | null
    tag_id: bigint | null
  }

  export type Article_tagsMaxAggregateOutputType = {
    article_id: string | null
    tag_id: bigint | null
  }

  export type Article_tagsCountAggregateOutputType = {
    article_id: number
    tag_id: number
    _all: number
  }


  export type Article_tagsAvgAggregateInputType = {
    tag_id?: true
  }

  export type Article_tagsSumAggregateInputType = {
    tag_id?: true
  }

  export type Article_tagsMinAggregateInputType = {
    article_id?: true
    tag_id?: true
  }

  export type Article_tagsMaxAggregateInputType = {
    article_id?: true
    tag_id?: true
  }

  export type Article_tagsCountAggregateInputType = {
    article_id?: true
    tag_id?: true
    _all?: true
  }

  export type Article_tagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which article_tags to aggregate.
     */
    where?: article_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_tags to fetch.
     */
    orderBy?: article_tagsOrderByWithRelationInput | article_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: article_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned article_tags
    **/
    _count?: true | Article_tagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Article_tagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Article_tagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Article_tagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Article_tagsMaxAggregateInputType
  }

  export type GetArticle_tagsAggregateType<T extends Article_tagsAggregateArgs> = {
        [P in keyof T & keyof AggregateArticle_tags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateArticle_tags[P]>
      : GetScalarType<T[P], AggregateArticle_tags[P]>
  }




  export type article_tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: article_tagsWhereInput
    orderBy?: article_tagsOrderByWithAggregationInput | article_tagsOrderByWithAggregationInput[]
    by: Article_tagsScalarFieldEnum[] | Article_tagsScalarFieldEnum
    having?: article_tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Article_tagsCountAggregateInputType | true
    _avg?: Article_tagsAvgAggregateInputType
    _sum?: Article_tagsSumAggregateInputType
    _min?: Article_tagsMinAggregateInputType
    _max?: Article_tagsMaxAggregateInputType
  }

  export type Article_tagsGroupByOutputType = {
    article_id: string
    tag_id: bigint
    _count: Article_tagsCountAggregateOutputType | null
    _avg: Article_tagsAvgAggregateOutputType | null
    _sum: Article_tagsSumAggregateOutputType | null
    _min: Article_tagsMinAggregateOutputType | null
    _max: Article_tagsMaxAggregateOutputType | null
  }

  type GetArticle_tagsGroupByPayload<T extends article_tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Article_tagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Article_tagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Article_tagsGroupByOutputType[P]>
            : GetScalarType<T[P], Article_tagsGroupByOutputType[P]>
        }
      >
    >


  export type article_tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    article_id?: boolean
    tag_id?: boolean
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article_tags"]>

  export type article_tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    article_id?: boolean
    tag_id?: boolean
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article_tags"]>

  export type article_tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    article_id?: boolean
    tag_id?: boolean
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["article_tags"]>

  export type article_tagsSelectScalar = {
    article_id?: boolean
    tag_id?: boolean
  }

  export type article_tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"article_id" | "tag_id", ExtArgs["result"]["article_tags"]>
  export type article_tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type article_tagsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }
  export type article_tagsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | articlesDefaultArgs<ExtArgs>
    tags?: boolean | tagsDefaultArgs<ExtArgs>
  }

  export type $article_tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "article_tags"
    objects: {
      articles: Prisma.$articlesPayload<ExtArgs>
      tags: Prisma.$tagsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      article_id: string
      tag_id: bigint
    }, ExtArgs["result"]["article_tags"]>
    composites: {}
  }

  type article_tagsGetPayload<S extends boolean | null | undefined | article_tagsDefaultArgs> = $Result.GetResult<Prisma.$article_tagsPayload, S>

  type article_tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<article_tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Article_tagsCountAggregateInputType | true
    }

  export interface article_tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['article_tags'], meta: { name: 'article_tags' } }
    /**
     * Find zero or one Article_tags that matches the filter.
     * @param {article_tagsFindUniqueArgs} args - Arguments to find a Article_tags
     * @example
     * // Get one Article_tags
     * const article_tags = await prisma.article_tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends article_tagsFindUniqueArgs>(args: SelectSubset<T, article_tagsFindUniqueArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Article_tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {article_tagsFindUniqueOrThrowArgs} args - Arguments to find a Article_tags
     * @example
     * // Get one Article_tags
     * const article_tags = await prisma.article_tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends article_tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, article_tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Article_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_tagsFindFirstArgs} args - Arguments to find a Article_tags
     * @example
     * // Get one Article_tags
     * const article_tags = await prisma.article_tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends article_tagsFindFirstArgs>(args?: SelectSubset<T, article_tagsFindFirstArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Article_tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_tagsFindFirstOrThrowArgs} args - Arguments to find a Article_tags
     * @example
     * // Get one Article_tags
     * const article_tags = await prisma.article_tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends article_tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, article_tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Article_tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Article_tags
     * const article_tags = await prisma.article_tags.findMany()
     * 
     * // Get first 10 Article_tags
     * const article_tags = await prisma.article_tags.findMany({ take: 10 })
     * 
     * // Only select the `article_id`
     * const article_tagsWithArticle_idOnly = await prisma.article_tags.findMany({ select: { article_id: true } })
     * 
     */
    findMany<T extends article_tagsFindManyArgs>(args?: SelectSubset<T, article_tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Article_tags.
     * @param {article_tagsCreateArgs} args - Arguments to create a Article_tags.
     * @example
     * // Create one Article_tags
     * const Article_tags = await prisma.article_tags.create({
     *   data: {
     *     // ... data to create a Article_tags
     *   }
     * })
     * 
     */
    create<T extends article_tagsCreateArgs>(args: SelectSubset<T, article_tagsCreateArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Article_tags.
     * @param {article_tagsCreateManyArgs} args - Arguments to create many Article_tags.
     * @example
     * // Create many Article_tags
     * const article_tags = await prisma.article_tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends article_tagsCreateManyArgs>(args?: SelectSubset<T, article_tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Article_tags and returns the data saved in the database.
     * @param {article_tagsCreateManyAndReturnArgs} args - Arguments to create many Article_tags.
     * @example
     * // Create many Article_tags
     * const article_tags = await prisma.article_tags.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Article_tags and only return the `article_id`
     * const article_tagsWithArticle_idOnly = await prisma.article_tags.createManyAndReturn({
     *   select: { article_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends article_tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, article_tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Article_tags.
     * @param {article_tagsDeleteArgs} args - Arguments to delete one Article_tags.
     * @example
     * // Delete one Article_tags
     * const Article_tags = await prisma.article_tags.delete({
     *   where: {
     *     // ... filter to delete one Article_tags
     *   }
     * })
     * 
     */
    delete<T extends article_tagsDeleteArgs>(args: SelectSubset<T, article_tagsDeleteArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Article_tags.
     * @param {article_tagsUpdateArgs} args - Arguments to update one Article_tags.
     * @example
     * // Update one Article_tags
     * const article_tags = await prisma.article_tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends article_tagsUpdateArgs>(args: SelectSubset<T, article_tagsUpdateArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Article_tags.
     * @param {article_tagsDeleteManyArgs} args - Arguments to filter Article_tags to delete.
     * @example
     * // Delete a few Article_tags
     * const { count } = await prisma.article_tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends article_tagsDeleteManyArgs>(args?: SelectSubset<T, article_tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Article_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Article_tags
     * const article_tags = await prisma.article_tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends article_tagsUpdateManyArgs>(args: SelectSubset<T, article_tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Article_tags and returns the data updated in the database.
     * @param {article_tagsUpdateManyAndReturnArgs} args - Arguments to update many Article_tags.
     * @example
     * // Update many Article_tags
     * const article_tags = await prisma.article_tags.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Article_tags and only return the `article_id`
     * const article_tagsWithArticle_idOnly = await prisma.article_tags.updateManyAndReturn({
     *   select: { article_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends article_tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, article_tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Article_tags.
     * @param {article_tagsUpsertArgs} args - Arguments to update or create a Article_tags.
     * @example
     * // Update or create a Article_tags
     * const article_tags = await prisma.article_tags.upsert({
     *   create: {
     *     // ... data to create a Article_tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Article_tags we want to update
     *   }
     * })
     */
    upsert<T extends article_tagsUpsertArgs>(args: SelectSubset<T, article_tagsUpsertArgs<ExtArgs>>): Prisma__article_tagsClient<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Article_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_tagsCountArgs} args - Arguments to filter Article_tags to count.
     * @example
     * // Count the number of Article_tags
     * const count = await prisma.article_tags.count({
     *   where: {
     *     // ... the filter for the Article_tags we want to count
     *   }
     * })
    **/
    count<T extends article_tagsCountArgs>(
      args?: Subset<T, article_tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Article_tagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Article_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Article_tagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Article_tagsAggregateArgs>(args: Subset<T, Article_tagsAggregateArgs>): Prisma.PrismaPromise<GetArticle_tagsAggregateType<T>>

    /**
     * Group by Article_tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {article_tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends article_tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: article_tagsGroupByArgs['orderBy'] }
        : { orderBy?: article_tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, article_tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetArticle_tagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the article_tags model
   */
  readonly fields: article_tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for article_tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__article_tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articles<T extends articlesDefaultArgs<ExtArgs> = {}>(args?: Subset<T, articlesDefaultArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    tags<T extends tagsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, tagsDefaultArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the article_tags model
   */
  interface article_tagsFieldRefs {
    readonly article_id: FieldRef<"article_tags", 'String'>
    readonly tag_id: FieldRef<"article_tags", 'BigInt'>
  }
    

  // Custom InputTypes
  /**
   * article_tags findUnique
   */
  export type article_tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * Filter, which article_tags to fetch.
     */
    where: article_tagsWhereUniqueInput
  }

  /**
   * article_tags findUniqueOrThrow
   */
  export type article_tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * Filter, which article_tags to fetch.
     */
    where: article_tagsWhereUniqueInput
  }

  /**
   * article_tags findFirst
   */
  export type article_tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * Filter, which article_tags to fetch.
     */
    where?: article_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_tags to fetch.
     */
    orderBy?: article_tagsOrderByWithRelationInput | article_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for article_tags.
     */
    cursor?: article_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of article_tags.
     */
    distinct?: Article_tagsScalarFieldEnum | Article_tagsScalarFieldEnum[]
  }

  /**
   * article_tags findFirstOrThrow
   */
  export type article_tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * Filter, which article_tags to fetch.
     */
    where?: article_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_tags to fetch.
     */
    orderBy?: article_tagsOrderByWithRelationInput | article_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for article_tags.
     */
    cursor?: article_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of article_tags.
     */
    distinct?: Article_tagsScalarFieldEnum | Article_tagsScalarFieldEnum[]
  }

  /**
   * article_tags findMany
   */
  export type article_tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * Filter, which article_tags to fetch.
     */
    where?: article_tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of article_tags to fetch.
     */
    orderBy?: article_tagsOrderByWithRelationInput | article_tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing article_tags.
     */
    cursor?: article_tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` article_tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` article_tags.
     */
    skip?: number
    distinct?: Article_tagsScalarFieldEnum | Article_tagsScalarFieldEnum[]
  }

  /**
   * article_tags create
   */
  export type article_tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a article_tags.
     */
    data: XOR<article_tagsCreateInput, article_tagsUncheckedCreateInput>
  }

  /**
   * article_tags createMany
   */
  export type article_tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many article_tags.
     */
    data: article_tagsCreateManyInput | article_tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * article_tags createManyAndReturn
   */
  export type article_tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * The data used to create many article_tags.
     */
    data: article_tagsCreateManyInput | article_tagsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * article_tags update
   */
  export type article_tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a article_tags.
     */
    data: XOR<article_tagsUpdateInput, article_tagsUncheckedUpdateInput>
    /**
     * Choose, which article_tags to update.
     */
    where: article_tagsWhereUniqueInput
  }

  /**
   * article_tags updateMany
   */
  export type article_tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update article_tags.
     */
    data: XOR<article_tagsUpdateManyMutationInput, article_tagsUncheckedUpdateManyInput>
    /**
     * Filter which article_tags to update
     */
    where?: article_tagsWhereInput
    /**
     * Limit how many article_tags to update.
     */
    limit?: number
  }

  /**
   * article_tags updateManyAndReturn
   */
  export type article_tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * The data used to update article_tags.
     */
    data: XOR<article_tagsUpdateManyMutationInput, article_tagsUncheckedUpdateManyInput>
    /**
     * Filter which article_tags to update
     */
    where?: article_tagsWhereInput
    /**
     * Limit how many article_tags to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * article_tags upsert
   */
  export type article_tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the article_tags to update in case it exists.
     */
    where: article_tagsWhereUniqueInput
    /**
     * In case the article_tags found by the `where` argument doesn't exist, create a new article_tags with this data.
     */
    create: XOR<article_tagsCreateInput, article_tagsUncheckedCreateInput>
    /**
     * In case the article_tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<article_tagsUpdateInput, article_tagsUncheckedUpdateInput>
  }

  /**
   * article_tags delete
   */
  export type article_tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    /**
     * Filter which article_tags to delete.
     */
    where: article_tagsWhereUniqueInput
  }

  /**
   * article_tags deleteMany
   */
  export type article_tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which article_tags to delete
     */
    where?: article_tagsWhereInput
    /**
     * Limit how many article_tags to delete.
     */
    limit?: number
  }

  /**
   * article_tags without action
   */
  export type article_tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
  }


  /**
   * Model bookmark_folders
   */

  export type AggregateBookmark_folders = {
    _count: Bookmark_foldersCountAggregateOutputType | null
    _avg: Bookmark_foldersAvgAggregateOutputType | null
    _sum: Bookmark_foldersSumAggregateOutputType | null
    _min: Bookmark_foldersMinAggregateOutputType | null
    _max: Bookmark_foldersMaxAggregateOutputType | null
  }

  export type Bookmark_foldersAvgAggregateOutputType = {
    id: number | null
  }

  export type Bookmark_foldersSumAggregateOutputType = {
    id: bigint | null
  }

  export type Bookmark_foldersMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    is_standard: boolean | null
    created_at: Date | null
  }

  export type Bookmark_foldersMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    name: string | null
    is_standard: boolean | null
    created_at: Date | null
  }

  export type Bookmark_foldersCountAggregateOutputType = {
    id: number
    user_id: number
    name: number
    is_standard: number
    created_at: number
    _all: number
  }


  export type Bookmark_foldersAvgAggregateInputType = {
    id?: true
  }

  export type Bookmark_foldersSumAggregateInputType = {
    id?: true
  }

  export type Bookmark_foldersMinAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    is_standard?: true
    created_at?: true
  }

  export type Bookmark_foldersMaxAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    is_standard?: true
    created_at?: true
  }

  export type Bookmark_foldersCountAggregateInputType = {
    id?: true
    user_id?: true
    name?: true
    is_standard?: true
    created_at?: true
    _all?: true
  }

  export type Bookmark_foldersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bookmark_folders to aggregate.
     */
    where?: bookmark_foldersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmark_folders to fetch.
     */
    orderBy?: bookmark_foldersOrderByWithRelationInput | bookmark_foldersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bookmark_foldersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmark_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmark_folders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bookmark_folders
    **/
    _count?: true | Bookmark_foldersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Bookmark_foldersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Bookmark_foldersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Bookmark_foldersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Bookmark_foldersMaxAggregateInputType
  }

  export type GetBookmark_foldersAggregateType<T extends Bookmark_foldersAggregateArgs> = {
        [P in keyof T & keyof AggregateBookmark_folders]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBookmark_folders[P]>
      : GetScalarType<T[P], AggregateBookmark_folders[P]>
  }




  export type bookmark_foldersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bookmark_foldersWhereInput
    orderBy?: bookmark_foldersOrderByWithAggregationInput | bookmark_foldersOrderByWithAggregationInput[]
    by: Bookmark_foldersScalarFieldEnum[] | Bookmark_foldersScalarFieldEnum
    having?: bookmark_foldersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Bookmark_foldersCountAggregateInputType | true
    _avg?: Bookmark_foldersAvgAggregateInputType
    _sum?: Bookmark_foldersSumAggregateInputType
    _min?: Bookmark_foldersMinAggregateInputType
    _max?: Bookmark_foldersMaxAggregateInputType
  }

  export type Bookmark_foldersGroupByOutputType = {
    id: bigint
    user_id: string | null
    name: string | null
    is_standard: boolean | null
    created_at: Date | null
    _count: Bookmark_foldersCountAggregateOutputType | null
    _avg: Bookmark_foldersAvgAggregateOutputType | null
    _sum: Bookmark_foldersSumAggregateOutputType | null
    _min: Bookmark_foldersMinAggregateOutputType | null
    _max: Bookmark_foldersMaxAggregateOutputType | null
  }

  type GetBookmark_foldersGroupByPayload<T extends bookmark_foldersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Bookmark_foldersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Bookmark_foldersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Bookmark_foldersGroupByOutputType[P]>
            : GetScalarType<T[P], Bookmark_foldersGroupByOutputType[P]>
        }
      >
    >


  export type bookmark_foldersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    is_standard?: boolean
    created_at?: boolean
    users?: boolean | bookmark_folders$usersArgs<ExtArgs>
    bookmarks?: boolean | bookmark_folders$bookmarksArgs<ExtArgs>
    _count?: boolean | Bookmark_foldersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["bookmark_folders"]>

  export type bookmark_foldersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    is_standard?: boolean
    created_at?: boolean
    users?: boolean | bookmark_folders$usersArgs<ExtArgs>
  }, ExtArgs["result"]["bookmark_folders"]>

  export type bookmark_foldersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    name?: boolean
    is_standard?: boolean
    created_at?: boolean
    users?: boolean | bookmark_folders$usersArgs<ExtArgs>
  }, ExtArgs["result"]["bookmark_folders"]>

  export type bookmark_foldersSelectScalar = {
    id?: boolean
    user_id?: boolean
    name?: boolean
    is_standard?: boolean
    created_at?: boolean
  }

  export type bookmark_foldersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "name" | "is_standard" | "created_at", ExtArgs["result"]["bookmark_folders"]>
  export type bookmark_foldersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | bookmark_folders$usersArgs<ExtArgs>
    bookmarks?: boolean | bookmark_folders$bookmarksArgs<ExtArgs>
    _count?: boolean | Bookmark_foldersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type bookmark_foldersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | bookmark_folders$usersArgs<ExtArgs>
  }
  export type bookmark_foldersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | bookmark_folders$usersArgs<ExtArgs>
  }

  export type $bookmark_foldersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bookmark_folders"
    objects: {
      users: Prisma.$public_usersPayload<ExtArgs> | null
      bookmarks: Prisma.$bookmarksPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string | null
      name: string | null
      is_standard: boolean | null
      created_at: Date | null
    }, ExtArgs["result"]["bookmark_folders"]>
    composites: {}
  }

  type bookmark_foldersGetPayload<S extends boolean | null | undefined | bookmark_foldersDefaultArgs> = $Result.GetResult<Prisma.$bookmark_foldersPayload, S>

  type bookmark_foldersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bookmark_foldersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Bookmark_foldersCountAggregateInputType | true
    }

  export interface bookmark_foldersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bookmark_folders'], meta: { name: 'bookmark_folders' } }
    /**
     * Find zero or one Bookmark_folders that matches the filter.
     * @param {bookmark_foldersFindUniqueArgs} args - Arguments to find a Bookmark_folders
     * @example
     * // Get one Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bookmark_foldersFindUniqueArgs>(args: SelectSubset<T, bookmark_foldersFindUniqueArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bookmark_folders that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bookmark_foldersFindUniqueOrThrowArgs} args - Arguments to find a Bookmark_folders
     * @example
     * // Get one Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bookmark_foldersFindUniqueOrThrowArgs>(args: SelectSubset<T, bookmark_foldersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bookmark_folders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmark_foldersFindFirstArgs} args - Arguments to find a Bookmark_folders
     * @example
     * // Get one Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bookmark_foldersFindFirstArgs>(args?: SelectSubset<T, bookmark_foldersFindFirstArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bookmark_folders that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmark_foldersFindFirstOrThrowArgs} args - Arguments to find a Bookmark_folders
     * @example
     * // Get one Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bookmark_foldersFindFirstOrThrowArgs>(args?: SelectSubset<T, bookmark_foldersFindFirstOrThrowArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bookmark_folders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmark_foldersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.findMany()
     * 
     * // Get first 10 Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bookmark_foldersWithIdOnly = await prisma.bookmark_folders.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bookmark_foldersFindManyArgs>(args?: SelectSubset<T, bookmark_foldersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bookmark_folders.
     * @param {bookmark_foldersCreateArgs} args - Arguments to create a Bookmark_folders.
     * @example
     * // Create one Bookmark_folders
     * const Bookmark_folders = await prisma.bookmark_folders.create({
     *   data: {
     *     // ... data to create a Bookmark_folders
     *   }
     * })
     * 
     */
    create<T extends bookmark_foldersCreateArgs>(args: SelectSubset<T, bookmark_foldersCreateArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bookmark_folders.
     * @param {bookmark_foldersCreateManyArgs} args - Arguments to create many Bookmark_folders.
     * @example
     * // Create many Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bookmark_foldersCreateManyArgs>(args?: SelectSubset<T, bookmark_foldersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bookmark_folders and returns the data saved in the database.
     * @param {bookmark_foldersCreateManyAndReturnArgs} args - Arguments to create many Bookmark_folders.
     * @example
     * // Create many Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bookmark_folders and only return the `id`
     * const bookmark_foldersWithIdOnly = await prisma.bookmark_folders.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends bookmark_foldersCreateManyAndReturnArgs>(args?: SelectSubset<T, bookmark_foldersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Bookmark_folders.
     * @param {bookmark_foldersDeleteArgs} args - Arguments to delete one Bookmark_folders.
     * @example
     * // Delete one Bookmark_folders
     * const Bookmark_folders = await prisma.bookmark_folders.delete({
     *   where: {
     *     // ... filter to delete one Bookmark_folders
     *   }
     * })
     * 
     */
    delete<T extends bookmark_foldersDeleteArgs>(args: SelectSubset<T, bookmark_foldersDeleteArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bookmark_folders.
     * @param {bookmark_foldersUpdateArgs} args - Arguments to update one Bookmark_folders.
     * @example
     * // Update one Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bookmark_foldersUpdateArgs>(args: SelectSubset<T, bookmark_foldersUpdateArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bookmark_folders.
     * @param {bookmark_foldersDeleteManyArgs} args - Arguments to filter Bookmark_folders to delete.
     * @example
     * // Delete a few Bookmark_folders
     * const { count } = await prisma.bookmark_folders.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bookmark_foldersDeleteManyArgs>(args?: SelectSubset<T, bookmark_foldersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookmark_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmark_foldersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bookmark_foldersUpdateManyArgs>(args: SelectSubset<T, bookmark_foldersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookmark_folders and returns the data updated in the database.
     * @param {bookmark_foldersUpdateManyAndReturnArgs} args - Arguments to update many Bookmark_folders.
     * @example
     * // Update many Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bookmark_folders and only return the `id`
     * const bookmark_foldersWithIdOnly = await prisma.bookmark_folders.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends bookmark_foldersUpdateManyAndReturnArgs>(args: SelectSubset<T, bookmark_foldersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Bookmark_folders.
     * @param {bookmark_foldersUpsertArgs} args - Arguments to update or create a Bookmark_folders.
     * @example
     * // Update or create a Bookmark_folders
     * const bookmark_folders = await prisma.bookmark_folders.upsert({
     *   create: {
     *     // ... data to create a Bookmark_folders
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bookmark_folders we want to update
     *   }
     * })
     */
    upsert<T extends bookmark_foldersUpsertArgs>(args: SelectSubset<T, bookmark_foldersUpsertArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bookmark_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmark_foldersCountArgs} args - Arguments to filter Bookmark_folders to count.
     * @example
     * // Count the number of Bookmark_folders
     * const count = await prisma.bookmark_folders.count({
     *   where: {
     *     // ... the filter for the Bookmark_folders we want to count
     *   }
     * })
    **/
    count<T extends bookmark_foldersCountArgs>(
      args?: Subset<T, bookmark_foldersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Bookmark_foldersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bookmark_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Bookmark_foldersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Bookmark_foldersAggregateArgs>(args: Subset<T, Bookmark_foldersAggregateArgs>): Prisma.PrismaPromise<GetBookmark_foldersAggregateType<T>>

    /**
     * Group by Bookmark_folders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmark_foldersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bookmark_foldersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bookmark_foldersGroupByArgs['orderBy'] }
        : { orderBy?: bookmark_foldersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bookmark_foldersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBookmark_foldersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bookmark_folders model
   */
  readonly fields: bookmark_foldersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bookmark_folders.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bookmark_foldersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends bookmark_folders$usersArgs<ExtArgs> = {}>(args?: Subset<T, bookmark_folders$usersArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    bookmarks<T extends bookmark_folders$bookmarksArgs<ExtArgs> = {}>(args?: Subset<T, bookmark_folders$bookmarksArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the bookmark_folders model
   */
  interface bookmark_foldersFieldRefs {
    readonly id: FieldRef<"bookmark_folders", 'BigInt'>
    readonly user_id: FieldRef<"bookmark_folders", 'String'>
    readonly name: FieldRef<"bookmark_folders", 'String'>
    readonly is_standard: FieldRef<"bookmark_folders", 'Boolean'>
    readonly created_at: FieldRef<"bookmark_folders", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * bookmark_folders findUnique
   */
  export type bookmark_foldersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * Filter, which bookmark_folders to fetch.
     */
    where: bookmark_foldersWhereUniqueInput
  }

  /**
   * bookmark_folders findUniqueOrThrow
   */
  export type bookmark_foldersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * Filter, which bookmark_folders to fetch.
     */
    where: bookmark_foldersWhereUniqueInput
  }

  /**
   * bookmark_folders findFirst
   */
  export type bookmark_foldersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * Filter, which bookmark_folders to fetch.
     */
    where?: bookmark_foldersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmark_folders to fetch.
     */
    orderBy?: bookmark_foldersOrderByWithRelationInput | bookmark_foldersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bookmark_folders.
     */
    cursor?: bookmark_foldersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmark_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmark_folders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bookmark_folders.
     */
    distinct?: Bookmark_foldersScalarFieldEnum | Bookmark_foldersScalarFieldEnum[]
  }

  /**
   * bookmark_folders findFirstOrThrow
   */
  export type bookmark_foldersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * Filter, which bookmark_folders to fetch.
     */
    where?: bookmark_foldersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmark_folders to fetch.
     */
    orderBy?: bookmark_foldersOrderByWithRelationInput | bookmark_foldersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bookmark_folders.
     */
    cursor?: bookmark_foldersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmark_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmark_folders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bookmark_folders.
     */
    distinct?: Bookmark_foldersScalarFieldEnum | Bookmark_foldersScalarFieldEnum[]
  }

  /**
   * bookmark_folders findMany
   */
  export type bookmark_foldersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * Filter, which bookmark_folders to fetch.
     */
    where?: bookmark_foldersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmark_folders to fetch.
     */
    orderBy?: bookmark_foldersOrderByWithRelationInput | bookmark_foldersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bookmark_folders.
     */
    cursor?: bookmark_foldersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmark_folders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmark_folders.
     */
    skip?: number
    distinct?: Bookmark_foldersScalarFieldEnum | Bookmark_foldersScalarFieldEnum[]
  }

  /**
   * bookmark_folders create
   */
  export type bookmark_foldersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * The data needed to create a bookmark_folders.
     */
    data?: XOR<bookmark_foldersCreateInput, bookmark_foldersUncheckedCreateInput>
  }

  /**
   * bookmark_folders createMany
   */
  export type bookmark_foldersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bookmark_folders.
     */
    data: bookmark_foldersCreateManyInput | bookmark_foldersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bookmark_folders createManyAndReturn
   */
  export type bookmark_foldersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * The data used to create many bookmark_folders.
     */
    data: bookmark_foldersCreateManyInput | bookmark_foldersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * bookmark_folders update
   */
  export type bookmark_foldersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * The data needed to update a bookmark_folders.
     */
    data: XOR<bookmark_foldersUpdateInput, bookmark_foldersUncheckedUpdateInput>
    /**
     * Choose, which bookmark_folders to update.
     */
    where: bookmark_foldersWhereUniqueInput
  }

  /**
   * bookmark_folders updateMany
   */
  export type bookmark_foldersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bookmark_folders.
     */
    data: XOR<bookmark_foldersUpdateManyMutationInput, bookmark_foldersUncheckedUpdateManyInput>
    /**
     * Filter which bookmark_folders to update
     */
    where?: bookmark_foldersWhereInput
    /**
     * Limit how many bookmark_folders to update.
     */
    limit?: number
  }

  /**
   * bookmark_folders updateManyAndReturn
   */
  export type bookmark_foldersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * The data used to update bookmark_folders.
     */
    data: XOR<bookmark_foldersUpdateManyMutationInput, bookmark_foldersUncheckedUpdateManyInput>
    /**
     * Filter which bookmark_folders to update
     */
    where?: bookmark_foldersWhereInput
    /**
     * Limit how many bookmark_folders to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * bookmark_folders upsert
   */
  export type bookmark_foldersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * The filter to search for the bookmark_folders to update in case it exists.
     */
    where: bookmark_foldersWhereUniqueInput
    /**
     * In case the bookmark_folders found by the `where` argument doesn't exist, create a new bookmark_folders with this data.
     */
    create: XOR<bookmark_foldersCreateInput, bookmark_foldersUncheckedCreateInput>
    /**
     * In case the bookmark_folders was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bookmark_foldersUpdateInput, bookmark_foldersUncheckedUpdateInput>
  }

  /**
   * bookmark_folders delete
   */
  export type bookmark_foldersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    /**
     * Filter which bookmark_folders to delete.
     */
    where: bookmark_foldersWhereUniqueInput
  }

  /**
   * bookmark_folders deleteMany
   */
  export type bookmark_foldersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bookmark_folders to delete
     */
    where?: bookmark_foldersWhereInput
    /**
     * Limit how many bookmark_folders to delete.
     */
    limit?: number
  }

  /**
   * bookmark_folders.users
   */
  export type bookmark_folders$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    where?: public_usersWhereInput
  }

  /**
   * bookmark_folders.bookmarks
   */
  export type bookmark_folders$bookmarksArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    where?: bookmarksWhereInput
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    cursor?: bookmarksWhereUniqueInput
    take?: number
    skip?: number
    distinct?: BookmarksScalarFieldEnum | BookmarksScalarFieldEnum[]
  }

  /**
   * bookmark_folders without action
   */
  export type bookmark_foldersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
  }


  /**
   * Model bookmarks
   */

  export type AggregateBookmarks = {
    _count: BookmarksCountAggregateOutputType | null
    _avg: BookmarksAvgAggregateOutputType | null
    _sum: BookmarksSumAggregateOutputType | null
    _min: BookmarksMinAggregateOutputType | null
    _max: BookmarksMaxAggregateOutputType | null
  }

  export type BookmarksAvgAggregateOutputType = {
    id: number | null
    folder_id: number | null
  }

  export type BookmarksSumAggregateOutputType = {
    id: bigint | null
    folder_id: bigint | null
  }

  export type BookmarksMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    folder_id: bigint | null
    bookmarked_at: Date | null
  }

  export type BookmarksMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    folder_id: bigint | null
    bookmarked_at: Date | null
  }

  export type BookmarksCountAggregateOutputType = {
    id: number
    user_id: number
    article_id: number
    folder_id: number
    bookmarked_at: number
    _all: number
  }


  export type BookmarksAvgAggregateInputType = {
    id?: true
    folder_id?: true
  }

  export type BookmarksSumAggregateInputType = {
    id?: true
    folder_id?: true
  }

  export type BookmarksMinAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    folder_id?: true
    bookmarked_at?: true
  }

  export type BookmarksMaxAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    folder_id?: true
    bookmarked_at?: true
  }

  export type BookmarksCountAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    folder_id?: true
    bookmarked_at?: true
    _all?: true
  }

  export type BookmarksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bookmarks to aggregate.
     */
    where?: bookmarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmarks to fetch.
     */
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: bookmarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmarks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmarks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned bookmarks
    **/
    _count?: true | BookmarksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BookmarksAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BookmarksSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BookmarksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BookmarksMaxAggregateInputType
  }

  export type GetBookmarksAggregateType<T extends BookmarksAggregateArgs> = {
        [P in keyof T & keyof AggregateBookmarks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBookmarks[P]>
      : GetScalarType<T[P], AggregateBookmarks[P]>
  }




  export type bookmarksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: bookmarksWhereInput
    orderBy?: bookmarksOrderByWithAggregationInput | bookmarksOrderByWithAggregationInput[]
    by: BookmarksScalarFieldEnum[] | BookmarksScalarFieldEnum
    having?: bookmarksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BookmarksCountAggregateInputType | true
    _avg?: BookmarksAvgAggregateInputType
    _sum?: BookmarksSumAggregateInputType
    _min?: BookmarksMinAggregateInputType
    _max?: BookmarksMaxAggregateInputType
  }

  export type BookmarksGroupByOutputType = {
    id: bigint
    user_id: string | null
    article_id: string | null
    folder_id: bigint | null
    bookmarked_at: Date | null
    _count: BookmarksCountAggregateOutputType | null
    _avg: BookmarksAvgAggregateOutputType | null
    _sum: BookmarksSumAggregateOutputType | null
    _min: BookmarksMinAggregateOutputType | null
    _max: BookmarksMaxAggregateOutputType | null
  }

  type GetBookmarksGroupByPayload<T extends bookmarksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BookmarksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BookmarksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BookmarksGroupByOutputType[P]>
            : GetScalarType<T[P], BookmarksGroupByOutputType[P]>
        }
      >
    >


  export type bookmarksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    folder_id?: boolean
    bookmarked_at?: boolean
    articles?: boolean | bookmarks$articlesArgs<ExtArgs>
    bookmark_folders?: boolean | bookmarks$bookmark_foldersArgs<ExtArgs>
    users?: boolean | bookmarks$usersArgs<ExtArgs>
  }, ExtArgs["result"]["bookmarks"]>

  export type bookmarksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    folder_id?: boolean
    bookmarked_at?: boolean
    articles?: boolean | bookmarks$articlesArgs<ExtArgs>
    bookmark_folders?: boolean | bookmarks$bookmark_foldersArgs<ExtArgs>
    users?: boolean | bookmarks$usersArgs<ExtArgs>
  }, ExtArgs["result"]["bookmarks"]>

  export type bookmarksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    folder_id?: boolean
    bookmarked_at?: boolean
    articles?: boolean | bookmarks$articlesArgs<ExtArgs>
    bookmark_folders?: boolean | bookmarks$bookmark_foldersArgs<ExtArgs>
    users?: boolean | bookmarks$usersArgs<ExtArgs>
  }, ExtArgs["result"]["bookmarks"]>

  export type bookmarksSelectScalar = {
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    folder_id?: boolean
    bookmarked_at?: boolean
  }

  export type bookmarksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "article_id" | "folder_id" | "bookmarked_at", ExtArgs["result"]["bookmarks"]>
  export type bookmarksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | bookmarks$articlesArgs<ExtArgs>
    bookmark_folders?: boolean | bookmarks$bookmark_foldersArgs<ExtArgs>
    users?: boolean | bookmarks$usersArgs<ExtArgs>
  }
  export type bookmarksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | bookmarks$articlesArgs<ExtArgs>
    bookmark_folders?: boolean | bookmarks$bookmark_foldersArgs<ExtArgs>
    users?: boolean | bookmarks$usersArgs<ExtArgs>
  }
  export type bookmarksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | bookmarks$articlesArgs<ExtArgs>
    bookmark_folders?: boolean | bookmarks$bookmark_foldersArgs<ExtArgs>
    users?: boolean | bookmarks$usersArgs<ExtArgs>
  }

  export type $bookmarksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "bookmarks"
    objects: {
      articles: Prisma.$articlesPayload<ExtArgs> | null
      bookmark_folders: Prisma.$bookmark_foldersPayload<ExtArgs> | null
      users: Prisma.$public_usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string | null
      article_id: string | null
      folder_id: bigint | null
      bookmarked_at: Date | null
    }, ExtArgs["result"]["bookmarks"]>
    composites: {}
  }

  type bookmarksGetPayload<S extends boolean | null | undefined | bookmarksDefaultArgs> = $Result.GetResult<Prisma.$bookmarksPayload, S>

  type bookmarksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<bookmarksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BookmarksCountAggregateInputType | true
    }

  export interface bookmarksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['bookmarks'], meta: { name: 'bookmarks' } }
    /**
     * Find zero or one Bookmarks that matches the filter.
     * @param {bookmarksFindUniqueArgs} args - Arguments to find a Bookmarks
     * @example
     * // Get one Bookmarks
     * const bookmarks = await prisma.bookmarks.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends bookmarksFindUniqueArgs>(args: SelectSubset<T, bookmarksFindUniqueArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Bookmarks that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {bookmarksFindUniqueOrThrowArgs} args - Arguments to find a Bookmarks
     * @example
     * // Get one Bookmarks
     * const bookmarks = await prisma.bookmarks.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends bookmarksFindUniqueOrThrowArgs>(args: SelectSubset<T, bookmarksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bookmarks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmarksFindFirstArgs} args - Arguments to find a Bookmarks
     * @example
     * // Get one Bookmarks
     * const bookmarks = await prisma.bookmarks.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends bookmarksFindFirstArgs>(args?: SelectSubset<T, bookmarksFindFirstArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Bookmarks that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmarksFindFirstOrThrowArgs} args - Arguments to find a Bookmarks
     * @example
     * // Get one Bookmarks
     * const bookmarks = await prisma.bookmarks.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends bookmarksFindFirstOrThrowArgs>(args?: SelectSubset<T, bookmarksFindFirstOrThrowArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Bookmarks that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmarksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Bookmarks
     * const bookmarks = await prisma.bookmarks.findMany()
     * 
     * // Get first 10 Bookmarks
     * const bookmarks = await prisma.bookmarks.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bookmarksWithIdOnly = await prisma.bookmarks.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends bookmarksFindManyArgs>(args?: SelectSubset<T, bookmarksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Bookmarks.
     * @param {bookmarksCreateArgs} args - Arguments to create a Bookmarks.
     * @example
     * // Create one Bookmarks
     * const Bookmarks = await prisma.bookmarks.create({
     *   data: {
     *     // ... data to create a Bookmarks
     *   }
     * })
     * 
     */
    create<T extends bookmarksCreateArgs>(args: SelectSubset<T, bookmarksCreateArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Bookmarks.
     * @param {bookmarksCreateManyArgs} args - Arguments to create many Bookmarks.
     * @example
     * // Create many Bookmarks
     * const bookmarks = await prisma.bookmarks.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends bookmarksCreateManyArgs>(args?: SelectSubset<T, bookmarksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Bookmarks and returns the data saved in the database.
     * @param {bookmarksCreateManyAndReturnArgs} args - Arguments to create many Bookmarks.
     * @example
     * // Create many Bookmarks
     * const bookmarks = await prisma.bookmarks.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Bookmarks and only return the `id`
     * const bookmarksWithIdOnly = await prisma.bookmarks.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends bookmarksCreateManyAndReturnArgs>(args?: SelectSubset<T, bookmarksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Bookmarks.
     * @param {bookmarksDeleteArgs} args - Arguments to delete one Bookmarks.
     * @example
     * // Delete one Bookmarks
     * const Bookmarks = await prisma.bookmarks.delete({
     *   where: {
     *     // ... filter to delete one Bookmarks
     *   }
     * })
     * 
     */
    delete<T extends bookmarksDeleteArgs>(args: SelectSubset<T, bookmarksDeleteArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Bookmarks.
     * @param {bookmarksUpdateArgs} args - Arguments to update one Bookmarks.
     * @example
     * // Update one Bookmarks
     * const bookmarks = await prisma.bookmarks.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends bookmarksUpdateArgs>(args: SelectSubset<T, bookmarksUpdateArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Bookmarks.
     * @param {bookmarksDeleteManyArgs} args - Arguments to filter Bookmarks to delete.
     * @example
     * // Delete a few Bookmarks
     * const { count } = await prisma.bookmarks.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends bookmarksDeleteManyArgs>(args?: SelectSubset<T, bookmarksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmarksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Bookmarks
     * const bookmarks = await prisma.bookmarks.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends bookmarksUpdateManyArgs>(args: SelectSubset<T, bookmarksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Bookmarks and returns the data updated in the database.
     * @param {bookmarksUpdateManyAndReturnArgs} args - Arguments to update many Bookmarks.
     * @example
     * // Update many Bookmarks
     * const bookmarks = await prisma.bookmarks.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Bookmarks and only return the `id`
     * const bookmarksWithIdOnly = await prisma.bookmarks.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends bookmarksUpdateManyAndReturnArgs>(args: SelectSubset<T, bookmarksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Bookmarks.
     * @param {bookmarksUpsertArgs} args - Arguments to update or create a Bookmarks.
     * @example
     * // Update or create a Bookmarks
     * const bookmarks = await prisma.bookmarks.upsert({
     *   create: {
     *     // ... data to create a Bookmarks
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Bookmarks we want to update
     *   }
     * })
     */
    upsert<T extends bookmarksUpsertArgs>(args: SelectSubset<T, bookmarksUpsertArgs<ExtArgs>>): Prisma__bookmarksClient<$Result.GetResult<Prisma.$bookmarksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Bookmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmarksCountArgs} args - Arguments to filter Bookmarks to count.
     * @example
     * // Count the number of Bookmarks
     * const count = await prisma.bookmarks.count({
     *   where: {
     *     // ... the filter for the Bookmarks we want to count
     *   }
     * })
    **/
    count<T extends bookmarksCountArgs>(
      args?: Subset<T, bookmarksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BookmarksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Bookmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BookmarksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BookmarksAggregateArgs>(args: Subset<T, BookmarksAggregateArgs>): Prisma.PrismaPromise<GetBookmarksAggregateType<T>>

    /**
     * Group by Bookmarks.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {bookmarksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends bookmarksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: bookmarksGroupByArgs['orderBy'] }
        : { orderBy?: bookmarksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, bookmarksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBookmarksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the bookmarks model
   */
  readonly fields: bookmarksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for bookmarks.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__bookmarksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articles<T extends bookmarks$articlesArgs<ExtArgs> = {}>(args?: Subset<T, bookmarks$articlesArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    bookmark_folders<T extends bookmarks$bookmark_foldersArgs<ExtArgs> = {}>(args?: Subset<T, bookmarks$bookmark_foldersArgs<ExtArgs>>): Prisma__bookmark_foldersClient<$Result.GetResult<Prisma.$bookmark_foldersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends bookmarks$usersArgs<ExtArgs> = {}>(args?: Subset<T, bookmarks$usersArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the bookmarks model
   */
  interface bookmarksFieldRefs {
    readonly id: FieldRef<"bookmarks", 'BigInt'>
    readonly user_id: FieldRef<"bookmarks", 'String'>
    readonly article_id: FieldRef<"bookmarks", 'String'>
    readonly folder_id: FieldRef<"bookmarks", 'BigInt'>
    readonly bookmarked_at: FieldRef<"bookmarks", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * bookmarks findUnique
   */
  export type bookmarksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * Filter, which bookmarks to fetch.
     */
    where: bookmarksWhereUniqueInput
  }

  /**
   * bookmarks findUniqueOrThrow
   */
  export type bookmarksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * Filter, which bookmarks to fetch.
     */
    where: bookmarksWhereUniqueInput
  }

  /**
   * bookmarks findFirst
   */
  export type bookmarksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * Filter, which bookmarks to fetch.
     */
    where?: bookmarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmarks to fetch.
     */
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bookmarks.
     */
    cursor?: bookmarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmarks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmarks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bookmarks.
     */
    distinct?: BookmarksScalarFieldEnum | BookmarksScalarFieldEnum[]
  }

  /**
   * bookmarks findFirstOrThrow
   */
  export type bookmarksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * Filter, which bookmarks to fetch.
     */
    where?: bookmarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmarks to fetch.
     */
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for bookmarks.
     */
    cursor?: bookmarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmarks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmarks.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of bookmarks.
     */
    distinct?: BookmarksScalarFieldEnum | BookmarksScalarFieldEnum[]
  }

  /**
   * bookmarks findMany
   */
  export type bookmarksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * Filter, which bookmarks to fetch.
     */
    where?: bookmarksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of bookmarks to fetch.
     */
    orderBy?: bookmarksOrderByWithRelationInput | bookmarksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing bookmarks.
     */
    cursor?: bookmarksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` bookmarks from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` bookmarks.
     */
    skip?: number
    distinct?: BookmarksScalarFieldEnum | BookmarksScalarFieldEnum[]
  }

  /**
   * bookmarks create
   */
  export type bookmarksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * The data needed to create a bookmarks.
     */
    data?: XOR<bookmarksCreateInput, bookmarksUncheckedCreateInput>
  }

  /**
   * bookmarks createMany
   */
  export type bookmarksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many bookmarks.
     */
    data: bookmarksCreateManyInput | bookmarksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * bookmarks createManyAndReturn
   */
  export type bookmarksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * The data used to create many bookmarks.
     */
    data: bookmarksCreateManyInput | bookmarksCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * bookmarks update
   */
  export type bookmarksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * The data needed to update a bookmarks.
     */
    data: XOR<bookmarksUpdateInput, bookmarksUncheckedUpdateInput>
    /**
     * Choose, which bookmarks to update.
     */
    where: bookmarksWhereUniqueInput
  }

  /**
   * bookmarks updateMany
   */
  export type bookmarksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update bookmarks.
     */
    data: XOR<bookmarksUpdateManyMutationInput, bookmarksUncheckedUpdateManyInput>
    /**
     * Filter which bookmarks to update
     */
    where?: bookmarksWhereInput
    /**
     * Limit how many bookmarks to update.
     */
    limit?: number
  }

  /**
   * bookmarks updateManyAndReturn
   */
  export type bookmarksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * The data used to update bookmarks.
     */
    data: XOR<bookmarksUpdateManyMutationInput, bookmarksUncheckedUpdateManyInput>
    /**
     * Filter which bookmarks to update
     */
    where?: bookmarksWhereInput
    /**
     * Limit how many bookmarks to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * bookmarks upsert
   */
  export type bookmarksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * The filter to search for the bookmarks to update in case it exists.
     */
    where: bookmarksWhereUniqueInput
    /**
     * In case the bookmarks found by the `where` argument doesn't exist, create a new bookmarks with this data.
     */
    create: XOR<bookmarksCreateInput, bookmarksUncheckedCreateInput>
    /**
     * In case the bookmarks was found with the provided `where` argument, update it with this data.
     */
    update: XOR<bookmarksUpdateInput, bookmarksUncheckedUpdateInput>
  }

  /**
   * bookmarks delete
   */
  export type bookmarksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
    /**
     * Filter which bookmarks to delete.
     */
    where: bookmarksWhereUniqueInput
  }

  /**
   * bookmarks deleteMany
   */
  export type bookmarksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which bookmarks to delete
     */
    where?: bookmarksWhereInput
    /**
     * Limit how many bookmarks to delete.
     */
    limit?: number
  }

  /**
   * bookmarks.articles
   */
  export type bookmarks$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    where?: articlesWhereInput
  }

  /**
   * bookmarks.bookmark_folders
   */
  export type bookmarks$bookmark_foldersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmark_folders
     */
    select?: bookmark_foldersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmark_folders
     */
    omit?: bookmark_foldersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmark_foldersInclude<ExtArgs> | null
    where?: bookmark_foldersWhereInput
  }

  /**
   * bookmarks.users
   */
  export type bookmarks$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    where?: public_usersWhereInput
  }

  /**
   * bookmarks without action
   */
  export type bookmarksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the bookmarks
     */
    select?: bookmarksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the bookmarks
     */
    omit?: bookmarksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: bookmarksInclude<ExtArgs> | null
  }


  /**
   * Model geo_events
   */

  export type AggregateGeo_events = {
    _count: Geo_eventsCountAggregateOutputType | null
    _avg: Geo_eventsAvgAggregateOutputType | null
    _sum: Geo_eventsSumAggregateOutputType | null
    _min: Geo_eventsMinAggregateOutputType | null
    _max: Geo_eventsMaxAggregateOutputType | null
  }

  export type Geo_eventsAvgAggregateOutputType = {
    lat: number | null
    lng: number | null
    zoom_level: number | null
  }

  export type Geo_eventsSumAggregateOutputType = {
    lat: number | null
    lng: number | null
    zoom_level: number | null
  }

  export type Geo_eventsMinAggregateOutputType = {
    id: string | null
    article_id: string | null
    lat: number | null
    lng: number | null
    zoom_level: number | null
    label: string | null
    created_at: Date | null
  }

  export type Geo_eventsMaxAggregateOutputType = {
    id: string | null
    article_id: string | null
    lat: number | null
    lng: number | null
    zoom_level: number | null
    label: string | null
    created_at: Date | null
  }

  export type Geo_eventsCountAggregateOutputType = {
    id: number
    article_id: number
    lat: number
    lng: number
    zoom_level: number
    label: number
    created_at: number
    _all: number
  }


  export type Geo_eventsAvgAggregateInputType = {
    lat?: true
    lng?: true
    zoom_level?: true
  }

  export type Geo_eventsSumAggregateInputType = {
    lat?: true
    lng?: true
    zoom_level?: true
  }

  export type Geo_eventsMinAggregateInputType = {
    id?: true
    article_id?: true
    lat?: true
    lng?: true
    zoom_level?: true
    label?: true
    created_at?: true
  }

  export type Geo_eventsMaxAggregateInputType = {
    id?: true
    article_id?: true
    lat?: true
    lng?: true
    zoom_level?: true
    label?: true
    created_at?: true
  }

  export type Geo_eventsCountAggregateInputType = {
    id?: true
    article_id?: true
    lat?: true
    lng?: true
    zoom_level?: true
    label?: true
    created_at?: true
    _all?: true
  }

  export type Geo_eventsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which geo_events to aggregate.
     */
    where?: geo_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geo_events to fetch.
     */
    orderBy?: geo_eventsOrderByWithRelationInput | geo_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: geo_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geo_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geo_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned geo_events
    **/
    _count?: true | Geo_eventsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Geo_eventsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Geo_eventsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Geo_eventsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Geo_eventsMaxAggregateInputType
  }

  export type GetGeo_eventsAggregateType<T extends Geo_eventsAggregateArgs> = {
        [P in keyof T & keyof AggregateGeo_events]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateGeo_events[P]>
      : GetScalarType<T[P], AggregateGeo_events[P]>
  }




  export type geo_eventsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: geo_eventsWhereInput
    orderBy?: geo_eventsOrderByWithAggregationInput | geo_eventsOrderByWithAggregationInput[]
    by: Geo_eventsScalarFieldEnum[] | Geo_eventsScalarFieldEnum
    having?: geo_eventsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Geo_eventsCountAggregateInputType | true
    _avg?: Geo_eventsAvgAggregateInputType
    _sum?: Geo_eventsSumAggregateInputType
    _min?: Geo_eventsMinAggregateInputType
    _max?: Geo_eventsMaxAggregateInputType
  }

  export type Geo_eventsGroupByOutputType = {
    id: string
    article_id: string | null
    lat: number | null
    lng: number | null
    zoom_level: number | null
    label: string | null
    created_at: Date | null
    _count: Geo_eventsCountAggregateOutputType | null
    _avg: Geo_eventsAvgAggregateOutputType | null
    _sum: Geo_eventsSumAggregateOutputType | null
    _min: Geo_eventsMinAggregateOutputType | null
    _max: Geo_eventsMaxAggregateOutputType | null
  }

  type GetGeo_eventsGroupByPayload<T extends geo_eventsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Geo_eventsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Geo_eventsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Geo_eventsGroupByOutputType[P]>
            : GetScalarType<T[P], Geo_eventsGroupByOutputType[P]>
        }
      >
    >


  export type geo_eventsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    article_id?: boolean
    lat?: boolean
    lng?: boolean
    zoom_level?: boolean
    label?: boolean
    created_at?: boolean
    articles?: boolean | geo_events$articlesArgs<ExtArgs>
  }, ExtArgs["result"]["geo_events"]>

  export type geo_eventsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    article_id?: boolean
    lat?: boolean
    lng?: boolean
    zoom_level?: boolean
    label?: boolean
    created_at?: boolean
    articles?: boolean | geo_events$articlesArgs<ExtArgs>
  }, ExtArgs["result"]["geo_events"]>

  export type geo_eventsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    article_id?: boolean
    lat?: boolean
    lng?: boolean
    zoom_level?: boolean
    label?: boolean
    created_at?: boolean
    articles?: boolean | geo_events$articlesArgs<ExtArgs>
  }, ExtArgs["result"]["geo_events"]>

  export type geo_eventsSelectScalar = {
    id?: boolean
    article_id?: boolean
    lat?: boolean
    lng?: boolean
    zoom_level?: boolean
    label?: boolean
    created_at?: boolean
  }

  export type geo_eventsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "article_id" | "lat" | "lng" | "zoom_level" | "label" | "created_at", ExtArgs["result"]["geo_events"]>
  export type geo_eventsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | geo_events$articlesArgs<ExtArgs>
  }
  export type geo_eventsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | geo_events$articlesArgs<ExtArgs>
  }
  export type geo_eventsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | geo_events$articlesArgs<ExtArgs>
  }

  export type $geo_eventsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "geo_events"
    objects: {
      articles: Prisma.$articlesPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      article_id: string | null
      lat: number | null
      lng: number | null
      zoom_level: number | null
      label: string | null
      created_at: Date | null
    }, ExtArgs["result"]["geo_events"]>
    composites: {}
  }

  type geo_eventsGetPayload<S extends boolean | null | undefined | geo_eventsDefaultArgs> = $Result.GetResult<Prisma.$geo_eventsPayload, S>

  type geo_eventsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<geo_eventsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Geo_eventsCountAggregateInputType | true
    }

  export interface geo_eventsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['geo_events'], meta: { name: 'geo_events' } }
    /**
     * Find zero or one Geo_events that matches the filter.
     * @param {geo_eventsFindUniqueArgs} args - Arguments to find a Geo_events
     * @example
     * // Get one Geo_events
     * const geo_events = await prisma.geo_events.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends geo_eventsFindUniqueArgs>(args: SelectSubset<T, geo_eventsFindUniqueArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Geo_events that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {geo_eventsFindUniqueOrThrowArgs} args - Arguments to find a Geo_events
     * @example
     * // Get one Geo_events
     * const geo_events = await prisma.geo_events.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends geo_eventsFindUniqueOrThrowArgs>(args: SelectSubset<T, geo_eventsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Geo_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geo_eventsFindFirstArgs} args - Arguments to find a Geo_events
     * @example
     * // Get one Geo_events
     * const geo_events = await prisma.geo_events.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends geo_eventsFindFirstArgs>(args?: SelectSubset<T, geo_eventsFindFirstArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Geo_events that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geo_eventsFindFirstOrThrowArgs} args - Arguments to find a Geo_events
     * @example
     * // Get one Geo_events
     * const geo_events = await prisma.geo_events.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends geo_eventsFindFirstOrThrowArgs>(args?: SelectSubset<T, geo_eventsFindFirstOrThrowArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Geo_events that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geo_eventsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Geo_events
     * const geo_events = await prisma.geo_events.findMany()
     * 
     * // Get first 10 Geo_events
     * const geo_events = await prisma.geo_events.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const geo_eventsWithIdOnly = await prisma.geo_events.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends geo_eventsFindManyArgs>(args?: SelectSubset<T, geo_eventsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Geo_events.
     * @param {geo_eventsCreateArgs} args - Arguments to create a Geo_events.
     * @example
     * // Create one Geo_events
     * const Geo_events = await prisma.geo_events.create({
     *   data: {
     *     // ... data to create a Geo_events
     *   }
     * })
     * 
     */
    create<T extends geo_eventsCreateArgs>(args: SelectSubset<T, geo_eventsCreateArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Geo_events.
     * @param {geo_eventsCreateManyArgs} args - Arguments to create many Geo_events.
     * @example
     * // Create many Geo_events
     * const geo_events = await prisma.geo_events.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends geo_eventsCreateManyArgs>(args?: SelectSubset<T, geo_eventsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Geo_events and returns the data saved in the database.
     * @param {geo_eventsCreateManyAndReturnArgs} args - Arguments to create many Geo_events.
     * @example
     * // Create many Geo_events
     * const geo_events = await prisma.geo_events.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Geo_events and only return the `id`
     * const geo_eventsWithIdOnly = await prisma.geo_events.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends geo_eventsCreateManyAndReturnArgs>(args?: SelectSubset<T, geo_eventsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Geo_events.
     * @param {geo_eventsDeleteArgs} args - Arguments to delete one Geo_events.
     * @example
     * // Delete one Geo_events
     * const Geo_events = await prisma.geo_events.delete({
     *   where: {
     *     // ... filter to delete one Geo_events
     *   }
     * })
     * 
     */
    delete<T extends geo_eventsDeleteArgs>(args: SelectSubset<T, geo_eventsDeleteArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Geo_events.
     * @param {geo_eventsUpdateArgs} args - Arguments to update one Geo_events.
     * @example
     * // Update one Geo_events
     * const geo_events = await prisma.geo_events.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends geo_eventsUpdateArgs>(args: SelectSubset<T, geo_eventsUpdateArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Geo_events.
     * @param {geo_eventsDeleteManyArgs} args - Arguments to filter Geo_events to delete.
     * @example
     * // Delete a few Geo_events
     * const { count } = await prisma.geo_events.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends geo_eventsDeleteManyArgs>(args?: SelectSubset<T, geo_eventsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Geo_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geo_eventsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Geo_events
     * const geo_events = await prisma.geo_events.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends geo_eventsUpdateManyArgs>(args: SelectSubset<T, geo_eventsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Geo_events and returns the data updated in the database.
     * @param {geo_eventsUpdateManyAndReturnArgs} args - Arguments to update many Geo_events.
     * @example
     * // Update many Geo_events
     * const geo_events = await prisma.geo_events.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Geo_events and only return the `id`
     * const geo_eventsWithIdOnly = await prisma.geo_events.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends geo_eventsUpdateManyAndReturnArgs>(args: SelectSubset<T, geo_eventsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Geo_events.
     * @param {geo_eventsUpsertArgs} args - Arguments to update or create a Geo_events.
     * @example
     * // Update or create a Geo_events
     * const geo_events = await prisma.geo_events.upsert({
     *   create: {
     *     // ... data to create a Geo_events
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Geo_events we want to update
     *   }
     * })
     */
    upsert<T extends geo_eventsUpsertArgs>(args: SelectSubset<T, geo_eventsUpsertArgs<ExtArgs>>): Prisma__geo_eventsClient<$Result.GetResult<Prisma.$geo_eventsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Geo_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geo_eventsCountArgs} args - Arguments to filter Geo_events to count.
     * @example
     * // Count the number of Geo_events
     * const count = await prisma.geo_events.count({
     *   where: {
     *     // ... the filter for the Geo_events we want to count
     *   }
     * })
    **/
    count<T extends geo_eventsCountArgs>(
      args?: Subset<T, geo_eventsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Geo_eventsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Geo_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Geo_eventsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Geo_eventsAggregateArgs>(args: Subset<T, Geo_eventsAggregateArgs>): Prisma.PrismaPromise<GetGeo_eventsAggregateType<T>>

    /**
     * Group by Geo_events.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {geo_eventsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends geo_eventsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: geo_eventsGroupByArgs['orderBy'] }
        : { orderBy?: geo_eventsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, geo_eventsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetGeo_eventsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the geo_events model
   */
  readonly fields: geo_eventsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for geo_events.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__geo_eventsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articles<T extends geo_events$articlesArgs<ExtArgs> = {}>(args?: Subset<T, geo_events$articlesArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the geo_events model
   */
  interface geo_eventsFieldRefs {
    readonly id: FieldRef<"geo_events", 'String'>
    readonly article_id: FieldRef<"geo_events", 'String'>
    readonly lat: FieldRef<"geo_events", 'Float'>
    readonly lng: FieldRef<"geo_events", 'Float'>
    readonly zoom_level: FieldRef<"geo_events", 'Int'>
    readonly label: FieldRef<"geo_events", 'String'>
    readonly created_at: FieldRef<"geo_events", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * geo_events findUnique
   */
  export type geo_eventsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * Filter, which geo_events to fetch.
     */
    where: geo_eventsWhereUniqueInput
  }

  /**
   * geo_events findUniqueOrThrow
   */
  export type geo_eventsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * Filter, which geo_events to fetch.
     */
    where: geo_eventsWhereUniqueInput
  }

  /**
   * geo_events findFirst
   */
  export type geo_eventsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * Filter, which geo_events to fetch.
     */
    where?: geo_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geo_events to fetch.
     */
    orderBy?: geo_eventsOrderByWithRelationInput | geo_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for geo_events.
     */
    cursor?: geo_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geo_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geo_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of geo_events.
     */
    distinct?: Geo_eventsScalarFieldEnum | Geo_eventsScalarFieldEnum[]
  }

  /**
   * geo_events findFirstOrThrow
   */
  export type geo_eventsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * Filter, which geo_events to fetch.
     */
    where?: geo_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geo_events to fetch.
     */
    orderBy?: geo_eventsOrderByWithRelationInput | geo_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for geo_events.
     */
    cursor?: geo_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geo_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geo_events.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of geo_events.
     */
    distinct?: Geo_eventsScalarFieldEnum | Geo_eventsScalarFieldEnum[]
  }

  /**
   * geo_events findMany
   */
  export type geo_eventsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * Filter, which geo_events to fetch.
     */
    where?: geo_eventsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of geo_events to fetch.
     */
    orderBy?: geo_eventsOrderByWithRelationInput | geo_eventsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing geo_events.
     */
    cursor?: geo_eventsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` geo_events from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` geo_events.
     */
    skip?: number
    distinct?: Geo_eventsScalarFieldEnum | Geo_eventsScalarFieldEnum[]
  }

  /**
   * geo_events create
   */
  export type geo_eventsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * The data needed to create a geo_events.
     */
    data?: XOR<geo_eventsCreateInput, geo_eventsUncheckedCreateInput>
  }

  /**
   * geo_events createMany
   */
  export type geo_eventsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many geo_events.
     */
    data: geo_eventsCreateManyInput | geo_eventsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * geo_events createManyAndReturn
   */
  export type geo_eventsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * The data used to create many geo_events.
     */
    data: geo_eventsCreateManyInput | geo_eventsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * geo_events update
   */
  export type geo_eventsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * The data needed to update a geo_events.
     */
    data: XOR<geo_eventsUpdateInput, geo_eventsUncheckedUpdateInput>
    /**
     * Choose, which geo_events to update.
     */
    where: geo_eventsWhereUniqueInput
  }

  /**
   * geo_events updateMany
   */
  export type geo_eventsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update geo_events.
     */
    data: XOR<geo_eventsUpdateManyMutationInput, geo_eventsUncheckedUpdateManyInput>
    /**
     * Filter which geo_events to update
     */
    where?: geo_eventsWhereInput
    /**
     * Limit how many geo_events to update.
     */
    limit?: number
  }

  /**
   * geo_events updateManyAndReturn
   */
  export type geo_eventsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * The data used to update geo_events.
     */
    data: XOR<geo_eventsUpdateManyMutationInput, geo_eventsUncheckedUpdateManyInput>
    /**
     * Filter which geo_events to update
     */
    where?: geo_eventsWhereInput
    /**
     * Limit how many geo_events to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * geo_events upsert
   */
  export type geo_eventsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * The filter to search for the geo_events to update in case it exists.
     */
    where: geo_eventsWhereUniqueInput
    /**
     * In case the geo_events found by the `where` argument doesn't exist, create a new geo_events with this data.
     */
    create: XOR<geo_eventsCreateInput, geo_eventsUncheckedCreateInput>
    /**
     * In case the geo_events was found with the provided `where` argument, update it with this data.
     */
    update: XOR<geo_eventsUpdateInput, geo_eventsUncheckedUpdateInput>
  }

  /**
   * geo_events delete
   */
  export type geo_eventsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
    /**
     * Filter which geo_events to delete.
     */
    where: geo_eventsWhereUniqueInput
  }

  /**
   * geo_events deleteMany
   */
  export type geo_eventsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which geo_events to delete
     */
    where?: geo_eventsWhereInput
    /**
     * Limit how many geo_events to delete.
     */
    limit?: number
  }

  /**
   * geo_events.articles
   */
  export type geo_events$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    where?: articlesWhereInput
  }

  /**
   * geo_events without action
   */
  export type geo_eventsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the geo_events
     */
    select?: geo_eventsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the geo_events
     */
    omit?: geo_eventsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: geo_eventsInclude<ExtArgs> | null
  }


  /**
   * Model likes
   */

  export type AggregateLikes = {
    _count: LikesCountAggregateOutputType | null
    _avg: LikesAvgAggregateOutputType | null
    _sum: LikesSumAggregateOutputType | null
    _min: LikesMinAggregateOutputType | null
    _max: LikesMaxAggregateOutputType | null
  }

  export type LikesAvgAggregateOutputType = {
    id: number | null
  }

  export type LikesSumAggregateOutputType = {
    id: bigint | null
  }

  export type LikesMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    liked_at: Date | null
  }

  export type LikesMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    liked_at: Date | null
  }

  export type LikesCountAggregateOutputType = {
    id: number
    user_id: number
    article_id: number
    liked_at: number
    _all: number
  }


  export type LikesAvgAggregateInputType = {
    id?: true
  }

  export type LikesSumAggregateInputType = {
    id?: true
  }

  export type LikesMinAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    liked_at?: true
  }

  export type LikesMaxAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    liked_at?: true
  }

  export type LikesCountAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    liked_at?: true
    _all?: true
  }

  export type LikesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which likes to aggregate.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned likes
    **/
    _count?: true | LikesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: LikesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: LikesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: LikesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: LikesMaxAggregateInputType
  }

  export type GetLikesAggregateType<T extends LikesAggregateArgs> = {
        [P in keyof T & keyof AggregateLikes]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateLikes[P]>
      : GetScalarType<T[P], AggregateLikes[P]>
  }




  export type likesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: likesWhereInput
    orderBy?: likesOrderByWithAggregationInput | likesOrderByWithAggregationInput[]
    by: LikesScalarFieldEnum[] | LikesScalarFieldEnum
    having?: likesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: LikesCountAggregateInputType | true
    _avg?: LikesAvgAggregateInputType
    _sum?: LikesSumAggregateInputType
    _min?: LikesMinAggregateInputType
    _max?: LikesMaxAggregateInputType
  }

  export type LikesGroupByOutputType = {
    id: bigint
    user_id: string | null
    article_id: string | null
    liked_at: Date | null
    _count: LikesCountAggregateOutputType | null
    _avg: LikesAvgAggregateOutputType | null
    _sum: LikesSumAggregateOutputType | null
    _min: LikesMinAggregateOutputType | null
    _max: LikesMaxAggregateOutputType | null
  }

  type GetLikesGroupByPayload<T extends likesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<LikesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof LikesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], LikesGroupByOutputType[P]>
            : GetScalarType<T[P], LikesGroupByOutputType[P]>
        }
      >
    >


  export type likesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    liked_at?: boolean
    articles?: boolean | likes$articlesArgs<ExtArgs>
    users?: boolean | likes$usersArgs<ExtArgs>
  }, ExtArgs["result"]["likes"]>

  export type likesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    liked_at?: boolean
    articles?: boolean | likes$articlesArgs<ExtArgs>
    users?: boolean | likes$usersArgs<ExtArgs>
  }, ExtArgs["result"]["likes"]>

  export type likesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    liked_at?: boolean
    articles?: boolean | likes$articlesArgs<ExtArgs>
    users?: boolean | likes$usersArgs<ExtArgs>
  }, ExtArgs["result"]["likes"]>

  export type likesSelectScalar = {
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    liked_at?: boolean
  }

  export type likesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "article_id" | "liked_at", ExtArgs["result"]["likes"]>
  export type likesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | likes$articlesArgs<ExtArgs>
    users?: boolean | likes$usersArgs<ExtArgs>
  }
  export type likesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | likes$articlesArgs<ExtArgs>
    users?: boolean | likes$usersArgs<ExtArgs>
  }
  export type likesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | likes$articlesArgs<ExtArgs>
    users?: boolean | likes$usersArgs<ExtArgs>
  }

  export type $likesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "likes"
    objects: {
      articles: Prisma.$articlesPayload<ExtArgs> | null
      users: Prisma.$public_usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string | null
      article_id: string | null
      liked_at: Date | null
    }, ExtArgs["result"]["likes"]>
    composites: {}
  }

  type likesGetPayload<S extends boolean | null | undefined | likesDefaultArgs> = $Result.GetResult<Prisma.$likesPayload, S>

  type likesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<likesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: LikesCountAggregateInputType | true
    }

  export interface likesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['likes'], meta: { name: 'likes' } }
    /**
     * Find zero or one Likes that matches the filter.
     * @param {likesFindUniqueArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends likesFindUniqueArgs>(args: SelectSubset<T, likesFindUniqueArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Likes that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {likesFindUniqueOrThrowArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends likesFindUniqueOrThrowArgs>(args: SelectSubset<T, likesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesFindFirstArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends likesFindFirstArgs>(args?: SelectSubset<T, likesFindFirstArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Likes that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesFindFirstOrThrowArgs} args - Arguments to find a Likes
     * @example
     * // Get one Likes
     * const likes = await prisma.likes.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends likesFindFirstOrThrowArgs>(args?: SelectSubset<T, likesFindFirstOrThrowArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Likes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Likes
     * const likes = await prisma.likes.findMany()
     * 
     * // Get first 10 Likes
     * const likes = await prisma.likes.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const likesWithIdOnly = await prisma.likes.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends likesFindManyArgs>(args?: SelectSubset<T, likesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Likes.
     * @param {likesCreateArgs} args - Arguments to create a Likes.
     * @example
     * // Create one Likes
     * const Likes = await prisma.likes.create({
     *   data: {
     *     // ... data to create a Likes
     *   }
     * })
     * 
     */
    create<T extends likesCreateArgs>(args: SelectSubset<T, likesCreateArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Likes.
     * @param {likesCreateManyArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const likes = await prisma.likes.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends likesCreateManyArgs>(args?: SelectSubset<T, likesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Likes and returns the data saved in the database.
     * @param {likesCreateManyAndReturnArgs} args - Arguments to create many Likes.
     * @example
     * // Create many Likes
     * const likes = await prisma.likes.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Likes and only return the `id`
     * const likesWithIdOnly = await prisma.likes.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends likesCreateManyAndReturnArgs>(args?: SelectSubset<T, likesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Likes.
     * @param {likesDeleteArgs} args - Arguments to delete one Likes.
     * @example
     * // Delete one Likes
     * const Likes = await prisma.likes.delete({
     *   where: {
     *     // ... filter to delete one Likes
     *   }
     * })
     * 
     */
    delete<T extends likesDeleteArgs>(args: SelectSubset<T, likesDeleteArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Likes.
     * @param {likesUpdateArgs} args - Arguments to update one Likes.
     * @example
     * // Update one Likes
     * const likes = await prisma.likes.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends likesUpdateArgs>(args: SelectSubset<T, likesUpdateArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Likes.
     * @param {likesDeleteManyArgs} args - Arguments to filter Likes to delete.
     * @example
     * // Delete a few Likes
     * const { count } = await prisma.likes.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends likesDeleteManyArgs>(args?: SelectSubset<T, likesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Likes
     * const likes = await prisma.likes.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends likesUpdateManyArgs>(args: SelectSubset<T, likesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Likes and returns the data updated in the database.
     * @param {likesUpdateManyAndReturnArgs} args - Arguments to update many Likes.
     * @example
     * // Update many Likes
     * const likes = await prisma.likes.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Likes and only return the `id`
     * const likesWithIdOnly = await prisma.likes.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends likesUpdateManyAndReturnArgs>(args: SelectSubset<T, likesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Likes.
     * @param {likesUpsertArgs} args - Arguments to update or create a Likes.
     * @example
     * // Update or create a Likes
     * const likes = await prisma.likes.upsert({
     *   create: {
     *     // ... data to create a Likes
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Likes we want to update
     *   }
     * })
     */
    upsert<T extends likesUpsertArgs>(args: SelectSubset<T, likesUpsertArgs<ExtArgs>>): Prisma__likesClient<$Result.GetResult<Prisma.$likesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesCountArgs} args - Arguments to filter Likes to count.
     * @example
     * // Count the number of Likes
     * const count = await prisma.likes.count({
     *   where: {
     *     // ... the filter for the Likes we want to count
     *   }
     * })
    **/
    count<T extends likesCountArgs>(
      args?: Subset<T, likesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], LikesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {LikesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends LikesAggregateArgs>(args: Subset<T, LikesAggregateArgs>): Prisma.PrismaPromise<GetLikesAggregateType<T>>

    /**
     * Group by Likes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {likesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends likesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: likesGroupByArgs['orderBy'] }
        : { orderBy?: likesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, likesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetLikesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the likes model
   */
  readonly fields: likesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for likes.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__likesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articles<T extends likes$articlesArgs<ExtArgs> = {}>(args?: Subset<T, likes$articlesArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends likes$usersArgs<ExtArgs> = {}>(args?: Subset<T, likes$usersArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the likes model
   */
  interface likesFieldRefs {
    readonly id: FieldRef<"likes", 'BigInt'>
    readonly user_id: FieldRef<"likes", 'String'>
    readonly article_id: FieldRef<"likes", 'String'>
    readonly liked_at: FieldRef<"likes", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * likes findUnique
   */
  export type likesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes findUniqueOrThrow
   */
  export type likesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes findFirst
   */
  export type likesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for likes.
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of likes.
     */
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * likes findFirstOrThrow
   */
  export type likesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for likes.
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of likes.
     */
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * likes findMany
   */
  export type likesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter, which likes to fetch.
     */
    where?: likesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of likes to fetch.
     */
    orderBy?: likesOrderByWithRelationInput | likesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing likes.
     */
    cursor?: likesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` likes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` likes.
     */
    skip?: number
    distinct?: LikesScalarFieldEnum | LikesScalarFieldEnum[]
  }

  /**
   * likes create
   */
  export type likesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * The data needed to create a likes.
     */
    data?: XOR<likesCreateInput, likesUncheckedCreateInput>
  }

  /**
   * likes createMany
   */
  export type likesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many likes.
     */
    data: likesCreateManyInput | likesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * likes createManyAndReturn
   */
  export type likesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * The data used to create many likes.
     */
    data: likesCreateManyInput | likesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * likes update
   */
  export type likesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * The data needed to update a likes.
     */
    data: XOR<likesUpdateInput, likesUncheckedUpdateInput>
    /**
     * Choose, which likes to update.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes updateMany
   */
  export type likesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update likes.
     */
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyInput>
    /**
     * Filter which likes to update
     */
    where?: likesWhereInput
    /**
     * Limit how many likes to update.
     */
    limit?: number
  }

  /**
   * likes updateManyAndReturn
   */
  export type likesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * The data used to update likes.
     */
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyInput>
    /**
     * Filter which likes to update
     */
    where?: likesWhereInput
    /**
     * Limit how many likes to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * likes upsert
   */
  export type likesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * The filter to search for the likes to update in case it exists.
     */
    where: likesWhereUniqueInput
    /**
     * In case the likes found by the `where` argument doesn't exist, create a new likes with this data.
     */
    create: XOR<likesCreateInput, likesUncheckedCreateInput>
    /**
     * In case the likes was found with the provided `where` argument, update it with this data.
     */
    update: XOR<likesUpdateInput, likesUncheckedUpdateInput>
  }

  /**
   * likes delete
   */
  export type likesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
    /**
     * Filter which likes to delete.
     */
    where: likesWhereUniqueInput
  }

  /**
   * likes deleteMany
   */
  export type likesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which likes to delete
     */
    where?: likesWhereInput
    /**
     * Limit how many likes to delete.
     */
    limit?: number
  }

  /**
   * likes.articles
   */
  export type likes$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    where?: articlesWhereInput
  }

  /**
   * likes.users
   */
  export type likes$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    where?: public_usersWhereInput
  }

  /**
   * likes without action
   */
  export type likesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the likes
     */
    select?: likesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the likes
     */
    omit?: likesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: likesInclude<ExtArgs> | null
  }


  /**
   * Model tags
   */

  export type AggregateTags = {
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  export type TagsAvgAggregateOutputType = {
    id: number | null
  }

  export type TagsSumAggregateOutputType = {
    id: bigint | null
  }

  export type TagsMinAggregateOutputType = {
    id: bigint | null
    name: string | null
  }

  export type TagsMaxAggregateOutputType = {
    id: bigint | null
    name: string | null
  }

  export type TagsCountAggregateOutputType = {
    id: number
    name: number
    _all: number
  }


  export type TagsAvgAggregateInputType = {
    id?: true
  }

  export type TagsSumAggregateInputType = {
    id?: true
  }

  export type TagsMinAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagsMaxAggregateInputType = {
    id?: true
    name?: true
  }

  export type TagsCountAggregateInputType = {
    id?: true
    name?: true
    _all?: true
  }

  export type TagsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to aggregate.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned tags
    **/
    _count?: true | TagsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: TagsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: TagsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: TagsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: TagsMaxAggregateInputType
  }

  export type GetTagsAggregateType<T extends TagsAggregateArgs> = {
        [P in keyof T & keyof AggregateTags]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateTags[P]>
      : GetScalarType<T[P], AggregateTags[P]>
  }




  export type tagsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: tagsWhereInput
    orderBy?: tagsOrderByWithAggregationInput | tagsOrderByWithAggregationInput[]
    by: TagsScalarFieldEnum[] | TagsScalarFieldEnum
    having?: tagsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: TagsCountAggregateInputType | true
    _avg?: TagsAvgAggregateInputType
    _sum?: TagsSumAggregateInputType
    _min?: TagsMinAggregateInputType
    _max?: TagsMaxAggregateInputType
  }

  export type TagsGroupByOutputType = {
    id: bigint
    name: string | null
    _count: TagsCountAggregateOutputType | null
    _avg: TagsAvgAggregateOutputType | null
    _sum: TagsSumAggregateOutputType | null
    _min: TagsMinAggregateOutputType | null
    _max: TagsMaxAggregateOutputType | null
  }

  type GetTagsGroupByPayload<T extends tagsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<TagsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof TagsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], TagsGroupByOutputType[P]>
            : GetScalarType<T[P], TagsGroupByOutputType[P]>
        }
      >
    >


  export type tagsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    article_tags?: boolean | tags$article_tagsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["tags"]>

  export type tagsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["tags"]>

  export type tagsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
  }, ExtArgs["result"]["tags"]>

  export type tagsSelectScalar = {
    id?: boolean
    name?: boolean
  }

  export type tagsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "name", ExtArgs["result"]["tags"]>
  export type tagsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    article_tags?: boolean | tags$article_tagsArgs<ExtArgs>
    _count?: boolean | TagsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type tagsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type tagsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $tagsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "tags"
    objects: {
      article_tags: Prisma.$article_tagsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      name: string | null
    }, ExtArgs["result"]["tags"]>
    composites: {}
  }

  type tagsGetPayload<S extends boolean | null | undefined | tagsDefaultArgs> = $Result.GetResult<Prisma.$tagsPayload, S>

  type tagsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<tagsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: TagsCountAggregateInputType | true
    }

  export interface tagsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['tags'], meta: { name: 'tags' } }
    /**
     * Find zero or one Tags that matches the filter.
     * @param {tagsFindUniqueArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends tagsFindUniqueArgs>(args: SelectSubset<T, tagsFindUniqueArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Tags that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {tagsFindUniqueOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends tagsFindUniqueOrThrowArgs>(args: SelectSubset<T, tagsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindFirstArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends tagsFindFirstArgs>(args?: SelectSubset<T, tagsFindFirstArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Tags that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindFirstOrThrowArgs} args - Arguments to find a Tags
     * @example
     * // Get one Tags
     * const tags = await prisma.tags.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends tagsFindFirstOrThrowArgs>(args?: SelectSubset<T, tagsFindFirstOrThrowArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Tags that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Tags
     * const tags = await prisma.tags.findMany()
     * 
     * // Get first 10 Tags
     * const tags = await prisma.tags.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const tagsWithIdOnly = await prisma.tags.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends tagsFindManyArgs>(args?: SelectSubset<T, tagsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Tags.
     * @param {tagsCreateArgs} args - Arguments to create a Tags.
     * @example
     * // Create one Tags
     * const Tags = await prisma.tags.create({
     *   data: {
     *     // ... data to create a Tags
     *   }
     * })
     * 
     */
    create<T extends tagsCreateArgs>(args: SelectSubset<T, tagsCreateArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Tags.
     * @param {tagsCreateManyArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tags = await prisma.tags.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends tagsCreateManyArgs>(args?: SelectSubset<T, tagsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Tags and returns the data saved in the database.
     * @param {tagsCreateManyAndReturnArgs} args - Arguments to create many Tags.
     * @example
     * // Create many Tags
     * const tags = await prisma.tags.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Tags and only return the `id`
     * const tagsWithIdOnly = await prisma.tags.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends tagsCreateManyAndReturnArgs>(args?: SelectSubset<T, tagsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Tags.
     * @param {tagsDeleteArgs} args - Arguments to delete one Tags.
     * @example
     * // Delete one Tags
     * const Tags = await prisma.tags.delete({
     *   where: {
     *     // ... filter to delete one Tags
     *   }
     * })
     * 
     */
    delete<T extends tagsDeleteArgs>(args: SelectSubset<T, tagsDeleteArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Tags.
     * @param {tagsUpdateArgs} args - Arguments to update one Tags.
     * @example
     * // Update one Tags
     * const tags = await prisma.tags.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends tagsUpdateArgs>(args: SelectSubset<T, tagsUpdateArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Tags.
     * @param {tagsDeleteManyArgs} args - Arguments to filter Tags to delete.
     * @example
     * // Delete a few Tags
     * const { count } = await prisma.tags.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends tagsDeleteManyArgs>(args?: SelectSubset<T, tagsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends tagsUpdateManyArgs>(args: SelectSubset<T, tagsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Tags and returns the data updated in the database.
     * @param {tagsUpdateManyAndReturnArgs} args - Arguments to update many Tags.
     * @example
     * // Update many Tags
     * const tags = await prisma.tags.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Tags and only return the `id`
     * const tagsWithIdOnly = await prisma.tags.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends tagsUpdateManyAndReturnArgs>(args: SelectSubset<T, tagsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Tags.
     * @param {tagsUpsertArgs} args - Arguments to update or create a Tags.
     * @example
     * // Update or create a Tags
     * const tags = await prisma.tags.upsert({
     *   create: {
     *     // ... data to create a Tags
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Tags we want to update
     *   }
     * })
     */
    upsert<T extends tagsUpsertArgs>(args: SelectSubset<T, tagsUpsertArgs<ExtArgs>>): Prisma__tagsClient<$Result.GetResult<Prisma.$tagsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsCountArgs} args - Arguments to filter Tags to count.
     * @example
     * // Count the number of Tags
     * const count = await prisma.tags.count({
     *   where: {
     *     // ... the filter for the Tags we want to count
     *   }
     * })
    **/
    count<T extends tagsCountArgs>(
      args?: Subset<T, tagsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], TagsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {TagsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends TagsAggregateArgs>(args: Subset<T, TagsAggregateArgs>): Prisma.PrismaPromise<GetTagsAggregateType<T>>

    /**
     * Group by Tags.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {tagsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends tagsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: tagsGroupByArgs['orderBy'] }
        : { orderBy?: tagsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, tagsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetTagsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the tags model
   */
  readonly fields: tagsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for tags.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__tagsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    article_tags<T extends tags$article_tagsArgs<ExtArgs> = {}>(args?: Subset<T, tags$article_tagsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$article_tagsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the tags model
   */
  interface tagsFieldRefs {
    readonly id: FieldRef<"tags", 'BigInt'>
    readonly name: FieldRef<"tags", 'String'>
  }
    

  // Custom InputTypes
  /**
   * tags findUnique
   */
  export type tagsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags findUniqueOrThrow
   */
  export type tagsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags findFirst
   */
  export type tagsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags findFirstOrThrow
   */
  export type tagsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of tags.
     */
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags findMany
   */
  export type tagsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter, which tags to fetch.
     */
    where?: tagsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of tags to fetch.
     */
    orderBy?: tagsOrderByWithRelationInput | tagsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing tags.
     */
    cursor?: tagsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` tags from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` tags.
     */
    skip?: number
    distinct?: TagsScalarFieldEnum | TagsScalarFieldEnum[]
  }

  /**
   * tags create
   */
  export type tagsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The data needed to create a tags.
     */
    data?: XOR<tagsCreateInput, tagsUncheckedCreateInput>
  }

  /**
   * tags createMany
   */
  export type tagsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many tags.
     */
    data: tagsCreateManyInput | tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tags createManyAndReturn
   */
  export type tagsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * The data used to create many tags.
     */
    data: tagsCreateManyInput | tagsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * tags update
   */
  export type tagsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The data needed to update a tags.
     */
    data: XOR<tagsUpdateInput, tagsUncheckedUpdateInput>
    /**
     * Choose, which tags to update.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags updateMany
   */
  export type tagsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update tags.
     */
    data: XOR<tagsUpdateManyMutationInput, tagsUncheckedUpdateManyInput>
    /**
     * Filter which tags to update
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to update.
     */
    limit?: number
  }

  /**
   * tags updateManyAndReturn
   */
  export type tagsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * The data used to update tags.
     */
    data: XOR<tagsUpdateManyMutationInput, tagsUncheckedUpdateManyInput>
    /**
     * Filter which tags to update
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to update.
     */
    limit?: number
  }

  /**
   * tags upsert
   */
  export type tagsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * The filter to search for the tags to update in case it exists.
     */
    where: tagsWhereUniqueInput
    /**
     * In case the tags found by the `where` argument doesn't exist, create a new tags with this data.
     */
    create: XOR<tagsCreateInput, tagsUncheckedCreateInput>
    /**
     * In case the tags was found with the provided `where` argument, update it with this data.
     */
    update: XOR<tagsUpdateInput, tagsUncheckedUpdateInput>
  }

  /**
   * tags delete
   */
  export type tagsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
    /**
     * Filter which tags to delete.
     */
    where: tagsWhereUniqueInput
  }

  /**
   * tags deleteMany
   */
  export type tagsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which tags to delete
     */
    where?: tagsWhereInput
    /**
     * Limit how many tags to delete.
     */
    limit?: number
  }

  /**
   * tags.article_tags
   */
  export type tags$article_tagsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the article_tags
     */
    select?: article_tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the article_tags
     */
    omit?: article_tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: article_tagsInclude<ExtArgs> | null
    where?: article_tagsWhereInput
    orderBy?: article_tagsOrderByWithRelationInput | article_tagsOrderByWithRelationInput[]
    cursor?: article_tagsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Article_tagsScalarFieldEnum | Article_tagsScalarFieldEnum[]
  }

  /**
   * tags without action
   */
  export type tagsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the tags
     */
    select?: tagsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the tags
     */
    omit?: tagsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: tagsInclude<ExtArgs> | null
  }


  /**
   * Model views
   */

  export type AggregateViews = {
    _count: ViewsCountAggregateOutputType | null
    _avg: ViewsAvgAggregateOutputType | null
    _sum: ViewsSumAggregateOutputType | null
    _min: ViewsMinAggregateOutputType | null
    _max: ViewsMaxAggregateOutputType | null
  }

  export type ViewsAvgAggregateOutputType = {
    id: number | null
  }

  export type ViewsSumAggregateOutputType = {
    id: bigint | null
  }

  export type ViewsMinAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    viewed_at: Date | null
  }

  export type ViewsMaxAggregateOutputType = {
    id: bigint | null
    user_id: string | null
    article_id: string | null
    viewed_at: Date | null
  }

  export type ViewsCountAggregateOutputType = {
    id: number
    user_id: number
    article_id: number
    viewed_at: number
    _all: number
  }


  export type ViewsAvgAggregateInputType = {
    id?: true
  }

  export type ViewsSumAggregateInputType = {
    id?: true
  }

  export type ViewsMinAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    viewed_at?: true
  }

  export type ViewsMaxAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    viewed_at?: true
  }

  export type ViewsCountAggregateInputType = {
    id?: true
    user_id?: true
    article_id?: true
    viewed_at?: true
    _all?: true
  }

  export type ViewsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which views to aggregate.
     */
    where?: viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of views to fetch.
     */
    orderBy?: viewsOrderByWithRelationInput | viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned views
    **/
    _count?: true | ViewsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ViewsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ViewsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ViewsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ViewsMaxAggregateInputType
  }

  export type GetViewsAggregateType<T extends ViewsAggregateArgs> = {
        [P in keyof T & keyof AggregateViews]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateViews[P]>
      : GetScalarType<T[P], AggregateViews[P]>
  }




  export type viewsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: viewsWhereInput
    orderBy?: viewsOrderByWithAggregationInput | viewsOrderByWithAggregationInput[]
    by: ViewsScalarFieldEnum[] | ViewsScalarFieldEnum
    having?: viewsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ViewsCountAggregateInputType | true
    _avg?: ViewsAvgAggregateInputType
    _sum?: ViewsSumAggregateInputType
    _min?: ViewsMinAggregateInputType
    _max?: ViewsMaxAggregateInputType
  }

  export type ViewsGroupByOutputType = {
    id: bigint
    user_id: string | null
    article_id: string | null
    viewed_at: Date | null
    _count: ViewsCountAggregateOutputType | null
    _avg: ViewsAvgAggregateOutputType | null
    _sum: ViewsSumAggregateOutputType | null
    _min: ViewsMinAggregateOutputType | null
    _max: ViewsMaxAggregateOutputType | null
  }

  type GetViewsGroupByPayload<T extends viewsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ViewsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ViewsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ViewsGroupByOutputType[P]>
            : GetScalarType<T[P], ViewsGroupByOutputType[P]>
        }
      >
    >


  export type viewsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    articles?: boolean | views$articlesArgs<ExtArgs>
    users?: boolean | views$usersArgs<ExtArgs>
  }, ExtArgs["result"]["views"]>

  export type viewsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    articles?: boolean | views$articlesArgs<ExtArgs>
    users?: boolean | views$usersArgs<ExtArgs>
  }, ExtArgs["result"]["views"]>

  export type viewsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
    articles?: boolean | views$articlesArgs<ExtArgs>
    users?: boolean | views$usersArgs<ExtArgs>
  }, ExtArgs["result"]["views"]>

  export type viewsSelectScalar = {
    id?: boolean
    user_id?: boolean
    article_id?: boolean
    viewed_at?: boolean
  }

  export type viewsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "article_id" | "viewed_at", ExtArgs["result"]["views"]>
  export type viewsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | views$articlesArgs<ExtArgs>
    users?: boolean | views$usersArgs<ExtArgs>
  }
  export type viewsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | views$articlesArgs<ExtArgs>
    users?: boolean | views$usersArgs<ExtArgs>
  }
  export type viewsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    articles?: boolean | views$articlesArgs<ExtArgs>
    users?: boolean | views$usersArgs<ExtArgs>
  }

  export type $viewsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "views"
    objects: {
      articles: Prisma.$articlesPayload<ExtArgs> | null
      users: Prisma.$public_usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: bigint
      user_id: string | null
      article_id: string | null
      viewed_at: Date | null
    }, ExtArgs["result"]["views"]>
    composites: {}
  }

  type viewsGetPayload<S extends boolean | null | undefined | viewsDefaultArgs> = $Result.GetResult<Prisma.$viewsPayload, S>

  type viewsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<viewsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: ViewsCountAggregateInputType | true
    }

  export interface viewsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['views'], meta: { name: 'views' } }
    /**
     * Find zero or one Views that matches the filter.
     * @param {viewsFindUniqueArgs} args - Arguments to find a Views
     * @example
     * // Get one Views
     * const views = await prisma.views.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends viewsFindUniqueArgs>(args: SelectSubset<T, viewsFindUniqueArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Views that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {viewsFindUniqueOrThrowArgs} args - Arguments to find a Views
     * @example
     * // Get one Views
     * const views = await prisma.views.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends viewsFindUniqueOrThrowArgs>(args: SelectSubset<T, viewsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Views that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {viewsFindFirstArgs} args - Arguments to find a Views
     * @example
     * // Get one Views
     * const views = await prisma.views.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends viewsFindFirstArgs>(args?: SelectSubset<T, viewsFindFirstArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Views that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {viewsFindFirstOrThrowArgs} args - Arguments to find a Views
     * @example
     * // Get one Views
     * const views = await prisma.views.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends viewsFindFirstOrThrowArgs>(args?: SelectSubset<T, viewsFindFirstOrThrowArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Views that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {viewsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Views
     * const views = await prisma.views.findMany()
     * 
     * // Get first 10 Views
     * const views = await prisma.views.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const viewsWithIdOnly = await prisma.views.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends viewsFindManyArgs>(args?: SelectSubset<T, viewsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Views.
     * @param {viewsCreateArgs} args - Arguments to create a Views.
     * @example
     * // Create one Views
     * const Views = await prisma.views.create({
     *   data: {
     *     // ... data to create a Views
     *   }
     * })
     * 
     */
    create<T extends viewsCreateArgs>(args: SelectSubset<T, viewsCreateArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Views.
     * @param {viewsCreateManyArgs} args - Arguments to create many Views.
     * @example
     * // Create many Views
     * const views = await prisma.views.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends viewsCreateManyArgs>(args?: SelectSubset<T, viewsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Views and returns the data saved in the database.
     * @param {viewsCreateManyAndReturnArgs} args - Arguments to create many Views.
     * @example
     * // Create many Views
     * const views = await prisma.views.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Views and only return the `id`
     * const viewsWithIdOnly = await prisma.views.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends viewsCreateManyAndReturnArgs>(args?: SelectSubset<T, viewsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Views.
     * @param {viewsDeleteArgs} args - Arguments to delete one Views.
     * @example
     * // Delete one Views
     * const Views = await prisma.views.delete({
     *   where: {
     *     // ... filter to delete one Views
     *   }
     * })
     * 
     */
    delete<T extends viewsDeleteArgs>(args: SelectSubset<T, viewsDeleteArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Views.
     * @param {viewsUpdateArgs} args - Arguments to update one Views.
     * @example
     * // Update one Views
     * const views = await prisma.views.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends viewsUpdateArgs>(args: SelectSubset<T, viewsUpdateArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Views.
     * @param {viewsDeleteManyArgs} args - Arguments to filter Views to delete.
     * @example
     * // Delete a few Views
     * const { count } = await prisma.views.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends viewsDeleteManyArgs>(args?: SelectSubset<T, viewsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {viewsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Views
     * const views = await prisma.views.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends viewsUpdateManyArgs>(args: SelectSubset<T, viewsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Views and returns the data updated in the database.
     * @param {viewsUpdateManyAndReturnArgs} args - Arguments to update many Views.
     * @example
     * // Update many Views
     * const views = await prisma.views.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Views and only return the `id`
     * const viewsWithIdOnly = await prisma.views.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends viewsUpdateManyAndReturnArgs>(args: SelectSubset<T, viewsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Views.
     * @param {viewsUpsertArgs} args - Arguments to update or create a Views.
     * @example
     * // Update or create a Views
     * const views = await prisma.views.upsert({
     *   create: {
     *     // ... data to create a Views
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Views we want to update
     *   }
     * })
     */
    upsert<T extends viewsUpsertArgs>(args: SelectSubset<T, viewsUpsertArgs<ExtArgs>>): Prisma__viewsClient<$Result.GetResult<Prisma.$viewsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {viewsCountArgs} args - Arguments to filter Views to count.
     * @example
     * // Count the number of Views
     * const count = await prisma.views.count({
     *   where: {
     *     // ... the filter for the Views we want to count
     *   }
     * })
    **/
    count<T extends viewsCountArgs>(
      args?: Subset<T, viewsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ViewsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ViewsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ViewsAggregateArgs>(args: Subset<T, ViewsAggregateArgs>): Prisma.PrismaPromise<GetViewsAggregateType<T>>

    /**
     * Group by Views.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {viewsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends viewsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: viewsGroupByArgs['orderBy'] }
        : { orderBy?: viewsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, viewsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetViewsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the views model
   */
  readonly fields: viewsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for views.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__viewsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    articles<T extends views$articlesArgs<ExtArgs> = {}>(args?: Subset<T, views$articlesArgs<ExtArgs>>): Prisma__articlesClient<$Result.GetResult<Prisma.$articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    users<T extends views$usersArgs<ExtArgs> = {}>(args?: Subset<T, views$usersArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the views model
   */
  interface viewsFieldRefs {
    readonly id: FieldRef<"views", 'BigInt'>
    readonly user_id: FieldRef<"views", 'String'>
    readonly article_id: FieldRef<"views", 'String'>
    readonly viewed_at: FieldRef<"views", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * views findUnique
   */
  export type viewsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * Filter, which views to fetch.
     */
    where: viewsWhereUniqueInput
  }

  /**
   * views findUniqueOrThrow
   */
  export type viewsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * Filter, which views to fetch.
     */
    where: viewsWhereUniqueInput
  }

  /**
   * views findFirst
   */
  export type viewsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * Filter, which views to fetch.
     */
    where?: viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of views to fetch.
     */
    orderBy?: viewsOrderByWithRelationInput | viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for views.
     */
    cursor?: viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of views.
     */
    distinct?: ViewsScalarFieldEnum | ViewsScalarFieldEnum[]
  }

  /**
   * views findFirstOrThrow
   */
  export type viewsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * Filter, which views to fetch.
     */
    where?: viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of views to fetch.
     */
    orderBy?: viewsOrderByWithRelationInput | viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for views.
     */
    cursor?: viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` views.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of views.
     */
    distinct?: ViewsScalarFieldEnum | ViewsScalarFieldEnum[]
  }

  /**
   * views findMany
   */
  export type viewsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * Filter, which views to fetch.
     */
    where?: viewsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of views to fetch.
     */
    orderBy?: viewsOrderByWithRelationInput | viewsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing views.
     */
    cursor?: viewsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` views from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` views.
     */
    skip?: number
    distinct?: ViewsScalarFieldEnum | ViewsScalarFieldEnum[]
  }

  /**
   * views create
   */
  export type viewsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * The data needed to create a views.
     */
    data?: XOR<viewsCreateInput, viewsUncheckedCreateInput>
  }

  /**
   * views createMany
   */
  export type viewsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many views.
     */
    data: viewsCreateManyInput | viewsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * views createManyAndReturn
   */
  export type viewsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * The data used to create many views.
     */
    data: viewsCreateManyInput | viewsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * views update
   */
  export type viewsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * The data needed to update a views.
     */
    data: XOR<viewsUpdateInput, viewsUncheckedUpdateInput>
    /**
     * Choose, which views to update.
     */
    where: viewsWhereUniqueInput
  }

  /**
   * views updateMany
   */
  export type viewsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update views.
     */
    data: XOR<viewsUpdateManyMutationInput, viewsUncheckedUpdateManyInput>
    /**
     * Filter which views to update
     */
    where?: viewsWhereInput
    /**
     * Limit how many views to update.
     */
    limit?: number
  }

  /**
   * views updateManyAndReturn
   */
  export type viewsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * The data used to update views.
     */
    data: XOR<viewsUpdateManyMutationInput, viewsUncheckedUpdateManyInput>
    /**
     * Filter which views to update
     */
    where?: viewsWhereInput
    /**
     * Limit how many views to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * views upsert
   */
  export type viewsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * The filter to search for the views to update in case it exists.
     */
    where: viewsWhereUniqueInput
    /**
     * In case the views found by the `where` argument doesn't exist, create a new views with this data.
     */
    create: XOR<viewsCreateInput, viewsUncheckedCreateInput>
    /**
     * In case the views was found with the provided `where` argument, update it with this data.
     */
    update: XOR<viewsUpdateInput, viewsUncheckedUpdateInput>
  }

  /**
   * views delete
   */
  export type viewsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
    /**
     * Filter which views to delete.
     */
    where: viewsWhereUniqueInput
  }

  /**
   * views deleteMany
   */
  export type viewsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which views to delete
     */
    where?: viewsWhereInput
    /**
     * Limit how many views to delete.
     */
    limit?: number
  }

  /**
   * views.articles
   */
  export type views$articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the articles
     */
    select?: articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the articles
     */
    omit?: articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: articlesInclude<ExtArgs> | null
    where?: articlesWhereInput
  }

  /**
   * views.users
   */
  export type views$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    where?: public_usersWhereInput
  }

  /**
   * views without action
   */
  export type viewsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the views
     */
    select?: viewsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the views
     */
    omit?: viewsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: viewsInclude<ExtArgs> | null
  }


  /**
   * Model audit_log_entries
   */

  export type AggregateAudit_log_entries = {
    _count: Audit_log_entriesCountAggregateOutputType | null
    _min: Audit_log_entriesMinAggregateOutputType | null
    _max: Audit_log_entriesMaxAggregateOutputType | null
  }

  export type Audit_log_entriesMinAggregateOutputType = {
    instance_id: string | null
    id: string | null
    created_at: Date | null
    ip_address: string | null
  }

  export type Audit_log_entriesMaxAggregateOutputType = {
    instance_id: string | null
    id: string | null
    created_at: Date | null
    ip_address: string | null
  }

  export type Audit_log_entriesCountAggregateOutputType = {
    instance_id: number
    id: number
    payload: number
    created_at: number
    ip_address: number
    _all: number
  }


  export type Audit_log_entriesMinAggregateInputType = {
    instance_id?: true
    id?: true
    created_at?: true
    ip_address?: true
  }

  export type Audit_log_entriesMaxAggregateInputType = {
    instance_id?: true
    id?: true
    created_at?: true
    ip_address?: true
  }

  export type Audit_log_entriesCountAggregateInputType = {
    instance_id?: true
    id?: true
    payload?: true
    created_at?: true
    ip_address?: true
    _all?: true
  }

  export type Audit_log_entriesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_log_entries to aggregate.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned audit_log_entries
    **/
    _count?: true | Audit_log_entriesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Audit_log_entriesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Audit_log_entriesMaxAggregateInputType
  }

  export type GetAudit_log_entriesAggregateType<T extends Audit_log_entriesAggregateArgs> = {
        [P in keyof T & keyof AggregateAudit_log_entries]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAudit_log_entries[P]>
      : GetScalarType<T[P], AggregateAudit_log_entries[P]>
  }




  export type audit_log_entriesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: audit_log_entriesWhereInput
    orderBy?: audit_log_entriesOrderByWithAggregationInput | audit_log_entriesOrderByWithAggregationInput[]
    by: Audit_log_entriesScalarFieldEnum[] | Audit_log_entriesScalarFieldEnum
    having?: audit_log_entriesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Audit_log_entriesCountAggregateInputType | true
    _min?: Audit_log_entriesMinAggregateInputType
    _max?: Audit_log_entriesMaxAggregateInputType
  }

  export type Audit_log_entriesGroupByOutputType = {
    instance_id: string | null
    id: string
    payload: JsonValue | null
    created_at: Date | null
    ip_address: string
    _count: Audit_log_entriesCountAggregateOutputType | null
    _min: Audit_log_entriesMinAggregateOutputType | null
    _max: Audit_log_entriesMaxAggregateOutputType | null
  }

  type GetAudit_log_entriesGroupByPayload<T extends audit_log_entriesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Audit_log_entriesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Audit_log_entriesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Audit_log_entriesGroupByOutputType[P]>
            : GetScalarType<T[P], Audit_log_entriesGroupByOutputType[P]>
        }
      >
    >


  export type audit_log_entriesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }, ExtArgs["result"]["audit_log_entries"]>

  export type audit_log_entriesSelectScalar = {
    instance_id?: boolean
    id?: boolean
    payload?: boolean
    created_at?: boolean
    ip_address?: boolean
  }

  export type audit_log_entriesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"instance_id" | "id" | "payload" | "created_at" | "ip_address", ExtArgs["result"]["audit_log_entries"]>

  export type $audit_log_entriesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "audit_log_entries"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: string
      payload: Prisma.JsonValue | null
      created_at: Date | null
      ip_address: string
    }, ExtArgs["result"]["audit_log_entries"]>
    composites: {}
  }

  type audit_log_entriesGetPayload<S extends boolean | null | undefined | audit_log_entriesDefaultArgs> = $Result.GetResult<Prisma.$audit_log_entriesPayload, S>

  type audit_log_entriesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<audit_log_entriesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Audit_log_entriesCountAggregateInputType | true
    }

  export interface audit_log_entriesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['audit_log_entries'], meta: { name: 'audit_log_entries' } }
    /**
     * Find zero or one Audit_log_entries that matches the filter.
     * @param {audit_log_entriesFindUniqueArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends audit_log_entriesFindUniqueArgs>(args: SelectSubset<T, audit_log_entriesFindUniqueArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Audit_log_entries that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {audit_log_entriesFindUniqueOrThrowArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends audit_log_entriesFindUniqueOrThrowArgs>(args: SelectSubset<T, audit_log_entriesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_log_entries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindFirstArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends audit_log_entriesFindFirstArgs>(args?: SelectSubset<T, audit_log_entriesFindFirstArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Audit_log_entries that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindFirstOrThrowArgs} args - Arguments to find a Audit_log_entries
     * @example
     * // Get one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends audit_log_entriesFindFirstOrThrowArgs>(args?: SelectSubset<T, audit_log_entriesFindFirstOrThrowArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Audit_log_entries that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findMany()
     * 
     * // Get first 10 Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.findMany({ select: { instance_id: true } })
     * 
     */
    findMany<T extends audit_log_entriesFindManyArgs>(args?: SelectSubset<T, audit_log_entriesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Audit_log_entries.
     * @param {audit_log_entriesCreateArgs} args - Arguments to create a Audit_log_entries.
     * @example
     * // Create one Audit_log_entries
     * const Audit_log_entries = await prisma.audit_log_entries.create({
     *   data: {
     *     // ... data to create a Audit_log_entries
     *   }
     * })
     * 
     */
    create<T extends audit_log_entriesCreateArgs>(args: SelectSubset<T, audit_log_entriesCreateArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Audit_log_entries.
     * @param {audit_log_entriesCreateManyArgs} args - Arguments to create many Audit_log_entries.
     * @example
     * // Create many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends audit_log_entriesCreateManyArgs>(args?: SelectSubset<T, audit_log_entriesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Audit_log_entries and returns the data saved in the database.
     * @param {audit_log_entriesCreateManyAndReturnArgs} args - Arguments to create many Audit_log_entries.
     * @example
     * // Create many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Audit_log_entries and only return the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.createManyAndReturn({
     *   select: { instance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends audit_log_entriesCreateManyAndReturnArgs>(args?: SelectSubset<T, audit_log_entriesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Audit_log_entries.
     * @param {audit_log_entriesDeleteArgs} args - Arguments to delete one Audit_log_entries.
     * @example
     * // Delete one Audit_log_entries
     * const Audit_log_entries = await prisma.audit_log_entries.delete({
     *   where: {
     *     // ... filter to delete one Audit_log_entries
     *   }
     * })
     * 
     */
    delete<T extends audit_log_entriesDeleteArgs>(args: SelectSubset<T, audit_log_entriesDeleteArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Audit_log_entries.
     * @param {audit_log_entriesUpdateArgs} args - Arguments to update one Audit_log_entries.
     * @example
     * // Update one Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends audit_log_entriesUpdateArgs>(args: SelectSubset<T, audit_log_entriesUpdateArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Audit_log_entries.
     * @param {audit_log_entriesDeleteManyArgs} args - Arguments to filter Audit_log_entries to delete.
     * @example
     * // Delete a few Audit_log_entries
     * const { count } = await prisma.audit_log_entries.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends audit_log_entriesDeleteManyArgs>(args?: SelectSubset<T, audit_log_entriesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends audit_log_entriesUpdateManyArgs>(args: SelectSubset<T, audit_log_entriesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Audit_log_entries and returns the data updated in the database.
     * @param {audit_log_entriesUpdateManyAndReturnArgs} args - Arguments to update many Audit_log_entries.
     * @example
     * // Update many Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Audit_log_entries and only return the `instance_id`
     * const audit_log_entriesWithInstance_idOnly = await prisma.audit_log_entries.updateManyAndReturn({
     *   select: { instance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends audit_log_entriesUpdateManyAndReturnArgs>(args: SelectSubset<T, audit_log_entriesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Audit_log_entries.
     * @param {audit_log_entriesUpsertArgs} args - Arguments to update or create a Audit_log_entries.
     * @example
     * // Update or create a Audit_log_entries
     * const audit_log_entries = await prisma.audit_log_entries.upsert({
     *   create: {
     *     // ... data to create a Audit_log_entries
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Audit_log_entries we want to update
     *   }
     * })
     */
    upsert<T extends audit_log_entriesUpsertArgs>(args: SelectSubset<T, audit_log_entriesUpsertArgs<ExtArgs>>): Prisma__audit_log_entriesClient<$Result.GetResult<Prisma.$audit_log_entriesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesCountArgs} args - Arguments to filter Audit_log_entries to count.
     * @example
     * // Count the number of Audit_log_entries
     * const count = await prisma.audit_log_entries.count({
     *   where: {
     *     // ... the filter for the Audit_log_entries we want to count
     *   }
     * })
    **/
    count<T extends audit_log_entriesCountArgs>(
      args?: Subset<T, audit_log_entriesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Audit_log_entriesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Audit_log_entriesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Audit_log_entriesAggregateArgs>(args: Subset<T, Audit_log_entriesAggregateArgs>): Prisma.PrismaPromise<GetAudit_log_entriesAggregateType<T>>

    /**
     * Group by Audit_log_entries.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {audit_log_entriesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends audit_log_entriesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: audit_log_entriesGroupByArgs['orderBy'] }
        : { orderBy?: audit_log_entriesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, audit_log_entriesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAudit_log_entriesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the audit_log_entries model
   */
  readonly fields: audit_log_entriesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for audit_log_entries.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__audit_log_entriesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the audit_log_entries model
   */
  interface audit_log_entriesFieldRefs {
    readonly instance_id: FieldRef<"audit_log_entries", 'String'>
    readonly id: FieldRef<"audit_log_entries", 'String'>
    readonly payload: FieldRef<"audit_log_entries", 'Json'>
    readonly created_at: FieldRef<"audit_log_entries", 'DateTime'>
    readonly ip_address: FieldRef<"audit_log_entries", 'String'>
  }
    

  // Custom InputTypes
  /**
   * audit_log_entries findUnique
   */
  export type audit_log_entriesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries findUniqueOrThrow
   */
  export type audit_log_entriesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries findFirst
   */
  export type audit_log_entriesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_log_entries.
     */
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }

  /**
   * audit_log_entries findFirstOrThrow
   */
  export type audit_log_entriesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of audit_log_entries.
     */
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }

  /**
   * audit_log_entries findMany
   */
  export type audit_log_entriesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter, which audit_log_entries to fetch.
     */
    where?: audit_log_entriesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of audit_log_entries to fetch.
     */
    orderBy?: audit_log_entriesOrderByWithRelationInput | audit_log_entriesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing audit_log_entries.
     */
    cursor?: audit_log_entriesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` audit_log_entries from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` audit_log_entries.
     */
    skip?: number
    distinct?: Audit_log_entriesScalarFieldEnum | Audit_log_entriesScalarFieldEnum[]
  }

  /**
   * audit_log_entries create
   */
  export type audit_log_entriesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data needed to create a audit_log_entries.
     */
    data: XOR<audit_log_entriesCreateInput, audit_log_entriesUncheckedCreateInput>
  }

  /**
   * audit_log_entries createMany
   */
  export type audit_log_entriesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many audit_log_entries.
     */
    data: audit_log_entriesCreateManyInput | audit_log_entriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * audit_log_entries createManyAndReturn
   */
  export type audit_log_entriesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data used to create many audit_log_entries.
     */
    data: audit_log_entriesCreateManyInput | audit_log_entriesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * audit_log_entries update
   */
  export type audit_log_entriesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data needed to update a audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateInput, audit_log_entriesUncheckedUpdateInput>
    /**
     * Choose, which audit_log_entries to update.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries updateMany
   */
  export type audit_log_entriesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateManyMutationInput, audit_log_entriesUncheckedUpdateManyInput>
    /**
     * Filter which audit_log_entries to update
     */
    where?: audit_log_entriesWhereInput
    /**
     * Limit how many audit_log_entries to update.
     */
    limit?: number
  }

  /**
   * audit_log_entries updateManyAndReturn
   */
  export type audit_log_entriesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The data used to update audit_log_entries.
     */
    data: XOR<audit_log_entriesUpdateManyMutationInput, audit_log_entriesUncheckedUpdateManyInput>
    /**
     * Filter which audit_log_entries to update
     */
    where?: audit_log_entriesWhereInput
    /**
     * Limit how many audit_log_entries to update.
     */
    limit?: number
  }

  /**
   * audit_log_entries upsert
   */
  export type audit_log_entriesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * The filter to search for the audit_log_entries to update in case it exists.
     */
    where: audit_log_entriesWhereUniqueInput
    /**
     * In case the audit_log_entries found by the `where` argument doesn't exist, create a new audit_log_entries with this data.
     */
    create: XOR<audit_log_entriesCreateInput, audit_log_entriesUncheckedCreateInput>
    /**
     * In case the audit_log_entries was found with the provided `where` argument, update it with this data.
     */
    update: XOR<audit_log_entriesUpdateInput, audit_log_entriesUncheckedUpdateInput>
  }

  /**
   * audit_log_entries delete
   */
  export type audit_log_entriesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
    /**
     * Filter which audit_log_entries to delete.
     */
    where: audit_log_entriesWhereUniqueInput
  }

  /**
   * audit_log_entries deleteMany
   */
  export type audit_log_entriesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which audit_log_entries to delete
     */
    where?: audit_log_entriesWhereInput
    /**
     * Limit how many audit_log_entries to delete.
     */
    limit?: number
  }

  /**
   * audit_log_entries without action
   */
  export type audit_log_entriesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the audit_log_entries
     */
    select?: audit_log_entriesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the audit_log_entries
     */
    omit?: audit_log_entriesOmit<ExtArgs> | null
  }


  /**
   * Model flow_state
   */

  export type AggregateFlow_state = {
    _count: Flow_stateCountAggregateOutputType | null
    _min: Flow_stateMinAggregateOutputType | null
    _max: Flow_stateMaxAggregateOutputType | null
  }

  export type Flow_stateMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    auth_code: string | null
    code_challenge_method: $Enums.code_challenge_method | null
    code_challenge: string | null
    provider_type: string | null
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    auth_code_issued_at: Date | null
  }

  export type Flow_stateMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    auth_code: string | null
    code_challenge_method: $Enums.code_challenge_method | null
    code_challenge: string | null
    provider_type: string | null
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    auth_code_issued_at: Date | null
  }

  export type Flow_stateCountAggregateOutputType = {
    id: number
    user_id: number
    auth_code: number
    code_challenge_method: number
    code_challenge: number
    provider_type: number
    provider_access_token: number
    provider_refresh_token: number
    created_at: number
    updated_at: number
    authentication_method: number
    auth_code_issued_at: number
    _all: number
  }


  export type Flow_stateMinAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    auth_code_issued_at?: true
  }

  export type Flow_stateMaxAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    auth_code_issued_at?: true
  }

  export type Flow_stateCountAggregateInputType = {
    id?: true
    user_id?: true
    auth_code?: true
    code_challenge_method?: true
    code_challenge?: true
    provider_type?: true
    provider_access_token?: true
    provider_refresh_token?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    auth_code_issued_at?: true
    _all?: true
  }

  export type Flow_stateAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which flow_state to aggregate.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned flow_states
    **/
    _count?: true | Flow_stateCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Flow_stateMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Flow_stateMaxAggregateInputType
  }

  export type GetFlow_stateAggregateType<T extends Flow_stateAggregateArgs> = {
        [P in keyof T & keyof AggregateFlow_state]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFlow_state[P]>
      : GetScalarType<T[P], AggregateFlow_state[P]>
  }




  export type flow_stateGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: flow_stateWhereInput
    orderBy?: flow_stateOrderByWithAggregationInput | flow_stateOrderByWithAggregationInput[]
    by: Flow_stateScalarFieldEnum[] | Flow_stateScalarFieldEnum
    having?: flow_stateScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Flow_stateCountAggregateInputType | true
    _min?: Flow_stateMinAggregateInputType
    _max?: Flow_stateMaxAggregateInputType
  }

  export type Flow_stateGroupByOutputType = {
    id: string
    user_id: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token: string | null
    provider_refresh_token: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string
    auth_code_issued_at: Date | null
    _count: Flow_stateCountAggregateOutputType | null
    _min: Flow_stateMinAggregateOutputType | null
    _max: Flow_stateMaxAggregateOutputType | null
  }

  type GetFlow_stateGroupByPayload<T extends flow_stateGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Flow_stateGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Flow_stateGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Flow_stateGroupByOutputType[P]>
            : GetScalarType<T[P], Flow_stateGroupByOutputType[P]>
        }
      >
    >


  export type flow_stateSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
    saml_relay_states?: boolean | flow_state$saml_relay_statesArgs<ExtArgs>
    _count?: boolean | Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
  }, ExtArgs["result"]["flow_state"]>

  export type flow_stateSelectScalar = {
    id?: boolean
    user_id?: boolean
    auth_code?: boolean
    code_challenge_method?: boolean
    code_challenge?: boolean
    provider_type?: boolean
    provider_access_token?: boolean
    provider_refresh_token?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    auth_code_issued_at?: boolean
  }

  export type flow_stateOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "auth_code" | "code_challenge_method" | "code_challenge" | "provider_type" | "provider_access_token" | "provider_refresh_token" | "created_at" | "updated_at" | "authentication_method" | "auth_code_issued_at", ExtArgs["result"]["flow_state"]>
  export type flow_stateInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_relay_states?: boolean | flow_state$saml_relay_statesArgs<ExtArgs>
    _count?: boolean | Flow_stateCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type flow_stateIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type flow_stateIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $flow_statePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "flow_state"
    objects: {
      saml_relay_states: Prisma.$saml_relay_statesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string | null
      auth_code: string
      code_challenge_method: $Enums.code_challenge_method
      code_challenge: string
      provider_type: string
      provider_access_token: string | null
      provider_refresh_token: string | null
      created_at: Date | null
      updated_at: Date | null
      authentication_method: string
      auth_code_issued_at: Date | null
    }, ExtArgs["result"]["flow_state"]>
    composites: {}
  }

  type flow_stateGetPayload<S extends boolean | null | undefined | flow_stateDefaultArgs> = $Result.GetResult<Prisma.$flow_statePayload, S>

  type flow_stateCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<flow_stateFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Flow_stateCountAggregateInputType | true
    }

  export interface flow_stateDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['flow_state'], meta: { name: 'flow_state' } }
    /**
     * Find zero or one Flow_state that matches the filter.
     * @param {flow_stateFindUniqueArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends flow_stateFindUniqueArgs>(args: SelectSubset<T, flow_stateFindUniqueArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Flow_state that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {flow_stateFindUniqueOrThrowArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends flow_stateFindUniqueOrThrowArgs>(args: SelectSubset<T, flow_stateFindUniqueOrThrowArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Flow_state that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindFirstArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends flow_stateFindFirstArgs>(args?: SelectSubset<T, flow_stateFindFirstArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Flow_state that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindFirstOrThrowArgs} args - Arguments to find a Flow_state
     * @example
     * // Get one Flow_state
     * const flow_state = await prisma.flow_state.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends flow_stateFindFirstOrThrowArgs>(args?: SelectSubset<T, flow_stateFindFirstOrThrowArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Flow_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Flow_states
     * const flow_states = await prisma.flow_state.findMany()
     * 
     * // Get first 10 Flow_states
     * const flow_states = await prisma.flow_state.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends flow_stateFindManyArgs>(args?: SelectSubset<T, flow_stateFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Flow_state.
     * @param {flow_stateCreateArgs} args - Arguments to create a Flow_state.
     * @example
     * // Create one Flow_state
     * const Flow_state = await prisma.flow_state.create({
     *   data: {
     *     // ... data to create a Flow_state
     *   }
     * })
     * 
     */
    create<T extends flow_stateCreateArgs>(args: SelectSubset<T, flow_stateCreateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Flow_states.
     * @param {flow_stateCreateManyArgs} args - Arguments to create many Flow_states.
     * @example
     * // Create many Flow_states
     * const flow_state = await prisma.flow_state.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends flow_stateCreateManyArgs>(args?: SelectSubset<T, flow_stateCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Flow_states and returns the data saved in the database.
     * @param {flow_stateCreateManyAndReturnArgs} args - Arguments to create many Flow_states.
     * @example
     * // Create many Flow_states
     * const flow_state = await prisma.flow_state.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Flow_states and only return the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends flow_stateCreateManyAndReturnArgs>(args?: SelectSubset<T, flow_stateCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Flow_state.
     * @param {flow_stateDeleteArgs} args - Arguments to delete one Flow_state.
     * @example
     * // Delete one Flow_state
     * const Flow_state = await prisma.flow_state.delete({
     *   where: {
     *     // ... filter to delete one Flow_state
     *   }
     * })
     * 
     */
    delete<T extends flow_stateDeleteArgs>(args: SelectSubset<T, flow_stateDeleteArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Flow_state.
     * @param {flow_stateUpdateArgs} args - Arguments to update one Flow_state.
     * @example
     * // Update one Flow_state
     * const flow_state = await prisma.flow_state.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends flow_stateUpdateArgs>(args: SelectSubset<T, flow_stateUpdateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Flow_states.
     * @param {flow_stateDeleteManyArgs} args - Arguments to filter Flow_states to delete.
     * @example
     * // Delete a few Flow_states
     * const { count } = await prisma.flow_state.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends flow_stateDeleteManyArgs>(args?: SelectSubset<T, flow_stateDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flow_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Flow_states
     * const flow_state = await prisma.flow_state.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends flow_stateUpdateManyArgs>(args: SelectSubset<T, flow_stateUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Flow_states and returns the data updated in the database.
     * @param {flow_stateUpdateManyAndReturnArgs} args - Arguments to update many Flow_states.
     * @example
     * // Update many Flow_states
     * const flow_state = await prisma.flow_state.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Flow_states and only return the `id`
     * const flow_stateWithIdOnly = await prisma.flow_state.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends flow_stateUpdateManyAndReturnArgs>(args: SelectSubset<T, flow_stateUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Flow_state.
     * @param {flow_stateUpsertArgs} args - Arguments to update or create a Flow_state.
     * @example
     * // Update or create a Flow_state
     * const flow_state = await prisma.flow_state.upsert({
     *   create: {
     *     // ... data to create a Flow_state
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Flow_state we want to update
     *   }
     * })
     */
    upsert<T extends flow_stateUpsertArgs>(args: SelectSubset<T, flow_stateUpsertArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Flow_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateCountArgs} args - Arguments to filter Flow_states to count.
     * @example
     * // Count the number of Flow_states
     * const count = await prisma.flow_state.count({
     *   where: {
     *     // ... the filter for the Flow_states we want to count
     *   }
     * })
    **/
    count<T extends flow_stateCountArgs>(
      args?: Subset<T, flow_stateCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Flow_stateCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Flow_state.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Flow_stateAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Flow_stateAggregateArgs>(args: Subset<T, Flow_stateAggregateArgs>): Prisma.PrismaPromise<GetFlow_stateAggregateType<T>>

    /**
     * Group by Flow_state.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {flow_stateGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends flow_stateGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: flow_stateGroupByArgs['orderBy'] }
        : { orderBy?: flow_stateGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, flow_stateGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFlow_stateGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the flow_state model
   */
  readonly fields: flow_stateFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for flow_state.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__flow_stateClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    saml_relay_states<T extends flow_state$saml_relay_statesArgs<ExtArgs> = {}>(args?: Subset<T, flow_state$saml_relay_statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the flow_state model
   */
  interface flow_stateFieldRefs {
    readonly id: FieldRef<"flow_state", 'String'>
    readonly user_id: FieldRef<"flow_state", 'String'>
    readonly auth_code: FieldRef<"flow_state", 'String'>
    readonly code_challenge_method: FieldRef<"flow_state", 'code_challenge_method'>
    readonly code_challenge: FieldRef<"flow_state", 'String'>
    readonly provider_type: FieldRef<"flow_state", 'String'>
    readonly provider_access_token: FieldRef<"flow_state", 'String'>
    readonly provider_refresh_token: FieldRef<"flow_state", 'String'>
    readonly created_at: FieldRef<"flow_state", 'DateTime'>
    readonly updated_at: FieldRef<"flow_state", 'DateTime'>
    readonly authentication_method: FieldRef<"flow_state", 'String'>
    readonly auth_code_issued_at: FieldRef<"flow_state", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * flow_state findUnique
   */
  export type flow_stateFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state findUniqueOrThrow
   */
  export type flow_stateFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state findFirst
   */
  export type flow_stateFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of flow_states.
     */
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }

  /**
   * flow_state findFirstOrThrow
   */
  export type flow_stateFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_state to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of flow_states.
     */
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }

  /**
   * flow_state findMany
   */
  export type flow_stateFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter, which flow_states to fetch.
     */
    where?: flow_stateWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of flow_states to fetch.
     */
    orderBy?: flow_stateOrderByWithRelationInput | flow_stateOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing flow_states.
     */
    cursor?: flow_stateWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` flow_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` flow_states.
     */
    skip?: number
    distinct?: Flow_stateScalarFieldEnum | Flow_stateScalarFieldEnum[]
  }

  /**
   * flow_state create
   */
  export type flow_stateCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The data needed to create a flow_state.
     */
    data: XOR<flow_stateCreateInput, flow_stateUncheckedCreateInput>
  }

  /**
   * flow_state createMany
   */
  export type flow_stateCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many flow_states.
     */
    data: flow_stateCreateManyInput | flow_stateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * flow_state createManyAndReturn
   */
  export type flow_stateCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * The data used to create many flow_states.
     */
    data: flow_stateCreateManyInput | flow_stateCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * flow_state update
   */
  export type flow_stateUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The data needed to update a flow_state.
     */
    data: XOR<flow_stateUpdateInput, flow_stateUncheckedUpdateInput>
    /**
     * Choose, which flow_state to update.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state updateMany
   */
  export type flow_stateUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update flow_states.
     */
    data: XOR<flow_stateUpdateManyMutationInput, flow_stateUncheckedUpdateManyInput>
    /**
     * Filter which flow_states to update
     */
    where?: flow_stateWhereInput
    /**
     * Limit how many flow_states to update.
     */
    limit?: number
  }

  /**
   * flow_state updateManyAndReturn
   */
  export type flow_stateUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * The data used to update flow_states.
     */
    data: XOR<flow_stateUpdateManyMutationInput, flow_stateUncheckedUpdateManyInput>
    /**
     * Filter which flow_states to update
     */
    where?: flow_stateWhereInput
    /**
     * Limit how many flow_states to update.
     */
    limit?: number
  }

  /**
   * flow_state upsert
   */
  export type flow_stateUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * The filter to search for the flow_state to update in case it exists.
     */
    where: flow_stateWhereUniqueInput
    /**
     * In case the flow_state found by the `where` argument doesn't exist, create a new flow_state with this data.
     */
    create: XOR<flow_stateCreateInput, flow_stateUncheckedCreateInput>
    /**
     * In case the flow_state was found with the provided `where` argument, update it with this data.
     */
    update: XOR<flow_stateUpdateInput, flow_stateUncheckedUpdateInput>
  }

  /**
   * flow_state delete
   */
  export type flow_stateDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    /**
     * Filter which flow_state to delete.
     */
    where: flow_stateWhereUniqueInput
  }

  /**
   * flow_state deleteMany
   */
  export type flow_stateDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which flow_states to delete
     */
    where?: flow_stateWhereInput
    /**
     * Limit how many flow_states to delete.
     */
    limit?: number
  }

  /**
   * flow_state.saml_relay_states
   */
  export type flow_state$saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    cursor?: saml_relay_statesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * flow_state without action
   */
  export type flow_stateDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
  }


  /**
   * Model identities
   */

  export type AggregateIdentities = {
    _count: IdentitiesCountAggregateOutputType | null
    _min: IdentitiesMinAggregateOutputType | null
    _max: IdentitiesMaxAggregateOutputType | null
  }

  export type IdentitiesMinAggregateOutputType = {
    provider_id: string | null
    user_id: string | null
    provider: string | null
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string | null
  }

  export type IdentitiesMaxAggregateOutputType = {
    provider_id: string | null
    user_id: string | null
    provider: string | null
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string | null
  }

  export type IdentitiesCountAggregateOutputType = {
    provider_id: number
    user_id: number
    identity_data: number
    provider: number
    last_sign_in_at: number
    created_at: number
    updated_at: number
    email: number
    id: number
    _all: number
  }


  export type IdentitiesMinAggregateInputType = {
    provider_id?: true
    user_id?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
  }

  export type IdentitiesMaxAggregateInputType = {
    provider_id?: true
    user_id?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
  }

  export type IdentitiesCountAggregateInputType = {
    provider_id?: true
    user_id?: true
    identity_data?: true
    provider?: true
    last_sign_in_at?: true
    created_at?: true
    updated_at?: true
    email?: true
    id?: true
    _all?: true
  }

  export type IdentitiesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which identities to aggregate.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned identities
    **/
    _count?: true | IdentitiesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: IdentitiesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: IdentitiesMaxAggregateInputType
  }

  export type GetIdentitiesAggregateType<T extends IdentitiesAggregateArgs> = {
        [P in keyof T & keyof AggregateIdentities]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateIdentities[P]>
      : GetScalarType<T[P], AggregateIdentities[P]>
  }




  export type identitiesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: identitiesWhereInput
    orderBy?: identitiesOrderByWithAggregationInput | identitiesOrderByWithAggregationInput[]
    by: IdentitiesScalarFieldEnum[] | IdentitiesScalarFieldEnum
    having?: identitiesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: IdentitiesCountAggregateInputType | true
    _min?: IdentitiesMinAggregateInputType
    _max?: IdentitiesMaxAggregateInputType
  }

  export type IdentitiesGroupByOutputType = {
    provider_id: string
    user_id: string
    identity_data: JsonValue
    provider: string
    last_sign_in_at: Date | null
    created_at: Date | null
    updated_at: Date | null
    email: string | null
    id: string
    _count: IdentitiesCountAggregateOutputType | null
    _min: IdentitiesMinAggregateOutputType | null
    _max: IdentitiesMaxAggregateOutputType | null
  }

  type GetIdentitiesGroupByPayload<T extends identitiesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<IdentitiesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof IdentitiesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], IdentitiesGroupByOutputType[P]>
            : GetScalarType<T[P], IdentitiesGroupByOutputType[P]>
        }
      >
    >


  export type identitiesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["identities"]>

  export type identitiesSelectScalar = {
    provider_id?: boolean
    user_id?: boolean
    identity_data?: boolean
    provider?: boolean
    last_sign_in_at?: boolean
    created_at?: boolean
    updated_at?: boolean
    email?: boolean
    id?: boolean
  }

  export type identitiesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"provider_id" | "user_id" | "identity_data" | "provider" | "last_sign_in_at" | "created_at" | "updated_at" | "email" | "id", ExtArgs["result"]["identities"]>
  export type identitiesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type identitiesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type identitiesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $identitiesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "identities"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      provider_id: string
      user_id: string
      identity_data: Prisma.JsonValue
      provider: string
      last_sign_in_at: Date | null
      created_at: Date | null
      updated_at: Date | null
      email: string | null
      id: string
    }, ExtArgs["result"]["identities"]>
    composites: {}
  }

  type identitiesGetPayload<S extends boolean | null | undefined | identitiesDefaultArgs> = $Result.GetResult<Prisma.$identitiesPayload, S>

  type identitiesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<identitiesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: IdentitiesCountAggregateInputType | true
    }

  export interface identitiesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['identities'], meta: { name: 'identities' } }
    /**
     * Find zero or one Identities that matches the filter.
     * @param {identitiesFindUniqueArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends identitiesFindUniqueArgs>(args: SelectSubset<T, identitiesFindUniqueArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Identities that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {identitiesFindUniqueOrThrowArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends identitiesFindUniqueOrThrowArgs>(args: SelectSubset<T, identitiesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Identities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindFirstArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends identitiesFindFirstArgs>(args?: SelectSubset<T, identitiesFindFirstArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Identities that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindFirstOrThrowArgs} args - Arguments to find a Identities
     * @example
     * // Get one Identities
     * const identities = await prisma.identities.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends identitiesFindFirstOrThrowArgs>(args?: SelectSubset<T, identitiesFindFirstOrThrowArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Identities that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Identities
     * const identities = await prisma.identities.findMany()
     * 
     * // Get first 10 Identities
     * const identities = await prisma.identities.findMany({ take: 10 })
     * 
     * // Only select the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.findMany({ select: { provider_id: true } })
     * 
     */
    findMany<T extends identitiesFindManyArgs>(args?: SelectSubset<T, identitiesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Identities.
     * @param {identitiesCreateArgs} args - Arguments to create a Identities.
     * @example
     * // Create one Identities
     * const Identities = await prisma.identities.create({
     *   data: {
     *     // ... data to create a Identities
     *   }
     * })
     * 
     */
    create<T extends identitiesCreateArgs>(args: SelectSubset<T, identitiesCreateArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Identities.
     * @param {identitiesCreateManyArgs} args - Arguments to create many Identities.
     * @example
     * // Create many Identities
     * const identities = await prisma.identities.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends identitiesCreateManyArgs>(args?: SelectSubset<T, identitiesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Identities and returns the data saved in the database.
     * @param {identitiesCreateManyAndReturnArgs} args - Arguments to create many Identities.
     * @example
     * // Create many Identities
     * const identities = await prisma.identities.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Identities and only return the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.createManyAndReturn({
     *   select: { provider_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends identitiesCreateManyAndReturnArgs>(args?: SelectSubset<T, identitiesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Identities.
     * @param {identitiesDeleteArgs} args - Arguments to delete one Identities.
     * @example
     * // Delete one Identities
     * const Identities = await prisma.identities.delete({
     *   where: {
     *     // ... filter to delete one Identities
     *   }
     * })
     * 
     */
    delete<T extends identitiesDeleteArgs>(args: SelectSubset<T, identitiesDeleteArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Identities.
     * @param {identitiesUpdateArgs} args - Arguments to update one Identities.
     * @example
     * // Update one Identities
     * const identities = await prisma.identities.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends identitiesUpdateArgs>(args: SelectSubset<T, identitiesUpdateArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Identities.
     * @param {identitiesDeleteManyArgs} args - Arguments to filter Identities to delete.
     * @example
     * // Delete a few Identities
     * const { count } = await prisma.identities.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends identitiesDeleteManyArgs>(args?: SelectSubset<T, identitiesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Identities
     * const identities = await prisma.identities.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends identitiesUpdateManyArgs>(args: SelectSubset<T, identitiesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Identities and returns the data updated in the database.
     * @param {identitiesUpdateManyAndReturnArgs} args - Arguments to update many Identities.
     * @example
     * // Update many Identities
     * const identities = await prisma.identities.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Identities and only return the `provider_id`
     * const identitiesWithProvider_idOnly = await prisma.identities.updateManyAndReturn({
     *   select: { provider_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends identitiesUpdateManyAndReturnArgs>(args: SelectSubset<T, identitiesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Identities.
     * @param {identitiesUpsertArgs} args - Arguments to update or create a Identities.
     * @example
     * // Update or create a Identities
     * const identities = await prisma.identities.upsert({
     *   create: {
     *     // ... data to create a Identities
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Identities we want to update
     *   }
     * })
     */
    upsert<T extends identitiesUpsertArgs>(args: SelectSubset<T, identitiesUpsertArgs<ExtArgs>>): Prisma__identitiesClient<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesCountArgs} args - Arguments to filter Identities to count.
     * @example
     * // Count the number of Identities
     * const count = await prisma.identities.count({
     *   where: {
     *     // ... the filter for the Identities we want to count
     *   }
     * })
    **/
    count<T extends identitiesCountArgs>(
      args?: Subset<T, identitiesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], IdentitiesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {IdentitiesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends IdentitiesAggregateArgs>(args: Subset<T, IdentitiesAggregateArgs>): Prisma.PrismaPromise<GetIdentitiesAggregateType<T>>

    /**
     * Group by Identities.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {identitiesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends identitiesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: identitiesGroupByArgs['orderBy'] }
        : { orderBy?: identitiesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, identitiesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetIdentitiesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the identities model
   */
  readonly fields: identitiesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for identities.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__identitiesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the identities model
   */
  interface identitiesFieldRefs {
    readonly provider_id: FieldRef<"identities", 'String'>
    readonly user_id: FieldRef<"identities", 'String'>
    readonly identity_data: FieldRef<"identities", 'Json'>
    readonly provider: FieldRef<"identities", 'String'>
    readonly last_sign_in_at: FieldRef<"identities", 'DateTime'>
    readonly created_at: FieldRef<"identities", 'DateTime'>
    readonly updated_at: FieldRef<"identities", 'DateTime'>
    readonly email: FieldRef<"identities", 'String'>
    readonly id: FieldRef<"identities", 'String'>
  }
    

  // Custom InputTypes
  /**
   * identities findUnique
   */
  export type identitiesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities findUniqueOrThrow
   */
  export type identitiesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities findFirst
   */
  export type identitiesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of identities.
     */
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * identities findFirstOrThrow
   */
  export type identitiesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of identities.
     */
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * identities findMany
   */
  export type identitiesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter, which identities to fetch.
     */
    where?: identitiesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of identities to fetch.
     */
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing identities.
     */
    cursor?: identitiesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` identities from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` identities.
     */
    skip?: number
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * identities create
   */
  export type identitiesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The data needed to create a identities.
     */
    data: XOR<identitiesCreateInput, identitiesUncheckedCreateInput>
  }

  /**
   * identities createMany
   */
  export type identitiesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many identities.
     */
    data: identitiesCreateManyInput | identitiesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * identities createManyAndReturn
   */
  export type identitiesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * The data used to create many identities.
     */
    data: identitiesCreateManyInput | identitiesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * identities update
   */
  export type identitiesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The data needed to update a identities.
     */
    data: XOR<identitiesUpdateInput, identitiesUncheckedUpdateInput>
    /**
     * Choose, which identities to update.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities updateMany
   */
  export type identitiesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update identities.
     */
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyInput>
    /**
     * Filter which identities to update
     */
    where?: identitiesWhereInput
    /**
     * Limit how many identities to update.
     */
    limit?: number
  }

  /**
   * identities updateManyAndReturn
   */
  export type identitiesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * The data used to update identities.
     */
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyInput>
    /**
     * Filter which identities to update
     */
    where?: identitiesWhereInput
    /**
     * Limit how many identities to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * identities upsert
   */
  export type identitiesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * The filter to search for the identities to update in case it exists.
     */
    where: identitiesWhereUniqueInput
    /**
     * In case the identities found by the `where` argument doesn't exist, create a new identities with this data.
     */
    create: XOR<identitiesCreateInput, identitiesUncheckedCreateInput>
    /**
     * In case the identities was found with the provided `where` argument, update it with this data.
     */
    update: XOR<identitiesUpdateInput, identitiesUncheckedUpdateInput>
  }

  /**
   * identities delete
   */
  export type identitiesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    /**
     * Filter which identities to delete.
     */
    where: identitiesWhereUniqueInput
  }

  /**
   * identities deleteMany
   */
  export type identitiesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which identities to delete
     */
    where?: identitiesWhereInput
    /**
     * Limit how many identities to delete.
     */
    limit?: number
  }

  /**
   * identities without action
   */
  export type identitiesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
  }


  /**
   * Model instances
   */

  export type AggregateInstances = {
    _count: InstancesCountAggregateOutputType | null
    _min: InstancesMinAggregateOutputType | null
    _max: InstancesMaxAggregateOutputType | null
  }

  export type InstancesMinAggregateOutputType = {
    id: string | null
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InstancesMaxAggregateOutputType = {
    id: string | null
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type InstancesCountAggregateOutputType = {
    id: number
    uuid: number
    raw_base_config: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type InstancesMinAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
  }

  export type InstancesMaxAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
  }

  export type InstancesCountAggregateInputType = {
    id?: true
    uuid?: true
    raw_base_config?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type InstancesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instances to aggregate.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned instances
    **/
    _count?: true | InstancesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: InstancesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: InstancesMaxAggregateInputType
  }

  export type GetInstancesAggregateType<T extends InstancesAggregateArgs> = {
        [P in keyof T & keyof AggregateInstances]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateInstances[P]>
      : GetScalarType<T[P], AggregateInstances[P]>
  }




  export type instancesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: instancesWhereInput
    orderBy?: instancesOrderByWithAggregationInput | instancesOrderByWithAggregationInput[]
    by: InstancesScalarFieldEnum[] | InstancesScalarFieldEnum
    having?: instancesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: InstancesCountAggregateInputType | true
    _min?: InstancesMinAggregateInputType
    _max?: InstancesMaxAggregateInputType
  }

  export type InstancesGroupByOutputType = {
    id: string
    uuid: string | null
    raw_base_config: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: InstancesCountAggregateOutputType | null
    _min: InstancesMinAggregateOutputType | null
    _max: InstancesMaxAggregateOutputType | null
  }

  type GetInstancesGroupByPayload<T extends instancesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<InstancesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof InstancesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], InstancesGroupByOutputType[P]>
            : GetScalarType<T[P], InstancesGroupByOutputType[P]>
        }
      >
    >


  export type instancesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["instances"]>

  export type instancesSelectScalar = {
    id?: boolean
    uuid?: boolean
    raw_base_config?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type instancesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "uuid" | "raw_base_config" | "created_at" | "updated_at", ExtArgs["result"]["instances"]>

  export type $instancesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "instances"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      uuid: string | null
      raw_base_config: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["instances"]>
    composites: {}
  }

  type instancesGetPayload<S extends boolean | null | undefined | instancesDefaultArgs> = $Result.GetResult<Prisma.$instancesPayload, S>

  type instancesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<instancesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: InstancesCountAggregateInputType | true
    }

  export interface instancesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['instances'], meta: { name: 'instances' } }
    /**
     * Find zero or one Instances that matches the filter.
     * @param {instancesFindUniqueArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends instancesFindUniqueArgs>(args: SelectSubset<T, instancesFindUniqueArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Instances that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {instancesFindUniqueOrThrowArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends instancesFindUniqueOrThrowArgs>(args: SelectSubset<T, instancesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindFirstArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends instancesFindFirstArgs>(args?: SelectSubset<T, instancesFindFirstArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Instances that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindFirstOrThrowArgs} args - Arguments to find a Instances
     * @example
     * // Get one Instances
     * const instances = await prisma.instances.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends instancesFindFirstOrThrowArgs>(args?: SelectSubset<T, instancesFindFirstOrThrowArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Instances that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Instances
     * const instances = await prisma.instances.findMany()
     * 
     * // Get first 10 Instances
     * const instances = await prisma.instances.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const instancesWithIdOnly = await prisma.instances.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends instancesFindManyArgs>(args?: SelectSubset<T, instancesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Instances.
     * @param {instancesCreateArgs} args - Arguments to create a Instances.
     * @example
     * // Create one Instances
     * const Instances = await prisma.instances.create({
     *   data: {
     *     // ... data to create a Instances
     *   }
     * })
     * 
     */
    create<T extends instancesCreateArgs>(args: SelectSubset<T, instancesCreateArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Instances.
     * @param {instancesCreateManyArgs} args - Arguments to create many Instances.
     * @example
     * // Create many Instances
     * const instances = await prisma.instances.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends instancesCreateManyArgs>(args?: SelectSubset<T, instancesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Instances and returns the data saved in the database.
     * @param {instancesCreateManyAndReturnArgs} args - Arguments to create many Instances.
     * @example
     * // Create many Instances
     * const instances = await prisma.instances.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Instances and only return the `id`
     * const instancesWithIdOnly = await prisma.instances.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends instancesCreateManyAndReturnArgs>(args?: SelectSubset<T, instancesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Instances.
     * @param {instancesDeleteArgs} args - Arguments to delete one Instances.
     * @example
     * // Delete one Instances
     * const Instances = await prisma.instances.delete({
     *   where: {
     *     // ... filter to delete one Instances
     *   }
     * })
     * 
     */
    delete<T extends instancesDeleteArgs>(args: SelectSubset<T, instancesDeleteArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Instances.
     * @param {instancesUpdateArgs} args - Arguments to update one Instances.
     * @example
     * // Update one Instances
     * const instances = await prisma.instances.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends instancesUpdateArgs>(args: SelectSubset<T, instancesUpdateArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Instances.
     * @param {instancesDeleteManyArgs} args - Arguments to filter Instances to delete.
     * @example
     * // Delete a few Instances
     * const { count } = await prisma.instances.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends instancesDeleteManyArgs>(args?: SelectSubset<T, instancesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Instances
     * const instances = await prisma.instances.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends instancesUpdateManyArgs>(args: SelectSubset<T, instancesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Instances and returns the data updated in the database.
     * @param {instancesUpdateManyAndReturnArgs} args - Arguments to update many Instances.
     * @example
     * // Update many Instances
     * const instances = await prisma.instances.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Instances and only return the `id`
     * const instancesWithIdOnly = await prisma.instances.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends instancesUpdateManyAndReturnArgs>(args: SelectSubset<T, instancesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Instances.
     * @param {instancesUpsertArgs} args - Arguments to update or create a Instances.
     * @example
     * // Update or create a Instances
     * const instances = await prisma.instances.upsert({
     *   create: {
     *     // ... data to create a Instances
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Instances we want to update
     *   }
     * })
     */
    upsert<T extends instancesUpsertArgs>(args: SelectSubset<T, instancesUpsertArgs<ExtArgs>>): Prisma__instancesClient<$Result.GetResult<Prisma.$instancesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesCountArgs} args - Arguments to filter Instances to count.
     * @example
     * // Count the number of Instances
     * const count = await prisma.instances.count({
     *   where: {
     *     // ... the filter for the Instances we want to count
     *   }
     * })
    **/
    count<T extends instancesCountArgs>(
      args?: Subset<T, instancesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], InstancesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {InstancesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends InstancesAggregateArgs>(args: Subset<T, InstancesAggregateArgs>): Prisma.PrismaPromise<GetInstancesAggregateType<T>>

    /**
     * Group by Instances.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {instancesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends instancesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: instancesGroupByArgs['orderBy'] }
        : { orderBy?: instancesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, instancesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetInstancesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the instances model
   */
  readonly fields: instancesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for instances.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__instancesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the instances model
   */
  interface instancesFieldRefs {
    readonly id: FieldRef<"instances", 'String'>
    readonly uuid: FieldRef<"instances", 'String'>
    readonly raw_base_config: FieldRef<"instances", 'String'>
    readonly created_at: FieldRef<"instances", 'DateTime'>
    readonly updated_at: FieldRef<"instances", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * instances findUnique
   */
  export type instancesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances findUniqueOrThrow
   */
  export type instancesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances findFirst
   */
  export type instancesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instances.
     */
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }

  /**
   * instances findFirstOrThrow
   */
  export type instancesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of instances.
     */
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }

  /**
   * instances findMany
   */
  export type instancesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter, which instances to fetch.
     */
    where?: instancesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of instances to fetch.
     */
    orderBy?: instancesOrderByWithRelationInput | instancesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing instances.
     */
    cursor?: instancesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` instances from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` instances.
     */
    skip?: number
    distinct?: InstancesScalarFieldEnum | InstancesScalarFieldEnum[]
  }

  /**
   * instances create
   */
  export type instancesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data needed to create a instances.
     */
    data: XOR<instancesCreateInput, instancesUncheckedCreateInput>
  }

  /**
   * instances createMany
   */
  export type instancesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many instances.
     */
    data: instancesCreateManyInput | instancesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * instances createManyAndReturn
   */
  export type instancesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data used to create many instances.
     */
    data: instancesCreateManyInput | instancesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * instances update
   */
  export type instancesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data needed to update a instances.
     */
    data: XOR<instancesUpdateInput, instancesUncheckedUpdateInput>
    /**
     * Choose, which instances to update.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances updateMany
   */
  export type instancesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update instances.
     */
    data: XOR<instancesUpdateManyMutationInput, instancesUncheckedUpdateManyInput>
    /**
     * Filter which instances to update
     */
    where?: instancesWhereInput
    /**
     * Limit how many instances to update.
     */
    limit?: number
  }

  /**
   * instances updateManyAndReturn
   */
  export type instancesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The data used to update instances.
     */
    data: XOR<instancesUpdateManyMutationInput, instancesUncheckedUpdateManyInput>
    /**
     * Filter which instances to update
     */
    where?: instancesWhereInput
    /**
     * Limit how many instances to update.
     */
    limit?: number
  }

  /**
   * instances upsert
   */
  export type instancesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * The filter to search for the instances to update in case it exists.
     */
    where: instancesWhereUniqueInput
    /**
     * In case the instances found by the `where` argument doesn't exist, create a new instances with this data.
     */
    create: XOR<instancesCreateInput, instancesUncheckedCreateInput>
    /**
     * In case the instances was found with the provided `where` argument, update it with this data.
     */
    update: XOR<instancesUpdateInput, instancesUncheckedUpdateInput>
  }

  /**
   * instances delete
   */
  export type instancesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
    /**
     * Filter which instances to delete.
     */
    where: instancesWhereUniqueInput
  }

  /**
   * instances deleteMany
   */
  export type instancesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which instances to delete
     */
    where?: instancesWhereInput
    /**
     * Limit how many instances to delete.
     */
    limit?: number
  }

  /**
   * instances without action
   */
  export type instancesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the instances
     */
    select?: instancesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the instances
     */
    omit?: instancesOmit<ExtArgs> | null
  }


  /**
   * Model mfa_amr_claims
   */

  export type AggregateMfa_amr_claims = {
    _count: Mfa_amr_claimsCountAggregateOutputType | null
    _min: Mfa_amr_claimsMinAggregateOutputType | null
    _max: Mfa_amr_claimsMaxAggregateOutputType | null
  }

  export type Mfa_amr_claimsMinAggregateOutputType = {
    session_id: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    id: string | null
  }

  export type Mfa_amr_claimsMaxAggregateOutputType = {
    session_id: string | null
    created_at: Date | null
    updated_at: Date | null
    authentication_method: string | null
    id: string | null
  }

  export type Mfa_amr_claimsCountAggregateOutputType = {
    session_id: number
    created_at: number
    updated_at: number
    authentication_method: number
    id: number
    _all: number
  }


  export type Mfa_amr_claimsMinAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
  }

  export type Mfa_amr_claimsMaxAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
  }

  export type Mfa_amr_claimsCountAggregateInputType = {
    session_id?: true
    created_at?: true
    updated_at?: true
    authentication_method?: true
    id?: true
    _all?: true
  }

  export type Mfa_amr_claimsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_amr_claims to aggregate.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_amr_claims
    **/
    _count?: true | Mfa_amr_claimsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_amr_claimsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_amr_claimsMaxAggregateInputType
  }

  export type GetMfa_amr_claimsAggregateType<T extends Mfa_amr_claimsAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_amr_claims]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_amr_claims[P]>
      : GetScalarType<T[P], AggregateMfa_amr_claims[P]>
  }




  export type mfa_amr_claimsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_amr_claimsWhereInput
    orderBy?: mfa_amr_claimsOrderByWithAggregationInput | mfa_amr_claimsOrderByWithAggregationInput[]
    by: Mfa_amr_claimsScalarFieldEnum[] | Mfa_amr_claimsScalarFieldEnum
    having?: mfa_amr_claimsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_amr_claimsCountAggregateInputType | true
    _min?: Mfa_amr_claimsMinAggregateInputType
    _max?: Mfa_amr_claimsMaxAggregateInputType
  }

  export type Mfa_amr_claimsGroupByOutputType = {
    session_id: string
    created_at: Date
    updated_at: Date
    authentication_method: string
    id: string
    _count: Mfa_amr_claimsCountAggregateOutputType | null
    _min: Mfa_amr_claimsMinAggregateOutputType | null
    _max: Mfa_amr_claimsMaxAggregateOutputType | null
  }

  type GetMfa_amr_claimsGroupByPayload<T extends mfa_amr_claimsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_amr_claimsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_amr_claimsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_amr_claimsGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_amr_claimsGroupByOutputType[P]>
        }
      >
    >


  export type mfa_amr_claimsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_amr_claims"]>

  export type mfa_amr_claimsSelectScalar = {
    session_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    authentication_method?: boolean
    id?: boolean
  }

  export type mfa_amr_claimsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"session_id" | "created_at" | "updated_at" | "authentication_method" | "id", ExtArgs["result"]["mfa_amr_claims"]>
  export type mfa_amr_claimsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }
  export type mfa_amr_claimsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }
  export type mfa_amr_claimsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | sessionsDefaultArgs<ExtArgs>
  }

  export type $mfa_amr_claimsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_amr_claims"
    objects: {
      sessions: Prisma.$sessionsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      session_id: string
      created_at: Date
      updated_at: Date
      authentication_method: string
      id: string
    }, ExtArgs["result"]["mfa_amr_claims"]>
    composites: {}
  }

  type mfa_amr_claimsGetPayload<S extends boolean | null | undefined | mfa_amr_claimsDefaultArgs> = $Result.GetResult<Prisma.$mfa_amr_claimsPayload, S>

  type mfa_amr_claimsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mfa_amr_claimsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mfa_amr_claimsCountAggregateInputType | true
    }

  export interface mfa_amr_claimsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_amr_claims'], meta: { name: 'mfa_amr_claims' } }
    /**
     * Find zero or one Mfa_amr_claims that matches the filter.
     * @param {mfa_amr_claimsFindUniqueArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mfa_amr_claimsFindUniqueArgs>(args: SelectSubset<T, mfa_amr_claimsFindUniqueArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mfa_amr_claims that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mfa_amr_claimsFindUniqueOrThrowArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mfa_amr_claimsFindUniqueOrThrowArgs>(args: SelectSubset<T, mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_amr_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindFirstArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mfa_amr_claimsFindFirstArgs>(args?: SelectSubset<T, mfa_amr_claimsFindFirstArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_amr_claims that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindFirstOrThrowArgs} args - Arguments to find a Mfa_amr_claims
     * @example
     * // Get one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mfa_amr_claimsFindFirstOrThrowArgs>(args?: SelectSubset<T, mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mfa_amr_claims that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany()
     * 
     * // Get first 10 Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.findMany({ take: 10 })
     * 
     * // Only select the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.findMany({ select: { session_id: true } })
     * 
     */
    findMany<T extends mfa_amr_claimsFindManyArgs>(args?: SelectSubset<T, mfa_amr_claimsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mfa_amr_claims.
     * @param {mfa_amr_claimsCreateArgs} args - Arguments to create a Mfa_amr_claims.
     * @example
     * // Create one Mfa_amr_claims
     * const Mfa_amr_claims = await prisma.mfa_amr_claims.create({
     *   data: {
     *     // ... data to create a Mfa_amr_claims
     *   }
     * })
     * 
     */
    create<T extends mfa_amr_claimsCreateArgs>(args: SelectSubset<T, mfa_amr_claimsCreateArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mfa_amr_claims.
     * @param {mfa_amr_claimsCreateManyArgs} args - Arguments to create many Mfa_amr_claims.
     * @example
     * // Create many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mfa_amr_claimsCreateManyArgs>(args?: SelectSubset<T, mfa_amr_claimsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mfa_amr_claims and returns the data saved in the database.
     * @param {mfa_amr_claimsCreateManyAndReturnArgs} args - Arguments to create many Mfa_amr_claims.
     * @example
     * // Create many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mfa_amr_claims and only return the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.createManyAndReturn({
     *   select: { session_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mfa_amr_claimsCreateManyAndReturnArgs>(args?: SelectSubset<T, mfa_amr_claimsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mfa_amr_claims.
     * @param {mfa_amr_claimsDeleteArgs} args - Arguments to delete one Mfa_amr_claims.
     * @example
     * // Delete one Mfa_amr_claims
     * const Mfa_amr_claims = await prisma.mfa_amr_claims.delete({
     *   where: {
     *     // ... filter to delete one Mfa_amr_claims
     *   }
     * })
     * 
     */
    delete<T extends mfa_amr_claimsDeleteArgs>(args: SelectSubset<T, mfa_amr_claimsDeleteArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mfa_amr_claims.
     * @param {mfa_amr_claimsUpdateArgs} args - Arguments to update one Mfa_amr_claims.
     * @example
     * // Update one Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mfa_amr_claimsUpdateArgs>(args: SelectSubset<T, mfa_amr_claimsUpdateArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mfa_amr_claims.
     * @param {mfa_amr_claimsDeleteManyArgs} args - Arguments to filter Mfa_amr_claims to delete.
     * @example
     * // Delete a few Mfa_amr_claims
     * const { count } = await prisma.mfa_amr_claims.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mfa_amr_claimsDeleteManyArgs>(args?: SelectSubset<T, mfa_amr_claimsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mfa_amr_claimsUpdateManyArgs>(args: SelectSubset<T, mfa_amr_claimsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_amr_claims and returns the data updated in the database.
     * @param {mfa_amr_claimsUpdateManyAndReturnArgs} args - Arguments to update many Mfa_amr_claims.
     * @example
     * // Update many Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mfa_amr_claims and only return the `session_id`
     * const mfa_amr_claimsWithSession_idOnly = await prisma.mfa_amr_claims.updateManyAndReturn({
     *   select: { session_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mfa_amr_claimsUpdateManyAndReturnArgs>(args: SelectSubset<T, mfa_amr_claimsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mfa_amr_claims.
     * @param {mfa_amr_claimsUpsertArgs} args - Arguments to update or create a Mfa_amr_claims.
     * @example
     * // Update or create a Mfa_amr_claims
     * const mfa_amr_claims = await prisma.mfa_amr_claims.upsert({
     *   create: {
     *     // ... data to create a Mfa_amr_claims
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_amr_claims we want to update
     *   }
     * })
     */
    upsert<T extends mfa_amr_claimsUpsertArgs>(args: SelectSubset<T, mfa_amr_claimsUpsertArgs<ExtArgs>>): Prisma__mfa_amr_claimsClient<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsCountArgs} args - Arguments to filter Mfa_amr_claims to count.
     * @example
     * // Count the number of Mfa_amr_claims
     * const count = await prisma.mfa_amr_claims.count({
     *   where: {
     *     // ... the filter for the Mfa_amr_claims we want to count
     *   }
     * })
    **/
    count<T extends mfa_amr_claimsCountArgs>(
      args?: Subset<T, mfa_amr_claimsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_amr_claimsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_amr_claimsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_amr_claimsAggregateArgs>(args: Subset<T, Mfa_amr_claimsAggregateArgs>): Prisma.PrismaPromise<GetMfa_amr_claimsAggregateType<T>>

    /**
     * Group by Mfa_amr_claims.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_amr_claimsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_amr_claimsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_amr_claimsGroupByArgs['orderBy'] }
        : { orderBy?: mfa_amr_claimsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_amr_claimsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_amr_claimsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_amr_claims model
   */
  readonly fields: mfa_amr_claimsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_amr_claims.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_amr_claimsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sessions<T extends sessionsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sessionsDefaultArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mfa_amr_claims model
   */
  interface mfa_amr_claimsFieldRefs {
    readonly session_id: FieldRef<"mfa_amr_claims", 'String'>
    readonly created_at: FieldRef<"mfa_amr_claims", 'DateTime'>
    readonly updated_at: FieldRef<"mfa_amr_claims", 'DateTime'>
    readonly authentication_method: FieldRef<"mfa_amr_claims", 'String'>
    readonly id: FieldRef<"mfa_amr_claims", 'String'>
  }
    

  // Custom InputTypes
  /**
   * mfa_amr_claims findUnique
   */
  export type mfa_amr_claimsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims findUniqueOrThrow
   */
  export type mfa_amr_claimsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims findFirst
   */
  export type mfa_amr_claimsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_amr_claims.
     */
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * mfa_amr_claims findFirstOrThrow
   */
  export type mfa_amr_claimsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_amr_claims.
     */
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * mfa_amr_claims findMany
   */
  export type mfa_amr_claimsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_amr_claims to fetch.
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_amr_claims to fetch.
     */
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_amr_claims.
     */
    cursor?: mfa_amr_claimsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_amr_claims from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_amr_claims.
     */
    skip?: number
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * mfa_amr_claims create
   */
  export type mfa_amr_claimsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsCreateInput, mfa_amr_claimsUncheckedCreateInput>
  }

  /**
   * mfa_amr_claims createMany
   */
  export type mfa_amr_claimsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_amr_claims.
     */
    data: mfa_amr_claimsCreateManyInput | mfa_amr_claimsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mfa_amr_claims createManyAndReturn
   */
  export type mfa_amr_claimsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * The data used to create many mfa_amr_claims.
     */
    data: mfa_amr_claimsCreateManyInput | mfa_amr_claimsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_amr_claims update
   */
  export type mfa_amr_claimsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateInput, mfa_amr_claimsUncheckedUpdateInput>
    /**
     * Choose, which mfa_amr_claims to update.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims updateMany
   */
  export type mfa_amr_claimsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_amr_claims to update
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * Limit how many mfa_amr_claims to update.
     */
    limit?: number
  }

  /**
   * mfa_amr_claims updateManyAndReturn
   */
  export type mfa_amr_claimsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * The data used to update mfa_amr_claims.
     */
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_amr_claims to update
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * Limit how many mfa_amr_claims to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_amr_claims upsert
   */
  export type mfa_amr_claimsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_amr_claims to update in case it exists.
     */
    where: mfa_amr_claimsWhereUniqueInput
    /**
     * In case the mfa_amr_claims found by the `where` argument doesn't exist, create a new mfa_amr_claims with this data.
     */
    create: XOR<mfa_amr_claimsCreateInput, mfa_amr_claimsUncheckedCreateInput>
    /**
     * In case the mfa_amr_claims was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_amr_claimsUpdateInput, mfa_amr_claimsUncheckedUpdateInput>
  }

  /**
   * mfa_amr_claims delete
   */
  export type mfa_amr_claimsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    /**
     * Filter which mfa_amr_claims to delete.
     */
    where: mfa_amr_claimsWhereUniqueInput
  }

  /**
   * mfa_amr_claims deleteMany
   */
  export type mfa_amr_claimsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_amr_claims to delete
     */
    where?: mfa_amr_claimsWhereInput
    /**
     * Limit how many mfa_amr_claims to delete.
     */
    limit?: number
  }

  /**
   * mfa_amr_claims without action
   */
  export type mfa_amr_claimsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
  }


  /**
   * Model mfa_challenges
   */

  export type AggregateMfa_challenges = {
    _count: Mfa_challengesCountAggregateOutputType | null
    _min: Mfa_challengesMinAggregateOutputType | null
    _max: Mfa_challengesMaxAggregateOutputType | null
  }

  export type Mfa_challengesMinAggregateOutputType = {
    id: string | null
    factor_id: string | null
    created_at: Date | null
    verified_at: Date | null
    ip_address: string | null
    otp_code: string | null
  }

  export type Mfa_challengesMaxAggregateOutputType = {
    id: string | null
    factor_id: string | null
    created_at: Date | null
    verified_at: Date | null
    ip_address: string | null
    otp_code: string | null
  }

  export type Mfa_challengesCountAggregateOutputType = {
    id: number
    factor_id: number
    created_at: number
    verified_at: number
    ip_address: number
    otp_code: number
    web_authn_session_data: number
    _all: number
  }


  export type Mfa_challengesMinAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    otp_code?: true
  }

  export type Mfa_challengesMaxAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    otp_code?: true
  }

  export type Mfa_challengesCountAggregateInputType = {
    id?: true
    factor_id?: true
    created_at?: true
    verified_at?: true
    ip_address?: true
    otp_code?: true
    web_authn_session_data?: true
    _all?: true
  }

  export type Mfa_challengesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_challenges to aggregate.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_challenges
    **/
    _count?: true | Mfa_challengesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_challengesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_challengesMaxAggregateInputType
  }

  export type GetMfa_challengesAggregateType<T extends Mfa_challengesAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_challenges]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_challenges[P]>
      : GetScalarType<T[P], AggregateMfa_challenges[P]>
  }




  export type mfa_challengesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_challengesWhereInput
    orderBy?: mfa_challengesOrderByWithAggregationInput | mfa_challengesOrderByWithAggregationInput[]
    by: Mfa_challengesScalarFieldEnum[] | Mfa_challengesScalarFieldEnum
    having?: mfa_challengesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_challengesCountAggregateInputType | true
    _min?: Mfa_challengesMinAggregateInputType
    _max?: Mfa_challengesMaxAggregateInputType
  }

  export type Mfa_challengesGroupByOutputType = {
    id: string
    factor_id: string
    created_at: Date
    verified_at: Date | null
    ip_address: string
    otp_code: string | null
    web_authn_session_data: JsonValue | null
    _count: Mfa_challengesCountAggregateOutputType | null
    _min: Mfa_challengesMinAggregateOutputType | null
    _max: Mfa_challengesMaxAggregateOutputType | null
  }

  type GetMfa_challengesGroupByPayload<T extends mfa_challengesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_challengesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_challengesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_challengesGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_challengesGroupByOutputType[P]>
        }
      >
    >


  export type mfa_challengesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_challenges"]>

  export type mfa_challengesSelectScalar = {
    id?: boolean
    factor_id?: boolean
    created_at?: boolean
    verified_at?: boolean
    ip_address?: boolean
    otp_code?: boolean
    web_authn_session_data?: boolean
  }

  export type mfa_challengesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "factor_id" | "created_at" | "verified_at" | "ip_address" | "otp_code" | "web_authn_session_data", ExtArgs["result"]["mfa_challenges"]>
  export type mfa_challengesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }
  export type mfa_challengesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }
  export type mfa_challengesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_factors?: boolean | mfa_factorsDefaultArgs<ExtArgs>
  }

  export type $mfa_challengesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_challenges"
    objects: {
      mfa_factors: Prisma.$mfa_factorsPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      factor_id: string
      created_at: Date
      verified_at: Date | null
      ip_address: string
      otp_code: string | null
      web_authn_session_data: Prisma.JsonValue | null
    }, ExtArgs["result"]["mfa_challenges"]>
    composites: {}
  }

  type mfa_challengesGetPayload<S extends boolean | null | undefined | mfa_challengesDefaultArgs> = $Result.GetResult<Prisma.$mfa_challengesPayload, S>

  type mfa_challengesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mfa_challengesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mfa_challengesCountAggregateInputType | true
    }

  export interface mfa_challengesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_challenges'], meta: { name: 'mfa_challenges' } }
    /**
     * Find zero or one Mfa_challenges that matches the filter.
     * @param {mfa_challengesFindUniqueArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mfa_challengesFindUniqueArgs>(args: SelectSubset<T, mfa_challengesFindUniqueArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mfa_challenges that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mfa_challengesFindUniqueOrThrowArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mfa_challengesFindUniqueOrThrowArgs>(args: SelectSubset<T, mfa_challengesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_challenges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindFirstArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mfa_challengesFindFirstArgs>(args?: SelectSubset<T, mfa_challengesFindFirstArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_challenges that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindFirstOrThrowArgs} args - Arguments to find a Mfa_challenges
     * @example
     * // Get one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mfa_challengesFindFirstOrThrowArgs>(args?: SelectSubset<T, mfa_challengesFindFirstOrThrowArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mfa_challenges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findMany()
     * 
     * // Get first 10 Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends mfa_challengesFindManyArgs>(args?: SelectSubset<T, mfa_challengesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mfa_challenges.
     * @param {mfa_challengesCreateArgs} args - Arguments to create a Mfa_challenges.
     * @example
     * // Create one Mfa_challenges
     * const Mfa_challenges = await prisma.mfa_challenges.create({
     *   data: {
     *     // ... data to create a Mfa_challenges
     *   }
     * })
     * 
     */
    create<T extends mfa_challengesCreateArgs>(args: SelectSubset<T, mfa_challengesCreateArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mfa_challenges.
     * @param {mfa_challengesCreateManyArgs} args - Arguments to create many Mfa_challenges.
     * @example
     * // Create many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mfa_challengesCreateManyArgs>(args?: SelectSubset<T, mfa_challengesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mfa_challenges and returns the data saved in the database.
     * @param {mfa_challengesCreateManyAndReturnArgs} args - Arguments to create many Mfa_challenges.
     * @example
     * // Create many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mfa_challenges and only return the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mfa_challengesCreateManyAndReturnArgs>(args?: SelectSubset<T, mfa_challengesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mfa_challenges.
     * @param {mfa_challengesDeleteArgs} args - Arguments to delete one Mfa_challenges.
     * @example
     * // Delete one Mfa_challenges
     * const Mfa_challenges = await prisma.mfa_challenges.delete({
     *   where: {
     *     // ... filter to delete one Mfa_challenges
     *   }
     * })
     * 
     */
    delete<T extends mfa_challengesDeleteArgs>(args: SelectSubset<T, mfa_challengesDeleteArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mfa_challenges.
     * @param {mfa_challengesUpdateArgs} args - Arguments to update one Mfa_challenges.
     * @example
     * // Update one Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mfa_challengesUpdateArgs>(args: SelectSubset<T, mfa_challengesUpdateArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mfa_challenges.
     * @param {mfa_challengesDeleteManyArgs} args - Arguments to filter Mfa_challenges to delete.
     * @example
     * // Delete a few Mfa_challenges
     * const { count } = await prisma.mfa_challenges.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mfa_challengesDeleteManyArgs>(args?: SelectSubset<T, mfa_challengesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mfa_challengesUpdateManyArgs>(args: SelectSubset<T, mfa_challengesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_challenges and returns the data updated in the database.
     * @param {mfa_challengesUpdateManyAndReturnArgs} args - Arguments to update many Mfa_challenges.
     * @example
     * // Update many Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mfa_challenges and only return the `id`
     * const mfa_challengesWithIdOnly = await prisma.mfa_challenges.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mfa_challengesUpdateManyAndReturnArgs>(args: SelectSubset<T, mfa_challengesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mfa_challenges.
     * @param {mfa_challengesUpsertArgs} args - Arguments to update or create a Mfa_challenges.
     * @example
     * // Update or create a Mfa_challenges
     * const mfa_challenges = await prisma.mfa_challenges.upsert({
     *   create: {
     *     // ... data to create a Mfa_challenges
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_challenges we want to update
     *   }
     * })
     */
    upsert<T extends mfa_challengesUpsertArgs>(args: SelectSubset<T, mfa_challengesUpsertArgs<ExtArgs>>): Prisma__mfa_challengesClient<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesCountArgs} args - Arguments to filter Mfa_challenges to count.
     * @example
     * // Count the number of Mfa_challenges
     * const count = await prisma.mfa_challenges.count({
     *   where: {
     *     // ... the filter for the Mfa_challenges we want to count
     *   }
     * })
    **/
    count<T extends mfa_challengesCountArgs>(
      args?: Subset<T, mfa_challengesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_challengesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_challengesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_challengesAggregateArgs>(args: Subset<T, Mfa_challengesAggregateArgs>): Prisma.PrismaPromise<GetMfa_challengesAggregateType<T>>

    /**
     * Group by Mfa_challenges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_challengesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_challengesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_challengesGroupByArgs['orderBy'] }
        : { orderBy?: mfa_challengesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_challengesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_challengesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_challenges model
   */
  readonly fields: mfa_challengesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_challenges.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_challengesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mfa_factors<T extends mfa_factorsDefaultArgs<ExtArgs> = {}>(args?: Subset<T, mfa_factorsDefaultArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mfa_challenges model
   */
  interface mfa_challengesFieldRefs {
    readonly id: FieldRef<"mfa_challenges", 'String'>
    readonly factor_id: FieldRef<"mfa_challenges", 'String'>
    readonly created_at: FieldRef<"mfa_challenges", 'DateTime'>
    readonly verified_at: FieldRef<"mfa_challenges", 'DateTime'>
    readonly ip_address: FieldRef<"mfa_challenges", 'String'>
    readonly otp_code: FieldRef<"mfa_challenges", 'String'>
    readonly web_authn_session_data: FieldRef<"mfa_challenges", 'Json'>
  }
    

  // Custom InputTypes
  /**
   * mfa_challenges findUnique
   */
  export type mfa_challengesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges findUniqueOrThrow
   */
  export type mfa_challengesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges findFirst
   */
  export type mfa_challengesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_challenges.
     */
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_challenges findFirstOrThrow
   */
  export type mfa_challengesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_challenges.
     */
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_challenges findMany
   */
  export type mfa_challengesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter, which mfa_challenges to fetch.
     */
    where?: mfa_challengesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_challenges to fetch.
     */
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_challenges.
     */
    cursor?: mfa_challengesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_challenges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_challenges.
     */
    skip?: number
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_challenges create
   */
  export type mfa_challengesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_challenges.
     */
    data: XOR<mfa_challengesCreateInput, mfa_challengesUncheckedCreateInput>
  }

  /**
   * mfa_challenges createMany
   */
  export type mfa_challengesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_challenges.
     */
    data: mfa_challengesCreateManyInput | mfa_challengesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mfa_challenges createManyAndReturn
   */
  export type mfa_challengesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * The data used to create many mfa_challenges.
     */
    data: mfa_challengesCreateManyInput | mfa_challengesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_challenges update
   */
  export type mfa_challengesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateInput, mfa_challengesUncheckedUpdateInput>
    /**
     * Choose, which mfa_challenges to update.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges updateMany
   */
  export type mfa_challengesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyInput>
    /**
     * Filter which mfa_challenges to update
     */
    where?: mfa_challengesWhereInput
    /**
     * Limit how many mfa_challenges to update.
     */
    limit?: number
  }

  /**
   * mfa_challenges updateManyAndReturn
   */
  export type mfa_challengesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * The data used to update mfa_challenges.
     */
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyInput>
    /**
     * Filter which mfa_challenges to update
     */
    where?: mfa_challengesWhereInput
    /**
     * Limit how many mfa_challenges to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_challenges upsert
   */
  export type mfa_challengesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_challenges to update in case it exists.
     */
    where: mfa_challengesWhereUniqueInput
    /**
     * In case the mfa_challenges found by the `where` argument doesn't exist, create a new mfa_challenges with this data.
     */
    create: XOR<mfa_challengesCreateInput, mfa_challengesUncheckedCreateInput>
    /**
     * In case the mfa_challenges was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_challengesUpdateInput, mfa_challengesUncheckedUpdateInput>
  }

  /**
   * mfa_challenges delete
   */
  export type mfa_challengesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    /**
     * Filter which mfa_challenges to delete.
     */
    where: mfa_challengesWhereUniqueInput
  }

  /**
   * mfa_challenges deleteMany
   */
  export type mfa_challengesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_challenges to delete
     */
    where?: mfa_challengesWhereInput
    /**
     * Limit how many mfa_challenges to delete.
     */
    limit?: number
  }

  /**
   * mfa_challenges without action
   */
  export type mfa_challengesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
  }


  /**
   * Model mfa_factors
   */

  export type AggregateMfa_factors = {
    _count: Mfa_factorsCountAggregateOutputType | null
    _min: Mfa_factorsMinAggregateOutputType | null
    _max: Mfa_factorsMaxAggregateOutputType | null
  }

  export type Mfa_factorsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    friendly_name: string | null
    factor_type: $Enums.factor_type | null
    status: $Enums.factor_status | null
    created_at: Date | null
    updated_at: Date | null
    secret: string | null
    phone: string | null
    last_challenged_at: Date | null
    web_authn_aaguid: string | null
  }

  export type Mfa_factorsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    friendly_name: string | null
    factor_type: $Enums.factor_type | null
    status: $Enums.factor_status | null
    created_at: Date | null
    updated_at: Date | null
    secret: string | null
    phone: string | null
    last_challenged_at: Date | null
    web_authn_aaguid: string | null
  }

  export type Mfa_factorsCountAggregateOutputType = {
    id: number
    user_id: number
    friendly_name: number
    factor_type: number
    status: number
    created_at: number
    updated_at: number
    secret: number
    phone: number
    last_challenged_at: number
    web_authn_credential: number
    web_authn_aaguid: number
    _all: number
  }


  export type Mfa_factorsMinAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    phone?: true
    last_challenged_at?: true
    web_authn_aaguid?: true
  }

  export type Mfa_factorsMaxAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    phone?: true
    last_challenged_at?: true
    web_authn_aaguid?: true
  }

  export type Mfa_factorsCountAggregateInputType = {
    id?: true
    user_id?: true
    friendly_name?: true
    factor_type?: true
    status?: true
    created_at?: true
    updated_at?: true
    secret?: true
    phone?: true
    last_challenged_at?: true
    web_authn_credential?: true
    web_authn_aaguid?: true
    _all?: true
  }

  export type Mfa_factorsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_factors to aggregate.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned mfa_factors
    **/
    _count?: true | Mfa_factorsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Mfa_factorsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Mfa_factorsMaxAggregateInputType
  }

  export type GetMfa_factorsAggregateType<T extends Mfa_factorsAggregateArgs> = {
        [P in keyof T & keyof AggregateMfa_factors]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMfa_factors[P]>
      : GetScalarType<T[P], AggregateMfa_factors[P]>
  }




  export type mfa_factorsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: mfa_factorsWhereInput
    orderBy?: mfa_factorsOrderByWithAggregationInput | mfa_factorsOrderByWithAggregationInput[]
    by: Mfa_factorsScalarFieldEnum[] | Mfa_factorsScalarFieldEnum
    having?: mfa_factorsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Mfa_factorsCountAggregateInputType | true
    _min?: Mfa_factorsMinAggregateInputType
    _max?: Mfa_factorsMaxAggregateInputType
  }

  export type Mfa_factorsGroupByOutputType = {
    id: string
    user_id: string
    friendly_name: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date
    updated_at: Date
    secret: string | null
    phone: string | null
    last_challenged_at: Date | null
    web_authn_credential: JsonValue | null
    web_authn_aaguid: string | null
    _count: Mfa_factorsCountAggregateOutputType | null
    _min: Mfa_factorsMinAggregateOutputType | null
    _max: Mfa_factorsMaxAggregateOutputType | null
  }

  type GetMfa_factorsGroupByPayload<T extends mfa_factorsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Mfa_factorsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Mfa_factorsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Mfa_factorsGroupByOutputType[P]>
            : GetScalarType<T[P], Mfa_factorsGroupByOutputType[P]>
        }
      >
    >


  export type mfa_factorsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
    mfa_challenges?: boolean | mfa_factors$mfa_challengesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["mfa_factors"]>

  export type mfa_factorsSelectScalar = {
    id?: boolean
    user_id?: boolean
    friendly_name?: boolean
    factor_type?: boolean
    status?: boolean
    created_at?: boolean
    updated_at?: boolean
    secret?: boolean
    phone?: boolean
    last_challenged_at?: boolean
    web_authn_credential?: boolean
    web_authn_aaguid?: boolean
  }

  export type mfa_factorsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "friendly_name" | "factor_type" | "status" | "created_at" | "updated_at" | "secret" | "phone" | "last_challenged_at" | "web_authn_credential" | "web_authn_aaguid", ExtArgs["result"]["mfa_factors"]>
  export type mfa_factorsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_challenges?: boolean | mfa_factors$mfa_challengesArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | Mfa_factorsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type mfa_factorsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type mfa_factorsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $mfa_factorsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "mfa_factors"
    objects: {
      mfa_challenges: Prisma.$mfa_challengesPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      friendly_name: string | null
      factor_type: $Enums.factor_type
      status: $Enums.factor_status
      created_at: Date
      updated_at: Date
      secret: string | null
      phone: string | null
      last_challenged_at: Date | null
      web_authn_credential: Prisma.JsonValue | null
      web_authn_aaguid: string | null
    }, ExtArgs["result"]["mfa_factors"]>
    composites: {}
  }

  type mfa_factorsGetPayload<S extends boolean | null | undefined | mfa_factorsDefaultArgs> = $Result.GetResult<Prisma.$mfa_factorsPayload, S>

  type mfa_factorsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<mfa_factorsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Mfa_factorsCountAggregateInputType | true
    }

  export interface mfa_factorsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['mfa_factors'], meta: { name: 'mfa_factors' } }
    /**
     * Find zero or one Mfa_factors that matches the filter.
     * @param {mfa_factorsFindUniqueArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends mfa_factorsFindUniqueArgs>(args: SelectSubset<T, mfa_factorsFindUniqueArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Mfa_factors that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {mfa_factorsFindUniqueOrThrowArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends mfa_factorsFindUniqueOrThrowArgs>(args: SelectSubset<T, mfa_factorsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_factors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindFirstArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends mfa_factorsFindFirstArgs>(args?: SelectSubset<T, mfa_factorsFindFirstArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Mfa_factors that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindFirstOrThrowArgs} args - Arguments to find a Mfa_factors
     * @example
     * // Get one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends mfa_factorsFindFirstOrThrowArgs>(args?: SelectSubset<T, mfa_factorsFindFirstOrThrowArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Mfa_factors that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findMany()
     * 
     * // Get first 10 Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends mfa_factorsFindManyArgs>(args?: SelectSubset<T, mfa_factorsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Mfa_factors.
     * @param {mfa_factorsCreateArgs} args - Arguments to create a Mfa_factors.
     * @example
     * // Create one Mfa_factors
     * const Mfa_factors = await prisma.mfa_factors.create({
     *   data: {
     *     // ... data to create a Mfa_factors
     *   }
     * })
     * 
     */
    create<T extends mfa_factorsCreateArgs>(args: SelectSubset<T, mfa_factorsCreateArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Mfa_factors.
     * @param {mfa_factorsCreateManyArgs} args - Arguments to create many Mfa_factors.
     * @example
     * // Create many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends mfa_factorsCreateManyArgs>(args?: SelectSubset<T, mfa_factorsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Mfa_factors and returns the data saved in the database.
     * @param {mfa_factorsCreateManyAndReturnArgs} args - Arguments to create many Mfa_factors.
     * @example
     * // Create many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Mfa_factors and only return the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends mfa_factorsCreateManyAndReturnArgs>(args?: SelectSubset<T, mfa_factorsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Mfa_factors.
     * @param {mfa_factorsDeleteArgs} args - Arguments to delete one Mfa_factors.
     * @example
     * // Delete one Mfa_factors
     * const Mfa_factors = await prisma.mfa_factors.delete({
     *   where: {
     *     // ... filter to delete one Mfa_factors
     *   }
     * })
     * 
     */
    delete<T extends mfa_factorsDeleteArgs>(args: SelectSubset<T, mfa_factorsDeleteArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Mfa_factors.
     * @param {mfa_factorsUpdateArgs} args - Arguments to update one Mfa_factors.
     * @example
     * // Update one Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends mfa_factorsUpdateArgs>(args: SelectSubset<T, mfa_factorsUpdateArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Mfa_factors.
     * @param {mfa_factorsDeleteManyArgs} args - Arguments to filter Mfa_factors to delete.
     * @example
     * // Delete a few Mfa_factors
     * const { count } = await prisma.mfa_factors.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends mfa_factorsDeleteManyArgs>(args?: SelectSubset<T, mfa_factorsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends mfa_factorsUpdateManyArgs>(args: SelectSubset<T, mfa_factorsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Mfa_factors and returns the data updated in the database.
     * @param {mfa_factorsUpdateManyAndReturnArgs} args - Arguments to update many Mfa_factors.
     * @example
     * // Update many Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Mfa_factors and only return the `id`
     * const mfa_factorsWithIdOnly = await prisma.mfa_factors.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends mfa_factorsUpdateManyAndReturnArgs>(args: SelectSubset<T, mfa_factorsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Mfa_factors.
     * @param {mfa_factorsUpsertArgs} args - Arguments to update or create a Mfa_factors.
     * @example
     * // Update or create a Mfa_factors
     * const mfa_factors = await prisma.mfa_factors.upsert({
     *   create: {
     *     // ... data to create a Mfa_factors
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Mfa_factors we want to update
     *   }
     * })
     */
    upsert<T extends mfa_factorsUpsertArgs>(args: SelectSubset<T, mfa_factorsUpsertArgs<ExtArgs>>): Prisma__mfa_factorsClient<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsCountArgs} args - Arguments to filter Mfa_factors to count.
     * @example
     * // Count the number of Mfa_factors
     * const count = await prisma.mfa_factors.count({
     *   where: {
     *     // ... the filter for the Mfa_factors we want to count
     *   }
     * })
    **/
    count<T extends mfa_factorsCountArgs>(
      args?: Subset<T, mfa_factorsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Mfa_factorsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Mfa_factorsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Mfa_factorsAggregateArgs>(args: Subset<T, Mfa_factorsAggregateArgs>): Prisma.PrismaPromise<GetMfa_factorsAggregateType<T>>

    /**
     * Group by Mfa_factors.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {mfa_factorsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends mfa_factorsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: mfa_factorsGroupByArgs['orderBy'] }
        : { orderBy?: mfa_factorsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, mfa_factorsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMfa_factorsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the mfa_factors model
   */
  readonly fields: mfa_factorsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for mfa_factors.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__mfa_factorsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mfa_challenges<T extends mfa_factors$mfa_challengesArgs<ExtArgs> = {}>(args?: Subset<T, mfa_factors$mfa_challengesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_challengesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the mfa_factors model
   */
  interface mfa_factorsFieldRefs {
    readonly id: FieldRef<"mfa_factors", 'String'>
    readonly user_id: FieldRef<"mfa_factors", 'String'>
    readonly friendly_name: FieldRef<"mfa_factors", 'String'>
    readonly factor_type: FieldRef<"mfa_factors", 'factor_type'>
    readonly status: FieldRef<"mfa_factors", 'factor_status'>
    readonly created_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly updated_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly secret: FieldRef<"mfa_factors", 'String'>
    readonly phone: FieldRef<"mfa_factors", 'String'>
    readonly last_challenged_at: FieldRef<"mfa_factors", 'DateTime'>
    readonly web_authn_credential: FieldRef<"mfa_factors", 'Json'>
    readonly web_authn_aaguid: FieldRef<"mfa_factors", 'String'>
  }
    

  // Custom InputTypes
  /**
   * mfa_factors findUnique
   */
  export type mfa_factorsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors findUniqueOrThrow
   */
  export type mfa_factorsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors findFirst
   */
  export type mfa_factorsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_factors.
     */
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * mfa_factors findFirstOrThrow
   */
  export type mfa_factorsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of mfa_factors.
     */
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * mfa_factors findMany
   */
  export type mfa_factorsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter, which mfa_factors to fetch.
     */
    where?: mfa_factorsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of mfa_factors to fetch.
     */
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing mfa_factors.
     */
    cursor?: mfa_factorsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` mfa_factors from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` mfa_factors.
     */
    skip?: number
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * mfa_factors create
   */
  export type mfa_factorsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The data needed to create a mfa_factors.
     */
    data: XOR<mfa_factorsCreateInput, mfa_factorsUncheckedCreateInput>
  }

  /**
   * mfa_factors createMany
   */
  export type mfa_factorsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many mfa_factors.
     */
    data: mfa_factorsCreateManyInput | mfa_factorsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * mfa_factors createManyAndReturn
   */
  export type mfa_factorsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * The data used to create many mfa_factors.
     */
    data: mfa_factorsCreateManyInput | mfa_factorsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_factors update
   */
  export type mfa_factorsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The data needed to update a mfa_factors.
     */
    data: XOR<mfa_factorsUpdateInput, mfa_factorsUncheckedUpdateInput>
    /**
     * Choose, which mfa_factors to update.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors updateMany
   */
  export type mfa_factorsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update mfa_factors.
     */
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_factors to update
     */
    where?: mfa_factorsWhereInput
    /**
     * Limit how many mfa_factors to update.
     */
    limit?: number
  }

  /**
   * mfa_factors updateManyAndReturn
   */
  export type mfa_factorsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * The data used to update mfa_factors.
     */
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyInput>
    /**
     * Filter which mfa_factors to update
     */
    where?: mfa_factorsWhereInput
    /**
     * Limit how many mfa_factors to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * mfa_factors upsert
   */
  export type mfa_factorsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * The filter to search for the mfa_factors to update in case it exists.
     */
    where: mfa_factorsWhereUniqueInput
    /**
     * In case the mfa_factors found by the `where` argument doesn't exist, create a new mfa_factors with this data.
     */
    create: XOR<mfa_factorsCreateInput, mfa_factorsUncheckedCreateInput>
    /**
     * In case the mfa_factors was found with the provided `where` argument, update it with this data.
     */
    update: XOR<mfa_factorsUpdateInput, mfa_factorsUncheckedUpdateInput>
  }

  /**
   * mfa_factors delete
   */
  export type mfa_factorsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    /**
     * Filter which mfa_factors to delete.
     */
    where: mfa_factorsWhereUniqueInput
  }

  /**
   * mfa_factors deleteMany
   */
  export type mfa_factorsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which mfa_factors to delete
     */
    where?: mfa_factorsWhereInput
    /**
     * Limit how many mfa_factors to delete.
     */
    limit?: number
  }

  /**
   * mfa_factors.mfa_challenges
   */
  export type mfa_factors$mfa_challengesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_challenges
     */
    select?: mfa_challengesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_challenges
     */
    omit?: mfa_challengesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_challengesInclude<ExtArgs> | null
    where?: mfa_challengesWhereInput
    orderBy?: mfa_challengesOrderByWithRelationInput | mfa_challengesOrderByWithRelationInput[]
    cursor?: mfa_challengesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_challengesScalarFieldEnum | Mfa_challengesScalarFieldEnum[]
  }

  /**
   * mfa_factors without action
   */
  export type mfa_factorsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
  }


  /**
   * Model one_time_tokens
   */

  export type AggregateOne_time_tokens = {
    _count: One_time_tokensCountAggregateOutputType | null
    _min: One_time_tokensMinAggregateOutputType | null
    _max: One_time_tokensMaxAggregateOutputType | null
  }

  export type One_time_tokensMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    token_type: $Enums.one_time_token_type | null
    token_hash: string | null
    relates_to: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type One_time_tokensMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    token_type: $Enums.one_time_token_type | null
    token_hash: string | null
    relates_to: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type One_time_tokensCountAggregateOutputType = {
    id: number
    user_id: number
    token_type: number
    token_hash: number
    relates_to: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type One_time_tokensMinAggregateInputType = {
    id?: true
    user_id?: true
    token_type?: true
    token_hash?: true
    relates_to?: true
    created_at?: true
    updated_at?: true
  }

  export type One_time_tokensMaxAggregateInputType = {
    id?: true
    user_id?: true
    token_type?: true
    token_hash?: true
    relates_to?: true
    created_at?: true
    updated_at?: true
  }

  export type One_time_tokensCountAggregateInputType = {
    id?: true
    user_id?: true
    token_type?: true
    token_hash?: true
    relates_to?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type One_time_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which one_time_tokens to aggregate.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned one_time_tokens
    **/
    _count?: true | One_time_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: One_time_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: One_time_tokensMaxAggregateInputType
  }

  export type GetOne_time_tokensAggregateType<T extends One_time_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateOne_time_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOne_time_tokens[P]>
      : GetScalarType<T[P], AggregateOne_time_tokens[P]>
  }




  export type one_time_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: one_time_tokensWhereInput
    orderBy?: one_time_tokensOrderByWithAggregationInput | one_time_tokensOrderByWithAggregationInput[]
    by: One_time_tokensScalarFieldEnum[] | One_time_tokensScalarFieldEnum
    having?: one_time_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: One_time_tokensCountAggregateInputType | true
    _min?: One_time_tokensMinAggregateInputType
    _max?: One_time_tokensMaxAggregateInputType
  }

  export type One_time_tokensGroupByOutputType = {
    id: string
    user_id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at: Date
    updated_at: Date
    _count: One_time_tokensCountAggregateOutputType | null
    _min: One_time_tokensMinAggregateOutputType | null
    _max: One_time_tokensMaxAggregateOutputType | null
  }

  type GetOne_time_tokensGroupByPayload<T extends one_time_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<One_time_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof One_time_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], One_time_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], One_time_tokensGroupByOutputType[P]>
        }
      >
    >


  export type one_time_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["one_time_tokens"]>

  export type one_time_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["one_time_tokens"]>

  export type one_time_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["one_time_tokens"]>

  export type one_time_tokensSelectScalar = {
    id?: boolean
    user_id?: boolean
    token_type?: boolean
    token_hash?: boolean
    relates_to?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type one_time_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "token_type" | "token_hash" | "relates_to" | "created_at" | "updated_at", ExtArgs["result"]["one_time_tokens"]>
  export type one_time_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type one_time_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type one_time_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $one_time_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "one_time_tokens"
    objects: {
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      token_type: $Enums.one_time_token_type
      token_hash: string
      relates_to: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["one_time_tokens"]>
    composites: {}
  }

  type one_time_tokensGetPayload<S extends boolean | null | undefined | one_time_tokensDefaultArgs> = $Result.GetResult<Prisma.$one_time_tokensPayload, S>

  type one_time_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<one_time_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: One_time_tokensCountAggregateInputType | true
    }

  export interface one_time_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['one_time_tokens'], meta: { name: 'one_time_tokens' } }
    /**
     * Find zero or one One_time_tokens that matches the filter.
     * @param {one_time_tokensFindUniqueArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends one_time_tokensFindUniqueArgs>(args: SelectSubset<T, one_time_tokensFindUniqueArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one One_time_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {one_time_tokensFindUniqueOrThrowArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends one_time_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, one_time_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first One_time_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensFindFirstArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends one_time_tokensFindFirstArgs>(args?: SelectSubset<T, one_time_tokensFindFirstArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first One_time_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensFindFirstOrThrowArgs} args - Arguments to find a One_time_tokens
     * @example
     * // Get one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends one_time_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, one_time_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more One_time_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findMany()
     * 
     * // Get first 10 One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const one_time_tokensWithIdOnly = await prisma.one_time_tokens.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends one_time_tokensFindManyArgs>(args?: SelectSubset<T, one_time_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a One_time_tokens.
     * @param {one_time_tokensCreateArgs} args - Arguments to create a One_time_tokens.
     * @example
     * // Create one One_time_tokens
     * const One_time_tokens = await prisma.one_time_tokens.create({
     *   data: {
     *     // ... data to create a One_time_tokens
     *   }
     * })
     * 
     */
    create<T extends one_time_tokensCreateArgs>(args: SelectSubset<T, one_time_tokensCreateArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many One_time_tokens.
     * @param {one_time_tokensCreateManyArgs} args - Arguments to create many One_time_tokens.
     * @example
     * // Create many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends one_time_tokensCreateManyArgs>(args?: SelectSubset<T, one_time_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many One_time_tokens and returns the data saved in the database.
     * @param {one_time_tokensCreateManyAndReturnArgs} args - Arguments to create many One_time_tokens.
     * @example
     * // Create many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many One_time_tokens and only return the `id`
     * const one_time_tokensWithIdOnly = await prisma.one_time_tokens.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends one_time_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, one_time_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a One_time_tokens.
     * @param {one_time_tokensDeleteArgs} args - Arguments to delete one One_time_tokens.
     * @example
     * // Delete one One_time_tokens
     * const One_time_tokens = await prisma.one_time_tokens.delete({
     *   where: {
     *     // ... filter to delete one One_time_tokens
     *   }
     * })
     * 
     */
    delete<T extends one_time_tokensDeleteArgs>(args: SelectSubset<T, one_time_tokensDeleteArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one One_time_tokens.
     * @param {one_time_tokensUpdateArgs} args - Arguments to update one One_time_tokens.
     * @example
     * // Update one One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends one_time_tokensUpdateArgs>(args: SelectSubset<T, one_time_tokensUpdateArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more One_time_tokens.
     * @param {one_time_tokensDeleteManyArgs} args - Arguments to filter One_time_tokens to delete.
     * @example
     * // Delete a few One_time_tokens
     * const { count } = await prisma.one_time_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends one_time_tokensDeleteManyArgs>(args?: SelectSubset<T, one_time_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends one_time_tokensUpdateManyArgs>(args: SelectSubset<T, one_time_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more One_time_tokens and returns the data updated in the database.
     * @param {one_time_tokensUpdateManyAndReturnArgs} args - Arguments to update many One_time_tokens.
     * @example
     * // Update many One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more One_time_tokens and only return the `id`
     * const one_time_tokensWithIdOnly = await prisma.one_time_tokens.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends one_time_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, one_time_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one One_time_tokens.
     * @param {one_time_tokensUpsertArgs} args - Arguments to update or create a One_time_tokens.
     * @example
     * // Update or create a One_time_tokens
     * const one_time_tokens = await prisma.one_time_tokens.upsert({
     *   create: {
     *     // ... data to create a One_time_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the One_time_tokens we want to update
     *   }
     * })
     */
    upsert<T extends one_time_tokensUpsertArgs>(args: SelectSubset<T, one_time_tokensUpsertArgs<ExtArgs>>): Prisma__one_time_tokensClient<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensCountArgs} args - Arguments to filter One_time_tokens to count.
     * @example
     * // Count the number of One_time_tokens
     * const count = await prisma.one_time_tokens.count({
     *   where: {
     *     // ... the filter for the One_time_tokens we want to count
     *   }
     * })
    **/
    count<T extends one_time_tokensCountArgs>(
      args?: Subset<T, one_time_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], One_time_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {One_time_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends One_time_tokensAggregateArgs>(args: Subset<T, One_time_tokensAggregateArgs>): Prisma.PrismaPromise<GetOne_time_tokensAggregateType<T>>

    /**
     * Group by One_time_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {one_time_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends one_time_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: one_time_tokensGroupByArgs['orderBy'] }
        : { orderBy?: one_time_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, one_time_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOne_time_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the one_time_tokens model
   */
  readonly fields: one_time_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for one_time_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__one_time_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the one_time_tokens model
   */
  interface one_time_tokensFieldRefs {
    readonly id: FieldRef<"one_time_tokens", 'String'>
    readonly user_id: FieldRef<"one_time_tokens", 'String'>
    readonly token_type: FieldRef<"one_time_tokens", 'one_time_token_type'>
    readonly token_hash: FieldRef<"one_time_tokens", 'String'>
    readonly relates_to: FieldRef<"one_time_tokens", 'String'>
    readonly created_at: FieldRef<"one_time_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"one_time_tokens", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * one_time_tokens findUnique
   */
  export type one_time_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens findUniqueOrThrow
   */
  export type one_time_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens findFirst
   */
  export type one_time_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for one_time_tokens.
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of one_time_tokens.
     */
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * one_time_tokens findFirstOrThrow
   */
  export type one_time_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for one_time_tokens.
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of one_time_tokens.
     */
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * one_time_tokens findMany
   */
  export type one_time_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter, which one_time_tokens to fetch.
     */
    where?: one_time_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of one_time_tokens to fetch.
     */
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing one_time_tokens.
     */
    cursor?: one_time_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` one_time_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` one_time_tokens.
     */
    skip?: number
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * one_time_tokens create
   */
  export type one_time_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a one_time_tokens.
     */
    data: XOR<one_time_tokensCreateInput, one_time_tokensUncheckedCreateInput>
  }

  /**
   * one_time_tokens createMany
   */
  export type one_time_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many one_time_tokens.
     */
    data: one_time_tokensCreateManyInput | one_time_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * one_time_tokens createManyAndReturn
   */
  export type one_time_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many one_time_tokens.
     */
    data: one_time_tokensCreateManyInput | one_time_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * one_time_tokens update
   */
  export type one_time_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a one_time_tokens.
     */
    data: XOR<one_time_tokensUpdateInput, one_time_tokensUncheckedUpdateInput>
    /**
     * Choose, which one_time_tokens to update.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens updateMany
   */
  export type one_time_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update one_time_tokens.
     */
    data: XOR<one_time_tokensUpdateManyMutationInput, one_time_tokensUncheckedUpdateManyInput>
    /**
     * Filter which one_time_tokens to update
     */
    where?: one_time_tokensWhereInput
    /**
     * Limit how many one_time_tokens to update.
     */
    limit?: number
  }

  /**
   * one_time_tokens updateManyAndReturn
   */
  export type one_time_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * The data used to update one_time_tokens.
     */
    data: XOR<one_time_tokensUpdateManyMutationInput, one_time_tokensUncheckedUpdateManyInput>
    /**
     * Filter which one_time_tokens to update
     */
    where?: one_time_tokensWhereInput
    /**
     * Limit how many one_time_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * one_time_tokens upsert
   */
  export type one_time_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the one_time_tokens to update in case it exists.
     */
    where: one_time_tokensWhereUniqueInput
    /**
     * In case the one_time_tokens found by the `where` argument doesn't exist, create a new one_time_tokens with this data.
     */
    create: XOR<one_time_tokensCreateInput, one_time_tokensUncheckedCreateInput>
    /**
     * In case the one_time_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<one_time_tokensUpdateInput, one_time_tokensUncheckedUpdateInput>
  }

  /**
   * one_time_tokens delete
   */
  export type one_time_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    /**
     * Filter which one_time_tokens to delete.
     */
    where: one_time_tokensWhereUniqueInput
  }

  /**
   * one_time_tokens deleteMany
   */
  export type one_time_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which one_time_tokens to delete
     */
    where?: one_time_tokensWhereInput
    /**
     * Limit how many one_time_tokens to delete.
     */
    limit?: number
  }

  /**
   * one_time_tokens without action
   */
  export type one_time_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
  }


  /**
   * Model refresh_tokens
   */

  export type AggregateRefresh_tokens = {
    _count: Refresh_tokensCountAggregateOutputType | null
    _avg: Refresh_tokensAvgAggregateOutputType | null
    _sum: Refresh_tokensSumAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  export type Refresh_tokensAvgAggregateOutputType = {
    id: number | null
  }

  export type Refresh_tokensSumAggregateOutputType = {
    id: bigint | null
  }

  export type Refresh_tokensMinAggregateOutputType = {
    instance_id: string | null
    id: bigint | null
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
  }

  export type Refresh_tokensMaxAggregateOutputType = {
    instance_id: string | null
    id: bigint | null
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
  }

  export type Refresh_tokensCountAggregateOutputType = {
    instance_id: number
    id: number
    token: number
    user_id: number
    revoked: number
    created_at: number
    updated_at: number
    parent: number
    session_id: number
    _all: number
  }


  export type Refresh_tokensAvgAggregateInputType = {
    id?: true
  }

  export type Refresh_tokensSumAggregateInputType = {
    id?: true
  }

  export type Refresh_tokensMinAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
  }

  export type Refresh_tokensMaxAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
  }

  export type Refresh_tokensCountAggregateInputType = {
    instance_id?: true
    id?: true
    token?: true
    user_id?: true
    revoked?: true
    created_at?: true
    updated_at?: true
    parent?: true
    session_id?: true
    _all?: true
  }

  export type Refresh_tokensAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to aggregate.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned refresh_tokens
    **/
    _count?: true | Refresh_tokensCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Refresh_tokensAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Refresh_tokensSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Refresh_tokensMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type GetRefresh_tokensAggregateType<T extends Refresh_tokensAggregateArgs> = {
        [P in keyof T & keyof AggregateRefresh_tokens]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefresh_tokens[P]>
      : GetScalarType<T[P], AggregateRefresh_tokens[P]>
  }




  export type refresh_tokensGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithAggregationInput | refresh_tokensOrderByWithAggregationInput[]
    by: Refresh_tokensScalarFieldEnum[] | Refresh_tokensScalarFieldEnum
    having?: refresh_tokensScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Refresh_tokensCountAggregateInputType | true
    _avg?: Refresh_tokensAvgAggregateInputType
    _sum?: Refresh_tokensSumAggregateInputType
    _min?: Refresh_tokensMinAggregateInputType
    _max?: Refresh_tokensMaxAggregateInputType
  }

  export type Refresh_tokensGroupByOutputType = {
    instance_id: string | null
    id: bigint
    token: string | null
    user_id: string | null
    revoked: boolean | null
    created_at: Date | null
    updated_at: Date | null
    parent: string | null
    session_id: string | null
    _count: Refresh_tokensCountAggregateOutputType | null
    _avg: Refresh_tokensAvgAggregateOutputType | null
    _sum: Refresh_tokensSumAggregateOutputType | null
    _min: Refresh_tokensMinAggregateOutputType | null
    _max: Refresh_tokensMaxAggregateOutputType | null
  }

  type GetRefresh_tokensGroupByPayload<T extends refresh_tokensGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Refresh_tokensGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Refresh_tokensGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
            : GetScalarType<T[P], Refresh_tokensGroupByOutputType[P]>
        }
      >
    >


  export type refresh_tokensSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }, ExtArgs["result"]["refresh_tokens"]>

  export type refresh_tokensSelectScalar = {
    instance_id?: boolean
    id?: boolean
    token?: boolean
    user_id?: boolean
    revoked?: boolean
    created_at?: boolean
    updated_at?: boolean
    parent?: boolean
    session_id?: boolean
  }

  export type refresh_tokensOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"instance_id" | "id" | "token" | "user_id" | "revoked" | "created_at" | "updated_at" | "parent" | "session_id", ExtArgs["result"]["refresh_tokens"]>
  export type refresh_tokensInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }
  export type refresh_tokensIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }
  export type refresh_tokensIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sessions?: boolean | refresh_tokens$sessionsArgs<ExtArgs>
  }

  export type $refresh_tokensPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "refresh_tokens"
    objects: {
      sessions: Prisma.$sessionsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: bigint
      token: string | null
      user_id: string | null
      revoked: boolean | null
      created_at: Date | null
      updated_at: Date | null
      parent: string | null
      session_id: string | null
    }, ExtArgs["result"]["refresh_tokens"]>
    composites: {}
  }

  type refresh_tokensGetPayload<S extends boolean | null | undefined | refresh_tokensDefaultArgs> = $Result.GetResult<Prisma.$refresh_tokensPayload, S>

  type refresh_tokensCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<refresh_tokensFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Refresh_tokensCountAggregateInputType | true
    }

  export interface refresh_tokensDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['refresh_tokens'], meta: { name: 'refresh_tokens' } }
    /**
     * Find zero or one Refresh_tokens that matches the filter.
     * @param {refresh_tokensFindUniqueArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends refresh_tokensFindUniqueArgs>(args: SelectSubset<T, refresh_tokensFindUniqueArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Refresh_tokens that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {refresh_tokensFindUniqueOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends refresh_tokensFindUniqueOrThrowArgs>(args: SelectSubset<T, refresh_tokensFindUniqueOrThrowArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends refresh_tokensFindFirstArgs>(args?: SelectSubset<T, refresh_tokensFindFirstArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Refresh_tokens that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindFirstOrThrowArgs} args - Arguments to find a Refresh_tokens
     * @example
     * // Get one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends refresh_tokensFindFirstOrThrowArgs>(args?: SelectSubset<T, refresh_tokensFindFirstOrThrowArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Refresh_tokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany()
     * 
     * // Get first 10 Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.findMany({ select: { instance_id: true } })
     * 
     */
    findMany<T extends refresh_tokensFindManyArgs>(args?: SelectSubset<T, refresh_tokensFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Refresh_tokens.
     * @param {refresh_tokensCreateArgs} args - Arguments to create a Refresh_tokens.
     * @example
     * // Create one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.create({
     *   data: {
     *     // ... data to create a Refresh_tokens
     *   }
     * })
     * 
     */
    create<T extends refresh_tokensCreateArgs>(args: SelectSubset<T, refresh_tokensCreateArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Refresh_tokens.
     * @param {refresh_tokensCreateManyArgs} args - Arguments to create many Refresh_tokens.
     * @example
     * // Create many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends refresh_tokensCreateManyArgs>(args?: SelectSubset<T, refresh_tokensCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Refresh_tokens and returns the data saved in the database.
     * @param {refresh_tokensCreateManyAndReturnArgs} args - Arguments to create many Refresh_tokens.
     * @example
     * // Create many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Refresh_tokens and only return the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.createManyAndReturn({
     *   select: { instance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends refresh_tokensCreateManyAndReturnArgs>(args?: SelectSubset<T, refresh_tokensCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Refresh_tokens.
     * @param {refresh_tokensDeleteArgs} args - Arguments to delete one Refresh_tokens.
     * @example
     * // Delete one Refresh_tokens
     * const Refresh_tokens = await prisma.refresh_tokens.delete({
     *   where: {
     *     // ... filter to delete one Refresh_tokens
     *   }
     * })
     * 
     */
    delete<T extends refresh_tokensDeleteArgs>(args: SelectSubset<T, refresh_tokensDeleteArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Refresh_tokens.
     * @param {refresh_tokensUpdateArgs} args - Arguments to update one Refresh_tokens.
     * @example
     * // Update one Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends refresh_tokensUpdateArgs>(args: SelectSubset<T, refresh_tokensUpdateArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Refresh_tokens.
     * @param {refresh_tokensDeleteManyArgs} args - Arguments to filter Refresh_tokens to delete.
     * @example
     * // Delete a few Refresh_tokens
     * const { count } = await prisma.refresh_tokens.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends refresh_tokensDeleteManyArgs>(args?: SelectSubset<T, refresh_tokensDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends refresh_tokensUpdateManyArgs>(args: SelectSubset<T, refresh_tokensUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Refresh_tokens and returns the data updated in the database.
     * @param {refresh_tokensUpdateManyAndReturnArgs} args - Arguments to update many Refresh_tokens.
     * @example
     * // Update many Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Refresh_tokens and only return the `instance_id`
     * const refresh_tokensWithInstance_idOnly = await prisma.refresh_tokens.updateManyAndReturn({
     *   select: { instance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends refresh_tokensUpdateManyAndReturnArgs>(args: SelectSubset<T, refresh_tokensUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Refresh_tokens.
     * @param {refresh_tokensUpsertArgs} args - Arguments to update or create a Refresh_tokens.
     * @example
     * // Update or create a Refresh_tokens
     * const refresh_tokens = await prisma.refresh_tokens.upsert({
     *   create: {
     *     // ... data to create a Refresh_tokens
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to update
     *   }
     * })
     */
    upsert<T extends refresh_tokensUpsertArgs>(args: SelectSubset<T, refresh_tokensUpsertArgs<ExtArgs>>): Prisma__refresh_tokensClient<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensCountArgs} args - Arguments to filter Refresh_tokens to count.
     * @example
     * // Count the number of Refresh_tokens
     * const count = await prisma.refresh_tokens.count({
     *   where: {
     *     // ... the filter for the Refresh_tokens we want to count
     *   }
     * })
    **/
    count<T extends refresh_tokensCountArgs>(
      args?: Subset<T, refresh_tokensCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Refresh_tokensCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Refresh_tokensAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Refresh_tokensAggregateArgs>(args: Subset<T, Refresh_tokensAggregateArgs>): Prisma.PrismaPromise<GetRefresh_tokensAggregateType<T>>

    /**
     * Group by Refresh_tokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {refresh_tokensGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends refresh_tokensGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: refresh_tokensGroupByArgs['orderBy'] }
        : { orderBy?: refresh_tokensGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, refresh_tokensGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefresh_tokensGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the refresh_tokens model
   */
  readonly fields: refresh_tokensFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for refresh_tokens.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__refresh_tokensClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sessions<T extends refresh_tokens$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, refresh_tokens$sessionsArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the refresh_tokens model
   */
  interface refresh_tokensFieldRefs {
    readonly instance_id: FieldRef<"refresh_tokens", 'String'>
    readonly id: FieldRef<"refresh_tokens", 'BigInt'>
    readonly token: FieldRef<"refresh_tokens", 'String'>
    readonly user_id: FieldRef<"refresh_tokens", 'String'>
    readonly revoked: FieldRef<"refresh_tokens", 'Boolean'>
    readonly created_at: FieldRef<"refresh_tokens", 'DateTime'>
    readonly updated_at: FieldRef<"refresh_tokens", 'DateTime'>
    readonly parent: FieldRef<"refresh_tokens", 'String'>
    readonly session_id: FieldRef<"refresh_tokens", 'String'>
  }
    

  // Custom InputTypes
  /**
   * refresh_tokens findUnique
   */
  export type refresh_tokensFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens findUniqueOrThrow
   */
  export type refresh_tokensFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens findFirst
   */
  export type refresh_tokensFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens findFirstOrThrow
   */
  export type refresh_tokensFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of refresh_tokens.
     */
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens findMany
   */
  export type refresh_tokensFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter, which refresh_tokens to fetch.
     */
    where?: refresh_tokensWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of refresh_tokens to fetch.
     */
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing refresh_tokens.
     */
    cursor?: refresh_tokensWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` refresh_tokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` refresh_tokens.
     */
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * refresh_tokens create
   */
  export type refresh_tokensCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to create a refresh_tokens.
     */
    data?: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
  }

  /**
   * refresh_tokens createMany
   */
  export type refresh_tokensCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * refresh_tokens createManyAndReturn
   */
  export type refresh_tokensCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to create many refresh_tokens.
     */
    data: refresh_tokensCreateManyInput | refresh_tokensCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * refresh_tokens update
   */
  export type refresh_tokensUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The data needed to update a refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
    /**
     * Choose, which refresh_tokens to update.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens updateMany
   */
  export type refresh_tokensUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to update.
     */
    limit?: number
  }

  /**
   * refresh_tokens updateManyAndReturn
   */
  export type refresh_tokensUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * The data used to update refresh_tokens.
     */
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyInput>
    /**
     * Filter which refresh_tokens to update
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * refresh_tokens upsert
   */
  export type refresh_tokensUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * The filter to search for the refresh_tokens to update in case it exists.
     */
    where: refresh_tokensWhereUniqueInput
    /**
     * In case the refresh_tokens found by the `where` argument doesn't exist, create a new refresh_tokens with this data.
     */
    create: XOR<refresh_tokensCreateInput, refresh_tokensUncheckedCreateInput>
    /**
     * In case the refresh_tokens was found with the provided `where` argument, update it with this data.
     */
    update: XOR<refresh_tokensUpdateInput, refresh_tokensUncheckedUpdateInput>
  }

  /**
   * refresh_tokens delete
   */
  export type refresh_tokensDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    /**
     * Filter which refresh_tokens to delete.
     */
    where: refresh_tokensWhereUniqueInput
  }

  /**
   * refresh_tokens deleteMany
   */
  export type refresh_tokensDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which refresh_tokens to delete
     */
    where?: refresh_tokensWhereInput
    /**
     * Limit how many refresh_tokens to delete.
     */
    limit?: number
  }

  /**
   * refresh_tokens.sessions
   */
  export type refresh_tokens$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    where?: sessionsWhereInput
  }

  /**
   * refresh_tokens without action
   */
  export type refresh_tokensDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
  }


  /**
   * Model saml_providers
   */

  export type AggregateSaml_providers = {
    _count: Saml_providersCountAggregateOutputType | null
    _min: Saml_providersMinAggregateOutputType | null
    _max: Saml_providersMaxAggregateOutputType | null
  }

  export type Saml_providersMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    entity_id: string | null
    metadata_xml: string | null
    metadata_url: string | null
    created_at: Date | null
    updated_at: Date | null
    name_id_format: string | null
  }

  export type Saml_providersMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    entity_id: string | null
    metadata_xml: string | null
    metadata_url: string | null
    created_at: Date | null
    updated_at: Date | null
    name_id_format: string | null
  }

  export type Saml_providersCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    entity_id: number
    metadata_xml: number
    metadata_url: number
    attribute_mapping: number
    created_at: number
    updated_at: number
    name_id_format: number
    _all: number
  }


  export type Saml_providersMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    created_at?: true
    updated_at?: true
    name_id_format?: true
  }

  export type Saml_providersMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    created_at?: true
    updated_at?: true
    name_id_format?: true
  }

  export type Saml_providersCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    entity_id?: true
    metadata_xml?: true
    metadata_url?: true
    attribute_mapping?: true
    created_at?: true
    updated_at?: true
    name_id_format?: true
    _all?: true
  }

  export type Saml_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_providers to aggregate.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned saml_providers
    **/
    _count?: true | Saml_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Saml_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Saml_providersMaxAggregateInputType
  }

  export type GetSaml_providersAggregateType<T extends Saml_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateSaml_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaml_providers[P]>
      : GetScalarType<T[P], AggregateSaml_providers[P]>
  }




  export type saml_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_providersWhereInput
    orderBy?: saml_providersOrderByWithAggregationInput | saml_providersOrderByWithAggregationInput[]
    by: Saml_providersScalarFieldEnum[] | Saml_providersScalarFieldEnum
    having?: saml_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Saml_providersCountAggregateInputType | true
    _min?: Saml_providersMinAggregateInputType
    _max?: Saml_providersMaxAggregateInputType
  }

  export type Saml_providersGroupByOutputType = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url: string | null
    attribute_mapping: JsonValue | null
    created_at: Date | null
    updated_at: Date | null
    name_id_format: string | null
    _count: Saml_providersCountAggregateOutputType | null
    _min: Saml_providersMinAggregateOutputType | null
    _max: Saml_providersMaxAggregateOutputType | null
  }

  type GetSaml_providersGroupByPayload<T extends saml_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Saml_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Saml_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Saml_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Saml_providersGroupByOutputType[P]>
        }
      >
    >


  export type saml_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_providers"]>

  export type saml_providersSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    entity_id?: boolean
    metadata_xml?: boolean
    metadata_url?: boolean
    attribute_mapping?: boolean
    created_at?: boolean
    updated_at?: boolean
    name_id_format?: boolean
  }

  export type saml_providersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sso_provider_id" | "entity_id" | "metadata_xml" | "metadata_url" | "attribute_mapping" | "created_at" | "updated_at" | "name_id_format", ExtArgs["result"]["saml_providers"]>
  export type saml_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_providersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_providersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }

  export type $saml_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "saml_providers"
    objects: {
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      entity_id: string
      metadata_xml: string
      metadata_url: string | null
      attribute_mapping: Prisma.JsonValue | null
      created_at: Date | null
      updated_at: Date | null
      name_id_format: string | null
    }, ExtArgs["result"]["saml_providers"]>
    composites: {}
  }

  type saml_providersGetPayload<S extends boolean | null | undefined | saml_providersDefaultArgs> = $Result.GetResult<Prisma.$saml_providersPayload, S>

  type saml_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<saml_providersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Saml_providersCountAggregateInputType | true
    }

  export interface saml_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['saml_providers'], meta: { name: 'saml_providers' } }
    /**
     * Find zero or one Saml_providers that matches the filter.
     * @param {saml_providersFindUniqueArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends saml_providersFindUniqueArgs>(args: SelectSubset<T, saml_providersFindUniqueArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Saml_providers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {saml_providersFindUniqueOrThrowArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends saml_providersFindUniqueOrThrowArgs>(args: SelectSubset<T, saml_providersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindFirstArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends saml_providersFindFirstArgs>(args?: SelectSubset<T, saml_providersFindFirstArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindFirstOrThrowArgs} args - Arguments to find a Saml_providers
     * @example
     * // Get one Saml_providers
     * const saml_providers = await prisma.saml_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends saml_providersFindFirstOrThrowArgs>(args?: SelectSubset<T, saml_providersFindFirstOrThrowArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Saml_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Saml_providers
     * const saml_providers = await prisma.saml_providers.findMany()
     * 
     * // Get first 10 Saml_providers
     * const saml_providers = await prisma.saml_providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends saml_providersFindManyArgs>(args?: SelectSubset<T, saml_providersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Saml_providers.
     * @param {saml_providersCreateArgs} args - Arguments to create a Saml_providers.
     * @example
     * // Create one Saml_providers
     * const Saml_providers = await prisma.saml_providers.create({
     *   data: {
     *     // ... data to create a Saml_providers
     *   }
     * })
     * 
     */
    create<T extends saml_providersCreateArgs>(args: SelectSubset<T, saml_providersCreateArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Saml_providers.
     * @param {saml_providersCreateManyArgs} args - Arguments to create many Saml_providers.
     * @example
     * // Create many Saml_providers
     * const saml_providers = await prisma.saml_providers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends saml_providersCreateManyArgs>(args?: SelectSubset<T, saml_providersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Saml_providers and returns the data saved in the database.
     * @param {saml_providersCreateManyAndReturnArgs} args - Arguments to create many Saml_providers.
     * @example
     * // Create many Saml_providers
     * const saml_providers = await prisma.saml_providers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Saml_providers and only return the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends saml_providersCreateManyAndReturnArgs>(args?: SelectSubset<T, saml_providersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Saml_providers.
     * @param {saml_providersDeleteArgs} args - Arguments to delete one Saml_providers.
     * @example
     * // Delete one Saml_providers
     * const Saml_providers = await prisma.saml_providers.delete({
     *   where: {
     *     // ... filter to delete one Saml_providers
     *   }
     * })
     * 
     */
    delete<T extends saml_providersDeleteArgs>(args: SelectSubset<T, saml_providersDeleteArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Saml_providers.
     * @param {saml_providersUpdateArgs} args - Arguments to update one Saml_providers.
     * @example
     * // Update one Saml_providers
     * const saml_providers = await prisma.saml_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends saml_providersUpdateArgs>(args: SelectSubset<T, saml_providersUpdateArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Saml_providers.
     * @param {saml_providersDeleteManyArgs} args - Arguments to filter Saml_providers to delete.
     * @example
     * // Delete a few Saml_providers
     * const { count } = await prisma.saml_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends saml_providersDeleteManyArgs>(args?: SelectSubset<T, saml_providersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Saml_providers
     * const saml_providers = await prisma.saml_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends saml_providersUpdateManyArgs>(args: SelectSubset<T, saml_providersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_providers and returns the data updated in the database.
     * @param {saml_providersUpdateManyAndReturnArgs} args - Arguments to update many Saml_providers.
     * @example
     * // Update many Saml_providers
     * const saml_providers = await prisma.saml_providers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Saml_providers and only return the `id`
     * const saml_providersWithIdOnly = await prisma.saml_providers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends saml_providersUpdateManyAndReturnArgs>(args: SelectSubset<T, saml_providersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Saml_providers.
     * @param {saml_providersUpsertArgs} args - Arguments to update or create a Saml_providers.
     * @example
     * // Update or create a Saml_providers
     * const saml_providers = await prisma.saml_providers.upsert({
     *   create: {
     *     // ... data to create a Saml_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Saml_providers we want to update
     *   }
     * })
     */
    upsert<T extends saml_providersUpsertArgs>(args: SelectSubset<T, saml_providersUpsertArgs<ExtArgs>>): Prisma__saml_providersClient<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersCountArgs} args - Arguments to filter Saml_providers to count.
     * @example
     * // Count the number of Saml_providers
     * const count = await prisma.saml_providers.count({
     *   where: {
     *     // ... the filter for the Saml_providers we want to count
     *   }
     * })
    **/
    count<T extends saml_providersCountArgs>(
      args?: Subset<T, saml_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Saml_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Saml_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Saml_providersAggregateArgs>(args: Subset<T, Saml_providersAggregateArgs>): Prisma.PrismaPromise<GetSaml_providersAggregateType<T>>

    /**
     * Group by Saml_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends saml_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: saml_providersGroupByArgs['orderBy'] }
        : { orderBy?: saml_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, saml_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaml_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the saml_providers model
   */
  readonly fields: saml_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for saml_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__saml_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the saml_providers model
   */
  interface saml_providersFieldRefs {
    readonly id: FieldRef<"saml_providers", 'String'>
    readonly sso_provider_id: FieldRef<"saml_providers", 'String'>
    readonly entity_id: FieldRef<"saml_providers", 'String'>
    readonly metadata_xml: FieldRef<"saml_providers", 'String'>
    readonly metadata_url: FieldRef<"saml_providers", 'String'>
    readonly attribute_mapping: FieldRef<"saml_providers", 'Json'>
    readonly created_at: FieldRef<"saml_providers", 'DateTime'>
    readonly updated_at: FieldRef<"saml_providers", 'DateTime'>
    readonly name_id_format: FieldRef<"saml_providers", 'String'>
  }
    

  // Custom InputTypes
  /**
   * saml_providers findUnique
   */
  export type saml_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers findUniqueOrThrow
   */
  export type saml_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers findFirst
   */
  export type saml_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_providers.
     */
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * saml_providers findFirstOrThrow
   */
  export type saml_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_providers.
     */
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * saml_providers findMany
   */
  export type saml_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter, which saml_providers to fetch.
     */
    where?: saml_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_providers to fetch.
     */
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing saml_providers.
     */
    cursor?: saml_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_providers.
     */
    skip?: number
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * saml_providers create
   */
  export type saml_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a saml_providers.
     */
    data: XOR<saml_providersCreateInput, saml_providersUncheckedCreateInput>
  }

  /**
   * saml_providers createMany
   */
  export type saml_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many saml_providers.
     */
    data: saml_providersCreateManyInput | saml_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * saml_providers createManyAndReturn
   */
  export type saml_providersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * The data used to create many saml_providers.
     */
    data: saml_providersCreateManyInput | saml_providersCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_providers update
   */
  export type saml_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a saml_providers.
     */
    data: XOR<saml_providersUpdateInput, saml_providersUncheckedUpdateInput>
    /**
     * Choose, which saml_providers to update.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers updateMany
   */
  export type saml_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update saml_providers.
     */
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyInput>
    /**
     * Filter which saml_providers to update
     */
    where?: saml_providersWhereInput
    /**
     * Limit how many saml_providers to update.
     */
    limit?: number
  }

  /**
   * saml_providers updateManyAndReturn
   */
  export type saml_providersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * The data used to update saml_providers.
     */
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyInput>
    /**
     * Filter which saml_providers to update
     */
    where?: saml_providersWhereInput
    /**
     * Limit how many saml_providers to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_providers upsert
   */
  export type saml_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the saml_providers to update in case it exists.
     */
    where: saml_providersWhereUniqueInput
    /**
     * In case the saml_providers found by the `where` argument doesn't exist, create a new saml_providers with this data.
     */
    create: XOR<saml_providersCreateInput, saml_providersUncheckedCreateInput>
    /**
     * In case the saml_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<saml_providersUpdateInput, saml_providersUncheckedUpdateInput>
  }

  /**
   * saml_providers delete
   */
  export type saml_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    /**
     * Filter which saml_providers to delete.
     */
    where: saml_providersWhereUniqueInput
  }

  /**
   * saml_providers deleteMany
   */
  export type saml_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_providers to delete
     */
    where?: saml_providersWhereInput
    /**
     * Limit how many saml_providers to delete.
     */
    limit?: number
  }

  /**
   * saml_providers without action
   */
  export type saml_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
  }


  /**
   * Model saml_relay_states
   */

  export type AggregateSaml_relay_states = {
    _count: Saml_relay_statesCountAggregateOutputType | null
    _min: Saml_relay_statesMinAggregateOutputType | null
    _max: Saml_relay_statesMaxAggregateOutputType | null
  }

  export type Saml_relay_statesMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    request_id: string | null
    for_email: string | null
    redirect_to: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
  }

  export type Saml_relay_statesMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    request_id: string | null
    for_email: string | null
    redirect_to: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
  }

  export type Saml_relay_statesCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    request_id: number
    for_email: number
    redirect_to: number
    created_at: number
    updated_at: number
    flow_state_id: number
    _all: number
  }


  export type Saml_relay_statesMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
  }

  export type Saml_relay_statesMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
  }

  export type Saml_relay_statesCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    request_id?: true
    for_email?: true
    redirect_to?: true
    created_at?: true
    updated_at?: true
    flow_state_id?: true
    _all?: true
  }

  export type Saml_relay_statesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_relay_states to aggregate.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned saml_relay_states
    **/
    _count?: true | Saml_relay_statesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Saml_relay_statesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Saml_relay_statesMaxAggregateInputType
  }

  export type GetSaml_relay_statesAggregateType<T extends Saml_relay_statesAggregateArgs> = {
        [P in keyof T & keyof AggregateSaml_relay_states]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSaml_relay_states[P]>
      : GetScalarType<T[P], AggregateSaml_relay_states[P]>
  }




  export type saml_relay_statesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithAggregationInput | saml_relay_statesOrderByWithAggregationInput[]
    by: Saml_relay_statesScalarFieldEnum[] | Saml_relay_statesScalarFieldEnum
    having?: saml_relay_statesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Saml_relay_statesCountAggregateInputType | true
    _min?: Saml_relay_statesMinAggregateInputType
    _max?: Saml_relay_statesMaxAggregateInputType
  }

  export type Saml_relay_statesGroupByOutputType = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email: string | null
    redirect_to: string | null
    created_at: Date | null
    updated_at: Date | null
    flow_state_id: string | null
    _count: Saml_relay_statesCountAggregateOutputType | null
    _min: Saml_relay_statesMinAggregateOutputType | null
    _max: Saml_relay_statesMaxAggregateOutputType | null
  }

  type GetSaml_relay_statesGroupByPayload<T extends saml_relay_statesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Saml_relay_statesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Saml_relay_statesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Saml_relay_statesGroupByOutputType[P]>
            : GetScalarType<T[P], Saml_relay_statesGroupByOutputType[P]>
        }
      >
    >


  export type saml_relay_statesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["saml_relay_states"]>

  export type saml_relay_statesSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    request_id?: boolean
    for_email?: boolean
    redirect_to?: boolean
    created_at?: boolean
    updated_at?: boolean
    flow_state_id?: boolean
  }

  export type saml_relay_statesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sso_provider_id" | "request_id" | "for_email" | "redirect_to" | "created_at" | "updated_at" | "flow_state_id", ExtArgs["result"]["saml_relay_states"]>
  export type saml_relay_statesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_relay_statesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type saml_relay_statesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    flow_state?: boolean | saml_relay_states$flow_stateArgs<ExtArgs>
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }

  export type $saml_relay_statesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "saml_relay_states"
    objects: {
      flow_state: Prisma.$flow_statePayload<ExtArgs> | null
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      request_id: string
      for_email: string | null
      redirect_to: string | null
      created_at: Date | null
      updated_at: Date | null
      flow_state_id: string | null
    }, ExtArgs["result"]["saml_relay_states"]>
    composites: {}
  }

  type saml_relay_statesGetPayload<S extends boolean | null | undefined | saml_relay_statesDefaultArgs> = $Result.GetResult<Prisma.$saml_relay_statesPayload, S>

  type saml_relay_statesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<saml_relay_statesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Saml_relay_statesCountAggregateInputType | true
    }

  export interface saml_relay_statesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['saml_relay_states'], meta: { name: 'saml_relay_states' } }
    /**
     * Find zero or one Saml_relay_states that matches the filter.
     * @param {saml_relay_statesFindUniqueArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends saml_relay_statesFindUniqueArgs>(args: SelectSubset<T, saml_relay_statesFindUniqueArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Saml_relay_states that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {saml_relay_statesFindUniqueOrThrowArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends saml_relay_statesFindUniqueOrThrowArgs>(args: SelectSubset<T, saml_relay_statesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_relay_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindFirstArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends saml_relay_statesFindFirstArgs>(args?: SelectSubset<T, saml_relay_statesFindFirstArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Saml_relay_states that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindFirstOrThrowArgs} args - Arguments to find a Saml_relay_states
     * @example
     * // Get one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends saml_relay_statesFindFirstOrThrowArgs>(args?: SelectSubset<T, saml_relay_statesFindFirstOrThrowArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Saml_relay_states that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findMany()
     * 
     * // Get first 10 Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends saml_relay_statesFindManyArgs>(args?: SelectSubset<T, saml_relay_statesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Saml_relay_states.
     * @param {saml_relay_statesCreateArgs} args - Arguments to create a Saml_relay_states.
     * @example
     * // Create one Saml_relay_states
     * const Saml_relay_states = await prisma.saml_relay_states.create({
     *   data: {
     *     // ... data to create a Saml_relay_states
     *   }
     * })
     * 
     */
    create<T extends saml_relay_statesCreateArgs>(args: SelectSubset<T, saml_relay_statesCreateArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Saml_relay_states.
     * @param {saml_relay_statesCreateManyArgs} args - Arguments to create many Saml_relay_states.
     * @example
     * // Create many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends saml_relay_statesCreateManyArgs>(args?: SelectSubset<T, saml_relay_statesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Saml_relay_states and returns the data saved in the database.
     * @param {saml_relay_statesCreateManyAndReturnArgs} args - Arguments to create many Saml_relay_states.
     * @example
     * // Create many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Saml_relay_states and only return the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends saml_relay_statesCreateManyAndReturnArgs>(args?: SelectSubset<T, saml_relay_statesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Saml_relay_states.
     * @param {saml_relay_statesDeleteArgs} args - Arguments to delete one Saml_relay_states.
     * @example
     * // Delete one Saml_relay_states
     * const Saml_relay_states = await prisma.saml_relay_states.delete({
     *   where: {
     *     // ... filter to delete one Saml_relay_states
     *   }
     * })
     * 
     */
    delete<T extends saml_relay_statesDeleteArgs>(args: SelectSubset<T, saml_relay_statesDeleteArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Saml_relay_states.
     * @param {saml_relay_statesUpdateArgs} args - Arguments to update one Saml_relay_states.
     * @example
     * // Update one Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends saml_relay_statesUpdateArgs>(args: SelectSubset<T, saml_relay_statesUpdateArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Saml_relay_states.
     * @param {saml_relay_statesDeleteManyArgs} args - Arguments to filter Saml_relay_states to delete.
     * @example
     * // Delete a few Saml_relay_states
     * const { count } = await prisma.saml_relay_states.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends saml_relay_statesDeleteManyArgs>(args?: SelectSubset<T, saml_relay_statesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends saml_relay_statesUpdateManyArgs>(args: SelectSubset<T, saml_relay_statesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Saml_relay_states and returns the data updated in the database.
     * @param {saml_relay_statesUpdateManyAndReturnArgs} args - Arguments to update many Saml_relay_states.
     * @example
     * // Update many Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Saml_relay_states and only return the `id`
     * const saml_relay_statesWithIdOnly = await prisma.saml_relay_states.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends saml_relay_statesUpdateManyAndReturnArgs>(args: SelectSubset<T, saml_relay_statesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Saml_relay_states.
     * @param {saml_relay_statesUpsertArgs} args - Arguments to update or create a Saml_relay_states.
     * @example
     * // Update or create a Saml_relay_states
     * const saml_relay_states = await prisma.saml_relay_states.upsert({
     *   create: {
     *     // ... data to create a Saml_relay_states
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Saml_relay_states we want to update
     *   }
     * })
     */
    upsert<T extends saml_relay_statesUpsertArgs>(args: SelectSubset<T, saml_relay_statesUpsertArgs<ExtArgs>>): Prisma__saml_relay_statesClient<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesCountArgs} args - Arguments to filter Saml_relay_states to count.
     * @example
     * // Count the number of Saml_relay_states
     * const count = await prisma.saml_relay_states.count({
     *   where: {
     *     // ... the filter for the Saml_relay_states we want to count
     *   }
     * })
    **/
    count<T extends saml_relay_statesCountArgs>(
      args?: Subset<T, saml_relay_statesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Saml_relay_statesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Saml_relay_statesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Saml_relay_statesAggregateArgs>(args: Subset<T, Saml_relay_statesAggregateArgs>): Prisma.PrismaPromise<GetSaml_relay_statesAggregateType<T>>

    /**
     * Group by Saml_relay_states.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {saml_relay_statesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends saml_relay_statesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: saml_relay_statesGroupByArgs['orderBy'] }
        : { orderBy?: saml_relay_statesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, saml_relay_statesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSaml_relay_statesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the saml_relay_states model
   */
  readonly fields: saml_relay_statesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for saml_relay_states.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__saml_relay_statesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    flow_state<T extends saml_relay_states$flow_stateArgs<ExtArgs> = {}>(args?: Subset<T, saml_relay_states$flow_stateArgs<ExtArgs>>): Prisma__flow_stateClient<$Result.GetResult<Prisma.$flow_statePayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the saml_relay_states model
   */
  interface saml_relay_statesFieldRefs {
    readonly id: FieldRef<"saml_relay_states", 'String'>
    readonly sso_provider_id: FieldRef<"saml_relay_states", 'String'>
    readonly request_id: FieldRef<"saml_relay_states", 'String'>
    readonly for_email: FieldRef<"saml_relay_states", 'String'>
    readonly redirect_to: FieldRef<"saml_relay_states", 'String'>
    readonly created_at: FieldRef<"saml_relay_states", 'DateTime'>
    readonly updated_at: FieldRef<"saml_relay_states", 'DateTime'>
    readonly flow_state_id: FieldRef<"saml_relay_states", 'String'>
  }
    

  // Custom InputTypes
  /**
   * saml_relay_states findUnique
   */
  export type saml_relay_statesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states findUniqueOrThrow
   */
  export type saml_relay_statesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states findFirst
   */
  export type saml_relay_statesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_relay_states.
     */
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * saml_relay_states findFirstOrThrow
   */
  export type saml_relay_statesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of saml_relay_states.
     */
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * saml_relay_states findMany
   */
  export type saml_relay_statesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter, which saml_relay_states to fetch.
     */
    where?: saml_relay_statesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of saml_relay_states to fetch.
     */
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing saml_relay_states.
     */
    cursor?: saml_relay_statesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` saml_relay_states from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` saml_relay_states.
     */
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * saml_relay_states create
   */
  export type saml_relay_statesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The data needed to create a saml_relay_states.
     */
    data: XOR<saml_relay_statesCreateInput, saml_relay_statesUncheckedCreateInput>
  }

  /**
   * saml_relay_states createMany
   */
  export type saml_relay_statesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many saml_relay_states.
     */
    data: saml_relay_statesCreateManyInput | saml_relay_statesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * saml_relay_states createManyAndReturn
   */
  export type saml_relay_statesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * The data used to create many saml_relay_states.
     */
    data: saml_relay_statesCreateManyInput | saml_relay_statesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_relay_states update
   */
  export type saml_relay_statesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The data needed to update a saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateInput, saml_relay_statesUncheckedUpdateInput>
    /**
     * Choose, which saml_relay_states to update.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states updateMany
   */
  export type saml_relay_statesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyInput>
    /**
     * Filter which saml_relay_states to update
     */
    where?: saml_relay_statesWhereInput
    /**
     * Limit how many saml_relay_states to update.
     */
    limit?: number
  }

  /**
   * saml_relay_states updateManyAndReturn
   */
  export type saml_relay_statesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * The data used to update saml_relay_states.
     */
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyInput>
    /**
     * Filter which saml_relay_states to update
     */
    where?: saml_relay_statesWhereInput
    /**
     * Limit how many saml_relay_states to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * saml_relay_states upsert
   */
  export type saml_relay_statesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * The filter to search for the saml_relay_states to update in case it exists.
     */
    where: saml_relay_statesWhereUniqueInput
    /**
     * In case the saml_relay_states found by the `where` argument doesn't exist, create a new saml_relay_states with this data.
     */
    create: XOR<saml_relay_statesCreateInput, saml_relay_statesUncheckedCreateInput>
    /**
     * In case the saml_relay_states was found with the provided `where` argument, update it with this data.
     */
    update: XOR<saml_relay_statesUpdateInput, saml_relay_statesUncheckedUpdateInput>
  }

  /**
   * saml_relay_states delete
   */
  export type saml_relay_statesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    /**
     * Filter which saml_relay_states to delete.
     */
    where: saml_relay_statesWhereUniqueInput
  }

  /**
   * saml_relay_states deleteMany
   */
  export type saml_relay_statesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which saml_relay_states to delete
     */
    where?: saml_relay_statesWhereInput
    /**
     * Limit how many saml_relay_states to delete.
     */
    limit?: number
  }

  /**
   * saml_relay_states.flow_state
   */
  export type saml_relay_states$flow_stateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the flow_state
     */
    select?: flow_stateSelect<ExtArgs> | null
    /**
     * Omit specific fields from the flow_state
     */
    omit?: flow_stateOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: flow_stateInclude<ExtArgs> | null
    where?: flow_stateWhereInput
  }

  /**
   * saml_relay_states without action
   */
  export type saml_relay_statesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
  }


  /**
   * Model schema_migrations
   */

  export type AggregateSchema_migrations = {
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  export type Schema_migrationsMinAggregateOutputType = {
    version: string | null
  }

  export type Schema_migrationsMaxAggregateOutputType = {
    version: string | null
  }

  export type Schema_migrationsCountAggregateOutputType = {
    version: number
    _all: number
  }


  export type Schema_migrationsMinAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsMaxAggregateInputType = {
    version?: true
  }

  export type Schema_migrationsCountAggregateInputType = {
    version?: true
    _all?: true
  }

  export type Schema_migrationsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to aggregate.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned schema_migrations
    **/
    _count?: true | Schema_migrationsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Schema_migrationsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type GetSchema_migrationsAggregateType<T extends Schema_migrationsAggregateArgs> = {
        [P in keyof T & keyof AggregateSchema_migrations]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSchema_migrations[P]>
      : GetScalarType<T[P], AggregateSchema_migrations[P]>
  }




  export type schema_migrationsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: schema_migrationsWhereInput
    orderBy?: schema_migrationsOrderByWithAggregationInput | schema_migrationsOrderByWithAggregationInput[]
    by: Schema_migrationsScalarFieldEnum[] | Schema_migrationsScalarFieldEnum
    having?: schema_migrationsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Schema_migrationsCountAggregateInputType | true
    _min?: Schema_migrationsMinAggregateInputType
    _max?: Schema_migrationsMaxAggregateInputType
  }

  export type Schema_migrationsGroupByOutputType = {
    version: string
    _count: Schema_migrationsCountAggregateOutputType | null
    _min: Schema_migrationsMinAggregateOutputType | null
    _max: Schema_migrationsMaxAggregateOutputType | null
  }

  type GetSchema_migrationsGroupByPayload<T extends schema_migrationsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Schema_migrationsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Schema_migrationsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
            : GetScalarType<T[P], Schema_migrationsGroupByOutputType[P]>
        }
      >
    >


  export type schema_migrationsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    version?: boolean
  }, ExtArgs["result"]["schema_migrations"]>

  export type schema_migrationsSelectScalar = {
    version?: boolean
  }

  export type schema_migrationsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"version", ExtArgs["result"]["schema_migrations"]>

  export type $schema_migrationsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "schema_migrations"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      version: string
    }, ExtArgs["result"]["schema_migrations"]>
    composites: {}
  }

  type schema_migrationsGetPayload<S extends boolean | null | undefined | schema_migrationsDefaultArgs> = $Result.GetResult<Prisma.$schema_migrationsPayload, S>

  type schema_migrationsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<schema_migrationsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Schema_migrationsCountAggregateInputType | true
    }

  export interface schema_migrationsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['schema_migrations'], meta: { name: 'schema_migrations' } }
    /**
     * Find zero or one Schema_migrations that matches the filter.
     * @param {schema_migrationsFindUniqueArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends schema_migrationsFindUniqueArgs>(args: SelectSubset<T, schema_migrationsFindUniqueArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Schema_migrations that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {schema_migrationsFindUniqueOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends schema_migrationsFindUniqueOrThrowArgs>(args: SelectSubset<T, schema_migrationsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends schema_migrationsFindFirstArgs>(args?: SelectSubset<T, schema_migrationsFindFirstArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Schema_migrations that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindFirstOrThrowArgs} args - Arguments to find a Schema_migrations
     * @example
     * // Get one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends schema_migrationsFindFirstOrThrowArgs>(args?: SelectSubset<T, schema_migrationsFindFirstOrThrowArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Schema_migrations that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany()
     * 
     * // Get first 10 Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.findMany({ take: 10 })
     * 
     * // Only select the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.findMany({ select: { version: true } })
     * 
     */
    findMany<T extends schema_migrationsFindManyArgs>(args?: SelectSubset<T, schema_migrationsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Schema_migrations.
     * @param {schema_migrationsCreateArgs} args - Arguments to create a Schema_migrations.
     * @example
     * // Create one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.create({
     *   data: {
     *     // ... data to create a Schema_migrations
     *   }
     * })
     * 
     */
    create<T extends schema_migrationsCreateArgs>(args: SelectSubset<T, schema_migrationsCreateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Schema_migrations.
     * @param {schema_migrationsCreateManyArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends schema_migrationsCreateManyArgs>(args?: SelectSubset<T, schema_migrationsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Schema_migrations and returns the data saved in the database.
     * @param {schema_migrationsCreateManyAndReturnArgs} args - Arguments to create many Schema_migrations.
     * @example
     * // Create many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.createManyAndReturn({
     *   select: { version: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends schema_migrationsCreateManyAndReturnArgs>(args?: SelectSubset<T, schema_migrationsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Schema_migrations.
     * @param {schema_migrationsDeleteArgs} args - Arguments to delete one Schema_migrations.
     * @example
     * // Delete one Schema_migrations
     * const Schema_migrations = await prisma.schema_migrations.delete({
     *   where: {
     *     // ... filter to delete one Schema_migrations
     *   }
     * })
     * 
     */
    delete<T extends schema_migrationsDeleteArgs>(args: SelectSubset<T, schema_migrationsDeleteArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Schema_migrations.
     * @param {schema_migrationsUpdateArgs} args - Arguments to update one Schema_migrations.
     * @example
     * // Update one Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends schema_migrationsUpdateArgs>(args: SelectSubset<T, schema_migrationsUpdateArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Schema_migrations.
     * @param {schema_migrationsDeleteManyArgs} args - Arguments to filter Schema_migrations to delete.
     * @example
     * // Delete a few Schema_migrations
     * const { count } = await prisma.schema_migrations.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends schema_migrationsDeleteManyArgs>(args?: SelectSubset<T, schema_migrationsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends schema_migrationsUpdateManyArgs>(args: SelectSubset<T, schema_migrationsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Schema_migrations and returns the data updated in the database.
     * @param {schema_migrationsUpdateManyAndReturnArgs} args - Arguments to update many Schema_migrations.
     * @example
     * // Update many Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Schema_migrations and only return the `version`
     * const schema_migrationsWithVersionOnly = await prisma.schema_migrations.updateManyAndReturn({
     *   select: { version: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends schema_migrationsUpdateManyAndReturnArgs>(args: SelectSubset<T, schema_migrationsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Schema_migrations.
     * @param {schema_migrationsUpsertArgs} args - Arguments to update or create a Schema_migrations.
     * @example
     * // Update or create a Schema_migrations
     * const schema_migrations = await prisma.schema_migrations.upsert({
     *   create: {
     *     // ... data to create a Schema_migrations
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Schema_migrations we want to update
     *   }
     * })
     */
    upsert<T extends schema_migrationsUpsertArgs>(args: SelectSubset<T, schema_migrationsUpsertArgs<ExtArgs>>): Prisma__schema_migrationsClient<$Result.GetResult<Prisma.$schema_migrationsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsCountArgs} args - Arguments to filter Schema_migrations to count.
     * @example
     * // Count the number of Schema_migrations
     * const count = await prisma.schema_migrations.count({
     *   where: {
     *     // ... the filter for the Schema_migrations we want to count
     *   }
     * })
    **/
    count<T extends schema_migrationsCountArgs>(
      args?: Subset<T, schema_migrationsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Schema_migrationsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Schema_migrationsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Schema_migrationsAggregateArgs>(args: Subset<T, Schema_migrationsAggregateArgs>): Prisma.PrismaPromise<GetSchema_migrationsAggregateType<T>>

    /**
     * Group by Schema_migrations.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {schema_migrationsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends schema_migrationsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: schema_migrationsGroupByArgs['orderBy'] }
        : { orderBy?: schema_migrationsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, schema_migrationsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSchema_migrationsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the schema_migrations model
   */
  readonly fields: schema_migrationsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for schema_migrations.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__schema_migrationsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the schema_migrations model
   */
  interface schema_migrationsFieldRefs {
    readonly version: FieldRef<"schema_migrations", 'String'>
  }
    

  // Custom InputTypes
  /**
   * schema_migrations findUnique
   */
  export type schema_migrationsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findUniqueOrThrow
   */
  export type schema_migrationsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations findFirst
   */
  export type schema_migrationsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findFirstOrThrow
   */
  export type schema_migrationsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of schema_migrations.
     */
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations findMany
   */
  export type schema_migrationsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter, which schema_migrations to fetch.
     */
    where?: schema_migrationsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of schema_migrations to fetch.
     */
    orderBy?: schema_migrationsOrderByWithRelationInput | schema_migrationsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing schema_migrations.
     */
    cursor?: schema_migrationsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` schema_migrations from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` schema_migrations.
     */
    skip?: number
    distinct?: Schema_migrationsScalarFieldEnum | Schema_migrationsScalarFieldEnum[]
  }

  /**
   * schema_migrations create
   */
  export type schema_migrationsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to create a schema_migrations.
     */
    data: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
  }

  /**
   * schema_migrations createMany
   */
  export type schema_migrationsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations createManyAndReturn
   */
  export type schema_migrationsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to create many schema_migrations.
     */
    data: schema_migrationsCreateManyInput | schema_migrationsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * schema_migrations update
   */
  export type schema_migrationsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data needed to update a schema_migrations.
     */
    data: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
    /**
     * Choose, which schema_migrations to update.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations updateMany
   */
  export type schema_migrationsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations updateManyAndReturn
   */
  export type schema_migrationsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The data used to update schema_migrations.
     */
    data: XOR<schema_migrationsUpdateManyMutationInput, schema_migrationsUncheckedUpdateManyInput>
    /**
     * Filter which schema_migrations to update
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to update.
     */
    limit?: number
  }

  /**
   * schema_migrations upsert
   */
  export type schema_migrationsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * The filter to search for the schema_migrations to update in case it exists.
     */
    where: schema_migrationsWhereUniqueInput
    /**
     * In case the schema_migrations found by the `where` argument doesn't exist, create a new schema_migrations with this data.
     */
    create: XOR<schema_migrationsCreateInput, schema_migrationsUncheckedCreateInput>
    /**
     * In case the schema_migrations was found with the provided `where` argument, update it with this data.
     */
    update: XOR<schema_migrationsUpdateInput, schema_migrationsUncheckedUpdateInput>
  }

  /**
   * schema_migrations delete
   */
  export type schema_migrationsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
    /**
     * Filter which schema_migrations to delete.
     */
    where: schema_migrationsWhereUniqueInput
  }

  /**
   * schema_migrations deleteMany
   */
  export type schema_migrationsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which schema_migrations to delete
     */
    where?: schema_migrationsWhereInput
    /**
     * Limit how many schema_migrations to delete.
     */
    limit?: number
  }

  /**
   * schema_migrations without action
   */
  export type schema_migrationsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the schema_migrations
     */
    select?: schema_migrationsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the schema_migrations
     */
    omit?: schema_migrationsOmit<ExtArgs> | null
  }


  /**
   * Model sessions
   */

  export type AggregateSessions = {
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  export type SessionsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
  }

  export type SessionsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
  }

  export type SessionsCountAggregateOutputType = {
    id: number
    user_id: number
    created_at: number
    updated_at: number
    factor_id: number
    aal: number
    not_after: number
    refreshed_at: number
    user_agent: number
    ip: number
    tag: number
    _all: number
  }


  export type SessionsMinAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
  }

  export type SessionsMaxAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
  }

  export type SessionsCountAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    updated_at?: true
    factor_id?: true
    aal?: true
    not_after?: true
    refreshed_at?: true
    user_agent?: true
    ip?: true
    tag?: true
    _all?: true
  }

  export type SessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to aggregate.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sessions
    **/
    _count?: true | SessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SessionsMaxAggregateInputType
  }

  export type GetSessionsAggregateType<T extends SessionsAggregateArgs> = {
        [P in keyof T & keyof AggregateSessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSessions[P]>
      : GetScalarType<T[P], AggregateSessions[P]>
  }




  export type sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithAggregationInput | sessionsOrderByWithAggregationInput[]
    by: SessionsScalarFieldEnum[] | SessionsScalarFieldEnum
    having?: sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SessionsCountAggregateInputType | true
    _min?: SessionsMinAggregateInputType
    _max?: SessionsMaxAggregateInputType
  }

  export type SessionsGroupByOutputType = {
    id: string
    user_id: string
    created_at: Date | null
    updated_at: Date | null
    factor_id: string | null
    aal: $Enums.aal_level | null
    not_after: Date | null
    refreshed_at: Date | null
    user_agent: string | null
    ip: string | null
    tag: string | null
    _count: SessionsCountAggregateOutputType | null
    _min: SessionsMinAggregateOutputType | null
    _max: SessionsMaxAggregateOutputType | null
  }

  type GetSessionsGroupByPayload<T extends sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SessionsGroupByOutputType[P]>
            : GetScalarType<T[P], SessionsGroupByOutputType[P]>
        }
      >
    >


  export type sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    mfa_amr_claims?: boolean | sessions$mfa_amr_claimsArgs<ExtArgs>
    refresh_tokens?: boolean | sessions$refresh_tokensArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | SessionsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
    users?: boolean | usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sessions"]>

  export type sessionsSelectScalar = {
    id?: boolean
    user_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    factor_id?: boolean
    aal?: boolean
    not_after?: boolean
    refreshed_at?: boolean
    user_agent?: boolean
    ip?: boolean
    tag?: boolean
  }

  export type sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "user_id" | "created_at" | "updated_at" | "factor_id" | "aal" | "not_after" | "refreshed_at" | "user_agent" | "ip" | "tag", ExtArgs["result"]["sessions"]>
  export type sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    mfa_amr_claims?: boolean | sessions$mfa_amr_claimsArgs<ExtArgs>
    refresh_tokens?: boolean | sessions$refresh_tokensArgs<ExtArgs>
    users?: boolean | usersDefaultArgs<ExtArgs>
    _count?: boolean | SessionsCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }
  export type sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | usersDefaultArgs<ExtArgs>
  }

  export type $sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sessions"
    objects: {
      mfa_amr_claims: Prisma.$mfa_amr_claimsPayload<ExtArgs>[]
      refresh_tokens: Prisma.$refresh_tokensPayload<ExtArgs>[]
      users: Prisma.$usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      created_at: Date | null
      updated_at: Date | null
      factor_id: string | null
      aal: $Enums.aal_level | null
      not_after: Date | null
      refreshed_at: Date | null
      user_agent: string | null
      ip: string | null
      tag: string | null
    }, ExtArgs["result"]["sessions"]>
    composites: {}
  }

  type sessionsGetPayload<S extends boolean | null | undefined | sessionsDefaultArgs> = $Result.GetResult<Prisma.$sessionsPayload, S>

  type sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: SessionsCountAggregateInputType | true
    }

  export interface sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sessions'], meta: { name: 'sessions' } }
    /**
     * Find zero or one Sessions that matches the filter.
     * @param {sessionsFindUniqueArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sessionsFindUniqueArgs>(args: SelectSubset<T, sessionsFindUniqueArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sessionsFindUniqueOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sessionsFindFirstArgs>(args?: SelectSubset<T, sessionsFindFirstArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindFirstOrThrowArgs} args - Arguments to find a Sessions
     * @example
     * // Get one Sessions
     * const sessions = await prisma.sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sessions
     * const sessions = await prisma.sessions.findMany()
     * 
     * // Get first 10 Sessions
     * const sessions = await prisma.sessions.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sessionsWithIdOnly = await prisma.sessions.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sessionsFindManyArgs>(args?: SelectSubset<T, sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sessions.
     * @param {sessionsCreateArgs} args - Arguments to create a Sessions.
     * @example
     * // Create one Sessions
     * const Sessions = await prisma.sessions.create({
     *   data: {
     *     // ... data to create a Sessions
     *   }
     * })
     * 
     */
    create<T extends sessionsCreateArgs>(args: SelectSubset<T, sessionsCreateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sessions.
     * @param {sessionsCreateManyArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sessionsCreateManyArgs>(args?: SelectSubset<T, sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sessions and returns the data saved in the database.
     * @param {sessionsCreateManyAndReturnArgs} args - Arguments to create many Sessions.
     * @example
     * // Create many Sessions
     * const sessions = await prisma.sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sessions and only return the `id`
     * const sessionsWithIdOnly = await prisma.sessions.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sessions.
     * @param {sessionsDeleteArgs} args - Arguments to delete one Sessions.
     * @example
     * // Delete one Sessions
     * const Sessions = await prisma.sessions.delete({
     *   where: {
     *     // ... filter to delete one Sessions
     *   }
     * })
     * 
     */
    delete<T extends sessionsDeleteArgs>(args: SelectSubset<T, sessionsDeleteArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sessions.
     * @param {sessionsUpdateArgs} args - Arguments to update one Sessions.
     * @example
     * // Update one Sessions
     * const sessions = await prisma.sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sessionsUpdateArgs>(args: SelectSubset<T, sessionsUpdateArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sessions.
     * @param {sessionsDeleteManyArgs} args - Arguments to filter Sessions to delete.
     * @example
     * // Delete a few Sessions
     * const { count } = await prisma.sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sessionsDeleteManyArgs>(args?: SelectSubset<T, sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sessionsUpdateManyArgs>(args: SelectSubset<T, sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sessions and returns the data updated in the database.
     * @param {sessionsUpdateManyAndReturnArgs} args - Arguments to update many Sessions.
     * @example
     * // Update many Sessions
     * const sessions = await prisma.sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sessions and only return the `id`
     * const sessionsWithIdOnly = await prisma.sessions.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sessions.
     * @param {sessionsUpsertArgs} args - Arguments to update or create a Sessions.
     * @example
     * // Update or create a Sessions
     * const sessions = await prisma.sessions.upsert({
     *   create: {
     *     // ... data to create a Sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sessions we want to update
     *   }
     * })
     */
    upsert<T extends sessionsUpsertArgs>(args: SelectSubset<T, sessionsUpsertArgs<ExtArgs>>): Prisma__sessionsClient<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsCountArgs} args - Arguments to filter Sessions to count.
     * @example
     * // Count the number of Sessions
     * const count = await prisma.sessions.count({
     *   where: {
     *     // ... the filter for the Sessions we want to count
     *   }
     * })
    **/
    count<T extends sessionsCountArgs>(
      args?: Subset<T, sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SessionsAggregateArgs>(args: Subset<T, SessionsAggregateArgs>): Prisma.PrismaPromise<GetSessionsAggregateType<T>>

    /**
     * Group by Sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sessionsGroupByArgs['orderBy'] }
        : { orderBy?: sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sessions model
   */
  readonly fields: sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    mfa_amr_claims<T extends sessions$mfa_amr_claimsArgs<ExtArgs> = {}>(args?: Subset<T, sessions$mfa_amr_claimsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_amr_claimsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    refresh_tokens<T extends sessions$refresh_tokensArgs<ExtArgs> = {}>(args?: Subset<T, sessions$refresh_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$refresh_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, usersDefaultArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sessions model
   */
  interface sessionsFieldRefs {
    readonly id: FieldRef<"sessions", 'String'>
    readonly user_id: FieldRef<"sessions", 'String'>
    readonly created_at: FieldRef<"sessions", 'DateTime'>
    readonly updated_at: FieldRef<"sessions", 'DateTime'>
    readonly factor_id: FieldRef<"sessions", 'String'>
    readonly aal: FieldRef<"sessions", 'aal_level'>
    readonly not_after: FieldRef<"sessions", 'DateTime'>
    readonly refreshed_at: FieldRef<"sessions", 'DateTime'>
    readonly user_agent: FieldRef<"sessions", 'String'>
    readonly ip: FieldRef<"sessions", 'String'>
    readonly tag: FieldRef<"sessions", 'String'>
  }
    

  // Custom InputTypes
  /**
   * sessions findUnique
   */
  export type sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findUniqueOrThrow
   */
  export type sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions findFirst
   */
  export type sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findFirstOrThrow
   */
  export type sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sessions.
     */
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions findMany
   */
  export type sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter, which sessions to fetch.
     */
    where?: sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sessions to fetch.
     */
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sessions.
     */
    cursor?: sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sessions.
     */
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * sessions create
   */
  export type sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a sessions.
     */
    data: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
  }

  /**
   * sessions createMany
   */
  export type sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sessions createManyAndReturn
   */
  export type sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many sessions.
     */
    data: sessionsCreateManyInput | sessionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sessions update
   */
  export type sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a sessions.
     */
    data: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
    /**
     * Choose, which sessions to update.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions updateMany
   */
  export type sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
  }

  /**
   * sessions updateManyAndReturn
   */
  export type sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * The data used to update sessions.
     */
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyInput>
    /**
     * Filter which sessions to update
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * sessions upsert
   */
  export type sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the sessions to update in case it exists.
     */
    where: sessionsWhereUniqueInput
    /**
     * In case the sessions found by the `where` argument doesn't exist, create a new sessions with this data.
     */
    create: XOR<sessionsCreateInput, sessionsUncheckedCreateInput>
    /**
     * In case the sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sessionsUpdateInput, sessionsUncheckedUpdateInput>
  }

  /**
   * sessions delete
   */
  export type sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    /**
     * Filter which sessions to delete.
     */
    where: sessionsWhereUniqueInput
  }

  /**
   * sessions deleteMany
   */
  export type sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sessions to delete
     */
    where?: sessionsWhereInput
    /**
     * Limit how many sessions to delete.
     */
    limit?: number
  }

  /**
   * sessions.mfa_amr_claims
   */
  export type sessions$mfa_amr_claimsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_amr_claims
     */
    select?: mfa_amr_claimsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_amr_claims
     */
    omit?: mfa_amr_claimsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_amr_claimsInclude<ExtArgs> | null
    where?: mfa_amr_claimsWhereInput
    orderBy?: mfa_amr_claimsOrderByWithRelationInput | mfa_amr_claimsOrderByWithRelationInput[]
    cursor?: mfa_amr_claimsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_amr_claimsScalarFieldEnum | Mfa_amr_claimsScalarFieldEnum[]
  }

  /**
   * sessions.refresh_tokens
   */
  export type sessions$refresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the refresh_tokens
     */
    select?: refresh_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the refresh_tokens
     */
    omit?: refresh_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: refresh_tokensInclude<ExtArgs> | null
    where?: refresh_tokensWhereInput
    orderBy?: refresh_tokensOrderByWithRelationInput | refresh_tokensOrderByWithRelationInput[]
    cursor?: refresh_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Refresh_tokensScalarFieldEnum | Refresh_tokensScalarFieldEnum[]
  }

  /**
   * sessions without action
   */
  export type sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
  }


  /**
   * Model sso_domains
   */

  export type AggregateSso_domains = {
    _count: Sso_domainsCountAggregateOutputType | null
    _min: Sso_domainsMinAggregateOutputType | null
    _max: Sso_domainsMaxAggregateOutputType | null
  }

  export type Sso_domainsMinAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    domain: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_domainsMaxAggregateOutputType = {
    id: string | null
    sso_provider_id: string | null
    domain: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_domainsCountAggregateOutputType = {
    id: number
    sso_provider_id: number
    domain: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sso_domainsMinAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_domainsMaxAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_domainsCountAggregateInputType = {
    id?: true
    sso_provider_id?: true
    domain?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sso_domainsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_domains to aggregate.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_domains
    **/
    _count?: true | Sso_domainsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_domainsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_domainsMaxAggregateInputType
  }

  export type GetSso_domainsAggregateType<T extends Sso_domainsAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_domains]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_domains[P]>
      : GetScalarType<T[P], AggregateSso_domains[P]>
  }




  export type sso_domainsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_domainsWhereInput
    orderBy?: sso_domainsOrderByWithAggregationInput | sso_domainsOrderByWithAggregationInput[]
    by: Sso_domainsScalarFieldEnum[] | Sso_domainsScalarFieldEnum
    having?: sso_domainsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_domainsCountAggregateInputType | true
    _min?: Sso_domainsMinAggregateInputType
    _max?: Sso_domainsMaxAggregateInputType
  }

  export type Sso_domainsGroupByOutputType = {
    id: string
    sso_provider_id: string
    domain: string
    created_at: Date | null
    updated_at: Date | null
    _count: Sso_domainsCountAggregateOutputType | null
    _min: Sso_domainsMinAggregateOutputType | null
    _max: Sso_domainsMaxAggregateOutputType | null
  }

  type GetSso_domainsGroupByPayload<T extends sso_domainsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_domainsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_domainsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_domainsGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_domainsGroupByOutputType[P]>
        }
      >
    >


  export type sso_domainsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_domains"]>

  export type sso_domainsSelectScalar = {
    id?: boolean
    sso_provider_id?: boolean
    domain?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sso_domainsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "sso_provider_id" | "domain" | "created_at" | "updated_at", ExtArgs["result"]["sso_domains"]>
  export type sso_domainsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type sso_domainsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }
  export type sso_domainsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sso_providers?: boolean | sso_providersDefaultArgs<ExtArgs>
  }

  export type $sso_domainsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_domains"
    objects: {
      sso_providers: Prisma.$sso_providersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sso_provider_id: string
      domain: string
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["sso_domains"]>
    composites: {}
  }

  type sso_domainsGetPayload<S extends boolean | null | undefined | sso_domainsDefaultArgs> = $Result.GetResult<Prisma.$sso_domainsPayload, S>

  type sso_domainsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sso_domainsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sso_domainsCountAggregateInputType | true
    }

  export interface sso_domainsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_domains'], meta: { name: 'sso_domains' } }
    /**
     * Find zero or one Sso_domains that matches the filter.
     * @param {sso_domainsFindUniqueArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sso_domainsFindUniqueArgs>(args: SelectSubset<T, sso_domainsFindUniqueArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sso_domains that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sso_domainsFindUniqueOrThrowArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sso_domainsFindUniqueOrThrowArgs>(args: SelectSubset<T, sso_domainsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_domains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindFirstArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sso_domainsFindFirstArgs>(args?: SelectSubset<T, sso_domainsFindFirstArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_domains that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindFirstOrThrowArgs} args - Arguments to find a Sso_domains
     * @example
     * // Get one Sso_domains
     * const sso_domains = await prisma.sso_domains.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sso_domainsFindFirstOrThrowArgs>(args?: SelectSubset<T, sso_domainsFindFirstOrThrowArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sso_domains that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_domains
     * const sso_domains = await prisma.sso_domains.findMany()
     * 
     * // Get first 10 Sso_domains
     * const sso_domains = await prisma.sso_domains.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sso_domainsFindManyArgs>(args?: SelectSubset<T, sso_domainsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sso_domains.
     * @param {sso_domainsCreateArgs} args - Arguments to create a Sso_domains.
     * @example
     * // Create one Sso_domains
     * const Sso_domains = await prisma.sso_domains.create({
     *   data: {
     *     // ... data to create a Sso_domains
     *   }
     * })
     * 
     */
    create<T extends sso_domainsCreateArgs>(args: SelectSubset<T, sso_domainsCreateArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sso_domains.
     * @param {sso_domainsCreateManyArgs} args - Arguments to create many Sso_domains.
     * @example
     * // Create many Sso_domains
     * const sso_domains = await prisma.sso_domains.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sso_domainsCreateManyArgs>(args?: SelectSubset<T, sso_domainsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sso_domains and returns the data saved in the database.
     * @param {sso_domainsCreateManyAndReturnArgs} args - Arguments to create many Sso_domains.
     * @example
     * // Create many Sso_domains
     * const sso_domains = await prisma.sso_domains.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sso_domains and only return the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sso_domainsCreateManyAndReturnArgs>(args?: SelectSubset<T, sso_domainsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sso_domains.
     * @param {sso_domainsDeleteArgs} args - Arguments to delete one Sso_domains.
     * @example
     * // Delete one Sso_domains
     * const Sso_domains = await prisma.sso_domains.delete({
     *   where: {
     *     // ... filter to delete one Sso_domains
     *   }
     * })
     * 
     */
    delete<T extends sso_domainsDeleteArgs>(args: SelectSubset<T, sso_domainsDeleteArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sso_domains.
     * @param {sso_domainsUpdateArgs} args - Arguments to update one Sso_domains.
     * @example
     * // Update one Sso_domains
     * const sso_domains = await prisma.sso_domains.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sso_domainsUpdateArgs>(args: SelectSubset<T, sso_domainsUpdateArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sso_domains.
     * @param {sso_domainsDeleteManyArgs} args - Arguments to filter Sso_domains to delete.
     * @example
     * // Delete a few Sso_domains
     * const { count } = await prisma.sso_domains.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sso_domainsDeleteManyArgs>(args?: SelectSubset<T, sso_domainsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_domains
     * const sso_domains = await prisma.sso_domains.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sso_domainsUpdateManyArgs>(args: SelectSubset<T, sso_domainsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_domains and returns the data updated in the database.
     * @param {sso_domainsUpdateManyAndReturnArgs} args - Arguments to update many Sso_domains.
     * @example
     * // Update many Sso_domains
     * const sso_domains = await prisma.sso_domains.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sso_domains and only return the `id`
     * const sso_domainsWithIdOnly = await prisma.sso_domains.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sso_domainsUpdateManyAndReturnArgs>(args: SelectSubset<T, sso_domainsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sso_domains.
     * @param {sso_domainsUpsertArgs} args - Arguments to update or create a Sso_domains.
     * @example
     * // Update or create a Sso_domains
     * const sso_domains = await prisma.sso_domains.upsert({
     *   create: {
     *     // ... data to create a Sso_domains
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_domains we want to update
     *   }
     * })
     */
    upsert<T extends sso_domainsUpsertArgs>(args: SelectSubset<T, sso_domainsUpsertArgs<ExtArgs>>): Prisma__sso_domainsClient<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsCountArgs} args - Arguments to filter Sso_domains to count.
     * @example
     * // Count the number of Sso_domains
     * const count = await prisma.sso_domains.count({
     *   where: {
     *     // ... the filter for the Sso_domains we want to count
     *   }
     * })
    **/
    count<T extends sso_domainsCountArgs>(
      args?: Subset<T, sso_domainsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_domainsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_domainsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_domainsAggregateArgs>(args: Subset<T, Sso_domainsAggregateArgs>): Prisma.PrismaPromise<GetSso_domainsAggregateType<T>>

    /**
     * Group by Sso_domains.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_domainsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_domainsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_domainsGroupByArgs['orderBy'] }
        : { orderBy?: sso_domainsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_domainsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_domainsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_domains model
   */
  readonly fields: sso_domainsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_domains.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_domainsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sso_providers<T extends sso_providersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, sso_providersDefaultArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sso_domains model
   */
  interface sso_domainsFieldRefs {
    readonly id: FieldRef<"sso_domains", 'String'>
    readonly sso_provider_id: FieldRef<"sso_domains", 'String'>
    readonly domain: FieldRef<"sso_domains", 'String'>
    readonly created_at: FieldRef<"sso_domains", 'DateTime'>
    readonly updated_at: FieldRef<"sso_domains", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sso_domains findUnique
   */
  export type sso_domainsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains findUniqueOrThrow
   */
  export type sso_domainsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains findFirst
   */
  export type sso_domainsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_domains.
     */
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_domains findFirstOrThrow
   */
  export type sso_domainsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_domains.
     */
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_domains findMany
   */
  export type sso_domainsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter, which sso_domains to fetch.
     */
    where?: sso_domainsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_domains to fetch.
     */
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_domains.
     */
    cursor?: sso_domainsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_domains from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_domains.
     */
    skip?: number
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_domains create
   */
  export type sso_domainsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_domains.
     */
    data: XOR<sso_domainsCreateInput, sso_domainsUncheckedCreateInput>
  }

  /**
   * sso_domains createMany
   */
  export type sso_domainsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_domains.
     */
    data: sso_domainsCreateManyInput | sso_domainsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_domains createManyAndReturn
   */
  export type sso_domainsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * The data used to create many sso_domains.
     */
    data: sso_domainsCreateManyInput | sso_domainsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * sso_domains update
   */
  export type sso_domainsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_domains.
     */
    data: XOR<sso_domainsUpdateInput, sso_domainsUncheckedUpdateInput>
    /**
     * Choose, which sso_domains to update.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains updateMany
   */
  export type sso_domainsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_domains.
     */
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyInput>
    /**
     * Filter which sso_domains to update
     */
    where?: sso_domainsWhereInput
    /**
     * Limit how many sso_domains to update.
     */
    limit?: number
  }

  /**
   * sso_domains updateManyAndReturn
   */
  export type sso_domainsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * The data used to update sso_domains.
     */
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyInput>
    /**
     * Filter which sso_domains to update
     */
    where?: sso_domainsWhereInput
    /**
     * Limit how many sso_domains to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * sso_domains upsert
   */
  export type sso_domainsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_domains to update in case it exists.
     */
    where: sso_domainsWhereUniqueInput
    /**
     * In case the sso_domains found by the `where` argument doesn't exist, create a new sso_domains with this data.
     */
    create: XOR<sso_domainsCreateInput, sso_domainsUncheckedCreateInput>
    /**
     * In case the sso_domains was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_domainsUpdateInput, sso_domainsUncheckedUpdateInput>
  }

  /**
   * sso_domains delete
   */
  export type sso_domainsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    /**
     * Filter which sso_domains to delete.
     */
    where: sso_domainsWhereUniqueInput
  }

  /**
   * sso_domains deleteMany
   */
  export type sso_domainsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_domains to delete
     */
    where?: sso_domainsWhereInput
    /**
     * Limit how many sso_domains to delete.
     */
    limit?: number
  }

  /**
   * sso_domains without action
   */
  export type sso_domainsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
  }


  /**
   * Model sso_providers
   */

  export type AggregateSso_providers = {
    _count: Sso_providersCountAggregateOutputType | null
    _min: Sso_providersMinAggregateOutputType | null
    _max: Sso_providersMaxAggregateOutputType | null
  }

  export type Sso_providersMinAggregateOutputType = {
    id: string | null
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_providersMaxAggregateOutputType = {
    id: string | null
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type Sso_providersCountAggregateOutputType = {
    id: number
    resource_id: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type Sso_providersMinAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_providersMaxAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
  }

  export type Sso_providersCountAggregateInputType = {
    id?: true
    resource_id?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type Sso_providersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_providers to aggregate.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned sso_providers
    **/
    _count?: true | Sso_providersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Sso_providersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Sso_providersMaxAggregateInputType
  }

  export type GetSso_providersAggregateType<T extends Sso_providersAggregateArgs> = {
        [P in keyof T & keyof AggregateSso_providers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSso_providers[P]>
      : GetScalarType<T[P], AggregateSso_providers[P]>
  }




  export type sso_providersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: sso_providersWhereInput
    orderBy?: sso_providersOrderByWithAggregationInput | sso_providersOrderByWithAggregationInput[]
    by: Sso_providersScalarFieldEnum[] | Sso_providersScalarFieldEnum
    having?: sso_providersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Sso_providersCountAggregateInputType | true
    _min?: Sso_providersMinAggregateInputType
    _max?: Sso_providersMaxAggregateInputType
  }

  export type Sso_providersGroupByOutputType = {
    id: string
    resource_id: string | null
    created_at: Date | null
    updated_at: Date | null
    _count: Sso_providersCountAggregateOutputType | null
    _min: Sso_providersMinAggregateOutputType | null
    _max: Sso_providersMaxAggregateOutputType | null
  }

  type GetSso_providersGroupByPayload<T extends sso_providersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Sso_providersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Sso_providersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Sso_providersGroupByOutputType[P]>
            : GetScalarType<T[P], Sso_providersGroupByOutputType[P]>
        }
      >
    >


  export type sso_providersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
    saml_providers?: boolean | sso_providers$saml_providersArgs<ExtArgs>
    saml_relay_states?: boolean | sso_providers$saml_relay_statesArgs<ExtArgs>
    sso_domains?: boolean | sso_providers$sso_domainsArgs<ExtArgs>
    _count?: boolean | Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }, ExtArgs["result"]["sso_providers"]>

  export type sso_providersSelectScalar = {
    id?: boolean
    resource_id?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type sso_providersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"id" | "resource_id" | "created_at" | "updated_at", ExtArgs["result"]["sso_providers"]>
  export type sso_providersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    saml_providers?: boolean | sso_providers$saml_providersArgs<ExtArgs>
    saml_relay_states?: boolean | sso_providers$saml_relay_statesArgs<ExtArgs>
    sso_domains?: boolean | sso_providers$sso_domainsArgs<ExtArgs>
    _count?: boolean | Sso_providersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type sso_providersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type sso_providersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $sso_providersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "sso_providers"
    objects: {
      saml_providers: Prisma.$saml_providersPayload<ExtArgs>[]
      saml_relay_states: Prisma.$saml_relay_statesPayload<ExtArgs>[]
      sso_domains: Prisma.$sso_domainsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      resource_id: string | null
      created_at: Date | null
      updated_at: Date | null
    }, ExtArgs["result"]["sso_providers"]>
    composites: {}
  }

  type sso_providersGetPayload<S extends boolean | null | undefined | sso_providersDefaultArgs> = $Result.GetResult<Prisma.$sso_providersPayload, S>

  type sso_providersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<sso_providersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Sso_providersCountAggregateInputType | true
    }

  export interface sso_providersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['sso_providers'], meta: { name: 'sso_providers' } }
    /**
     * Find zero or one Sso_providers that matches the filter.
     * @param {sso_providersFindUniqueArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends sso_providersFindUniqueArgs>(args: SelectSubset<T, sso_providersFindUniqueArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Sso_providers that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {sso_providersFindUniqueOrThrowArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends sso_providersFindUniqueOrThrowArgs>(args: SelectSubset<T, sso_providersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindFirstArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends sso_providersFindFirstArgs>(args?: SelectSubset<T, sso_providersFindFirstArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Sso_providers that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindFirstOrThrowArgs} args - Arguments to find a Sso_providers
     * @example
     * // Get one Sso_providers
     * const sso_providers = await prisma.sso_providers.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends sso_providersFindFirstOrThrowArgs>(args?: SelectSubset<T, sso_providersFindFirstOrThrowArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Sso_providers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sso_providers
     * const sso_providers = await prisma.sso_providers.findMany()
     * 
     * // Get first 10 Sso_providers
     * const sso_providers = await prisma.sso_providers.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends sso_providersFindManyArgs>(args?: SelectSubset<T, sso_providersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Sso_providers.
     * @param {sso_providersCreateArgs} args - Arguments to create a Sso_providers.
     * @example
     * // Create one Sso_providers
     * const Sso_providers = await prisma.sso_providers.create({
     *   data: {
     *     // ... data to create a Sso_providers
     *   }
     * })
     * 
     */
    create<T extends sso_providersCreateArgs>(args: SelectSubset<T, sso_providersCreateArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Sso_providers.
     * @param {sso_providersCreateManyArgs} args - Arguments to create many Sso_providers.
     * @example
     * // Create many Sso_providers
     * const sso_providers = await prisma.sso_providers.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends sso_providersCreateManyArgs>(args?: SelectSubset<T, sso_providersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Sso_providers and returns the data saved in the database.
     * @param {sso_providersCreateManyAndReturnArgs} args - Arguments to create many Sso_providers.
     * @example
     * // Create many Sso_providers
     * const sso_providers = await prisma.sso_providers.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Sso_providers and only return the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.createManyAndReturn({
     *   select: { id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends sso_providersCreateManyAndReturnArgs>(args?: SelectSubset<T, sso_providersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Sso_providers.
     * @param {sso_providersDeleteArgs} args - Arguments to delete one Sso_providers.
     * @example
     * // Delete one Sso_providers
     * const Sso_providers = await prisma.sso_providers.delete({
     *   where: {
     *     // ... filter to delete one Sso_providers
     *   }
     * })
     * 
     */
    delete<T extends sso_providersDeleteArgs>(args: SelectSubset<T, sso_providersDeleteArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Sso_providers.
     * @param {sso_providersUpdateArgs} args - Arguments to update one Sso_providers.
     * @example
     * // Update one Sso_providers
     * const sso_providers = await prisma.sso_providers.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends sso_providersUpdateArgs>(args: SelectSubset<T, sso_providersUpdateArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Sso_providers.
     * @param {sso_providersDeleteManyArgs} args - Arguments to filter Sso_providers to delete.
     * @example
     * // Delete a few Sso_providers
     * const { count } = await prisma.sso_providers.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends sso_providersDeleteManyArgs>(args?: SelectSubset<T, sso_providersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sso_providers
     * const sso_providers = await prisma.sso_providers.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends sso_providersUpdateManyArgs>(args: SelectSubset<T, sso_providersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sso_providers and returns the data updated in the database.
     * @param {sso_providersUpdateManyAndReturnArgs} args - Arguments to update many Sso_providers.
     * @example
     * // Update many Sso_providers
     * const sso_providers = await prisma.sso_providers.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Sso_providers and only return the `id`
     * const sso_providersWithIdOnly = await prisma.sso_providers.updateManyAndReturn({
     *   select: { id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends sso_providersUpdateManyAndReturnArgs>(args: SelectSubset<T, sso_providersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Sso_providers.
     * @param {sso_providersUpsertArgs} args - Arguments to update or create a Sso_providers.
     * @example
     * // Update or create a Sso_providers
     * const sso_providers = await prisma.sso_providers.upsert({
     *   create: {
     *     // ... data to create a Sso_providers
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Sso_providers we want to update
     *   }
     * })
     */
    upsert<T extends sso_providersUpsertArgs>(args: SelectSubset<T, sso_providersUpsertArgs<ExtArgs>>): Prisma__sso_providersClient<$Result.GetResult<Prisma.$sso_providersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersCountArgs} args - Arguments to filter Sso_providers to count.
     * @example
     * // Count the number of Sso_providers
     * const count = await prisma.sso_providers.count({
     *   where: {
     *     // ... the filter for the Sso_providers we want to count
     *   }
     * })
    **/
    count<T extends sso_providersCountArgs>(
      args?: Subset<T, sso_providersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Sso_providersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Sso_providersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Sso_providersAggregateArgs>(args: Subset<T, Sso_providersAggregateArgs>): Prisma.PrismaPromise<GetSso_providersAggregateType<T>>

    /**
     * Group by Sso_providers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {sso_providersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends sso_providersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: sso_providersGroupByArgs['orderBy'] }
        : { orderBy?: sso_providersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, sso_providersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSso_providersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the sso_providers model
   */
  readonly fields: sso_providersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for sso_providers.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__sso_providersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    saml_providers<T extends sso_providers$saml_providersArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$saml_providersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_providersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    saml_relay_states<T extends sso_providers$saml_relay_statesArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$saml_relay_statesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$saml_relay_statesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sso_domains<T extends sso_providers$sso_domainsArgs<ExtArgs> = {}>(args?: Subset<T, sso_providers$sso_domainsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sso_domainsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the sso_providers model
   */
  interface sso_providersFieldRefs {
    readonly id: FieldRef<"sso_providers", 'String'>
    readonly resource_id: FieldRef<"sso_providers", 'String'>
    readonly created_at: FieldRef<"sso_providers", 'DateTime'>
    readonly updated_at: FieldRef<"sso_providers", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * sso_providers findUnique
   */
  export type sso_providersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers findUniqueOrThrow
   */
  export type sso_providersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers findFirst
   */
  export type sso_providersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_providers.
     */
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }

  /**
   * sso_providers findFirstOrThrow
   */
  export type sso_providersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of sso_providers.
     */
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }

  /**
   * sso_providers findMany
   */
  export type sso_providersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter, which sso_providers to fetch.
     */
    where?: sso_providersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of sso_providers to fetch.
     */
    orderBy?: sso_providersOrderByWithRelationInput | sso_providersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing sso_providers.
     */
    cursor?: sso_providersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` sso_providers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` sso_providers.
     */
    skip?: number
    distinct?: Sso_providersScalarFieldEnum | Sso_providersScalarFieldEnum[]
  }

  /**
   * sso_providers create
   */
  export type sso_providersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The data needed to create a sso_providers.
     */
    data: XOR<sso_providersCreateInput, sso_providersUncheckedCreateInput>
  }

  /**
   * sso_providers createMany
   */
  export type sso_providersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many sso_providers.
     */
    data: sso_providersCreateManyInput | sso_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_providers createManyAndReturn
   */
  export type sso_providersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * The data used to create many sso_providers.
     */
    data: sso_providersCreateManyInput | sso_providersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * sso_providers update
   */
  export type sso_providersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The data needed to update a sso_providers.
     */
    data: XOR<sso_providersUpdateInput, sso_providersUncheckedUpdateInput>
    /**
     * Choose, which sso_providers to update.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers updateMany
   */
  export type sso_providersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update sso_providers.
     */
    data: XOR<sso_providersUpdateManyMutationInput, sso_providersUncheckedUpdateManyInput>
    /**
     * Filter which sso_providers to update
     */
    where?: sso_providersWhereInput
    /**
     * Limit how many sso_providers to update.
     */
    limit?: number
  }

  /**
   * sso_providers updateManyAndReturn
   */
  export type sso_providersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * The data used to update sso_providers.
     */
    data: XOR<sso_providersUpdateManyMutationInput, sso_providersUncheckedUpdateManyInput>
    /**
     * Filter which sso_providers to update
     */
    where?: sso_providersWhereInput
    /**
     * Limit how many sso_providers to update.
     */
    limit?: number
  }

  /**
   * sso_providers upsert
   */
  export type sso_providersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * The filter to search for the sso_providers to update in case it exists.
     */
    where: sso_providersWhereUniqueInput
    /**
     * In case the sso_providers found by the `where` argument doesn't exist, create a new sso_providers with this data.
     */
    create: XOR<sso_providersCreateInput, sso_providersUncheckedCreateInput>
    /**
     * In case the sso_providers was found with the provided `where` argument, update it with this data.
     */
    update: XOR<sso_providersUpdateInput, sso_providersUncheckedUpdateInput>
  }

  /**
   * sso_providers delete
   */
  export type sso_providersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
    /**
     * Filter which sso_providers to delete.
     */
    where: sso_providersWhereUniqueInput
  }

  /**
   * sso_providers deleteMany
   */
  export type sso_providersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which sso_providers to delete
     */
    where?: sso_providersWhereInput
    /**
     * Limit how many sso_providers to delete.
     */
    limit?: number
  }

  /**
   * sso_providers.saml_providers
   */
  export type sso_providers$saml_providersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_providers
     */
    select?: saml_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_providers
     */
    omit?: saml_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_providersInclude<ExtArgs> | null
    where?: saml_providersWhereInput
    orderBy?: saml_providersOrderByWithRelationInput | saml_providersOrderByWithRelationInput[]
    cursor?: saml_providersWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_providersScalarFieldEnum | Saml_providersScalarFieldEnum[]
  }

  /**
   * sso_providers.saml_relay_states
   */
  export type sso_providers$saml_relay_statesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the saml_relay_states
     */
    select?: saml_relay_statesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the saml_relay_states
     */
    omit?: saml_relay_statesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: saml_relay_statesInclude<ExtArgs> | null
    where?: saml_relay_statesWhereInput
    orderBy?: saml_relay_statesOrderByWithRelationInput | saml_relay_statesOrderByWithRelationInput[]
    cursor?: saml_relay_statesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Saml_relay_statesScalarFieldEnum | Saml_relay_statesScalarFieldEnum[]
  }

  /**
   * sso_providers.sso_domains
   */
  export type sso_providers$sso_domainsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_domains
     */
    select?: sso_domainsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_domains
     */
    omit?: sso_domainsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_domainsInclude<ExtArgs> | null
    where?: sso_domainsWhereInput
    orderBy?: sso_domainsOrderByWithRelationInput | sso_domainsOrderByWithRelationInput[]
    cursor?: sso_domainsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Sso_domainsScalarFieldEnum | Sso_domainsScalarFieldEnum[]
  }

  /**
   * sso_providers without action
   */
  export type sso_providersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sso_providers
     */
    select?: sso_providersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sso_providers
     */
    omit?: sso_providersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sso_providersInclude<ExtArgs> | null
  }


  /**
   * Model users
   */

  export type AggregateUsers = {
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  export type UsersAvgAggregateOutputType = {
    email_change_confirm_status: number | null
  }

  export type UsersSumAggregateOutputType = {
    email_change_confirm_status: number | null
  }

  export type UsersMinAggregateOutputType = {
    instance_id: string | null
    id: string | null
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean | null
    deleted_at: Date | null
    is_anonymous: boolean | null
  }

  export type UsersMaxAggregateOutputType = {
    instance_id: string | null
    id: string | null
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean | null
    deleted_at: Date | null
    is_anonymous: boolean | null
  }

  export type UsersCountAggregateOutputType = {
    instance_id: number
    id: number
    aud: number
    role: number
    email: number
    encrypted_password: number
    email_confirmed_at: number
    invited_at: number
    confirmation_token: number
    confirmation_sent_at: number
    recovery_token: number
    recovery_sent_at: number
    email_change_token_new: number
    email_change: number
    email_change_sent_at: number
    last_sign_in_at: number
    raw_app_meta_data: number
    raw_user_meta_data: number
    is_super_admin: number
    created_at: number
    updated_at: number
    phone: number
    phone_confirmed_at: number
    phone_change: number
    phone_change_token: number
    phone_change_sent_at: number
    confirmed_at: number
    email_change_token_current: number
    email_change_confirm_status: number
    banned_until: number
    reauthentication_token: number
    reauthentication_sent_at: number
    is_sso_user: number
    deleted_at: number
    is_anonymous: number
    _all: number
  }


  export type UsersAvgAggregateInputType = {
    email_change_confirm_status?: true
  }

  export type UsersSumAggregateInputType = {
    email_change_confirm_status?: true
  }

  export type UsersMinAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    is_anonymous?: true
  }

  export type UsersMaxAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    is_anonymous?: true
  }

  export type UsersCountAggregateInputType = {
    instance_id?: true
    id?: true
    aud?: true
    role?: true
    email?: true
    encrypted_password?: true
    email_confirmed_at?: true
    invited_at?: true
    confirmation_token?: true
    confirmation_sent_at?: true
    recovery_token?: true
    recovery_sent_at?: true
    email_change_token_new?: true
    email_change?: true
    email_change_sent_at?: true
    last_sign_in_at?: true
    raw_app_meta_data?: true
    raw_user_meta_data?: true
    is_super_admin?: true
    created_at?: true
    updated_at?: true
    phone?: true
    phone_confirmed_at?: true
    phone_change?: true
    phone_change_token?: true
    phone_change_sent_at?: true
    confirmed_at?: true
    email_change_token_current?: true
    email_change_confirm_status?: true
    banned_until?: true
    reauthentication_token?: true
    reauthentication_sent_at?: true
    is_sso_user?: true
    deleted_at?: true
    is_anonymous?: true
    _all?: true
  }

  export type UsersAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to aggregate.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned users
    **/
    _count?: true | UsersCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: UsersAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: UsersSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UsersMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UsersMaxAggregateInputType
  }

  export type GetUsersAggregateType<T extends UsersAggregateArgs> = {
        [P in keyof T & keyof AggregateUsers]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUsers[P]>
      : GetScalarType<T[P], AggregateUsers[P]>
  }




  export type usersGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: usersWhereInput
    orderBy?: usersOrderByWithAggregationInput | usersOrderByWithAggregationInput[]
    by: UsersScalarFieldEnum[] | UsersScalarFieldEnum
    having?: usersScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UsersCountAggregateInputType | true
    _avg?: UsersAvgAggregateInputType
    _sum?: UsersSumAggregateInputType
    _min?: UsersMinAggregateInputType
    _max?: UsersMaxAggregateInputType
  }

  export type UsersGroupByOutputType = {
    instance_id: string | null
    id: string
    aud: string | null
    role: string | null
    email: string | null
    encrypted_password: string | null
    email_confirmed_at: Date | null
    invited_at: Date | null
    confirmation_token: string | null
    confirmation_sent_at: Date | null
    recovery_token: string | null
    recovery_sent_at: Date | null
    email_change_token_new: string | null
    email_change: string | null
    email_change_sent_at: Date | null
    last_sign_in_at: Date | null
    raw_app_meta_data: JsonValue | null
    raw_user_meta_data: JsonValue | null
    is_super_admin: boolean | null
    created_at: Date | null
    updated_at: Date | null
    phone: string | null
    phone_confirmed_at: Date | null
    phone_change: string | null
    phone_change_token: string | null
    phone_change_sent_at: Date | null
    confirmed_at: Date | null
    email_change_token_current: string | null
    email_change_confirm_status: number | null
    banned_until: Date | null
    reauthentication_token: string | null
    reauthentication_sent_at: Date | null
    is_sso_user: boolean
    deleted_at: Date | null
    is_anonymous: boolean
    _count: UsersCountAggregateOutputType | null
    _avg: UsersAvgAggregateOutputType | null
    _sum: UsersSumAggregateOutputType | null
    _min: UsersMinAggregateOutputType | null
    _max: UsersMaxAggregateOutputType | null
  }

  type GetUsersGroupByPayload<T extends usersGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UsersGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UsersGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UsersGroupByOutputType[P]>
            : GetScalarType<T[P], UsersGroupByOutputType[P]>
        }
      >
    >


  export type usersSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
    identities?: boolean | users$identitiesArgs<ExtArgs>
    mfa_factors?: boolean | users$mfa_factorsArgs<ExtArgs>
    one_time_tokens?: boolean | users$one_time_tokensArgs<ExtArgs>
    sessions?: boolean | users$sessionsArgs<ExtArgs>
    users?: boolean | users$usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["users"]>

  export type usersSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
  }, ExtArgs["result"]["users"]>

  export type usersSelectScalar = {
    instance_id?: boolean
    id?: boolean
    aud?: boolean
    role?: boolean
    email?: boolean
    encrypted_password?: boolean
    email_confirmed_at?: boolean
    invited_at?: boolean
    confirmation_token?: boolean
    confirmation_sent_at?: boolean
    recovery_token?: boolean
    recovery_sent_at?: boolean
    email_change_token_new?: boolean
    email_change?: boolean
    email_change_sent_at?: boolean
    last_sign_in_at?: boolean
    raw_app_meta_data?: boolean
    raw_user_meta_data?: boolean
    is_super_admin?: boolean
    created_at?: boolean
    updated_at?: boolean
    phone?: boolean
    phone_confirmed_at?: boolean
    phone_change?: boolean
    phone_change_token?: boolean
    phone_change_sent_at?: boolean
    confirmed_at?: boolean
    email_change_token_current?: boolean
    email_change_confirm_status?: boolean
    banned_until?: boolean
    reauthentication_token?: boolean
    reauthentication_sent_at?: boolean
    is_sso_user?: boolean
    deleted_at?: boolean
    is_anonymous?: boolean
  }

  export type usersOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"instance_id" | "id" | "aud" | "role" | "email" | "encrypted_password" | "email_confirmed_at" | "invited_at" | "confirmation_token" | "confirmation_sent_at" | "recovery_token" | "recovery_sent_at" | "email_change_token_new" | "email_change" | "email_change_sent_at" | "last_sign_in_at" | "raw_app_meta_data" | "raw_user_meta_data" | "is_super_admin" | "created_at" | "updated_at" | "phone" | "phone_confirmed_at" | "phone_change" | "phone_change_token" | "phone_change_sent_at" | "confirmed_at" | "email_change_token_current" | "email_change_confirm_status" | "banned_until" | "reauthentication_token" | "reauthentication_sent_at" | "is_sso_user" | "deleted_at" | "is_anonymous", ExtArgs["result"]["users"]>
  export type usersInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    identities?: boolean | users$identitiesArgs<ExtArgs>
    mfa_factors?: boolean | users$mfa_factorsArgs<ExtArgs>
    one_time_tokens?: boolean | users$one_time_tokensArgs<ExtArgs>
    sessions?: boolean | users$sessionsArgs<ExtArgs>
    users?: boolean | users$usersArgs<ExtArgs>
    _count?: boolean | UsersCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type usersIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type usersIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $usersPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "users"
    objects: {
      identities: Prisma.$identitiesPayload<ExtArgs>[]
      mfa_factors: Prisma.$mfa_factorsPayload<ExtArgs>[]
      one_time_tokens: Prisma.$one_time_tokensPayload<ExtArgs>[]
      sessions: Prisma.$sessionsPayload<ExtArgs>[]
      users: Prisma.$public_usersPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      instance_id: string | null
      id: string
      aud: string | null
      role: string | null
      email: string | null
      encrypted_password: string | null
      email_confirmed_at: Date | null
      invited_at: Date | null
      confirmation_token: string | null
      confirmation_sent_at: Date | null
      recovery_token: string | null
      recovery_sent_at: Date | null
      email_change_token_new: string | null
      email_change: string | null
      email_change_sent_at: Date | null
      last_sign_in_at: Date | null
      raw_app_meta_data: Prisma.JsonValue | null
      raw_user_meta_data: Prisma.JsonValue | null
      is_super_admin: boolean | null
      created_at: Date | null
      updated_at: Date | null
      phone: string | null
      phone_confirmed_at: Date | null
      phone_change: string | null
      phone_change_token: string | null
      phone_change_sent_at: Date | null
      confirmed_at: Date | null
      email_change_token_current: string | null
      email_change_confirm_status: number | null
      banned_until: Date | null
      reauthentication_token: string | null
      reauthentication_sent_at: Date | null
      is_sso_user: boolean
      deleted_at: Date | null
      is_anonymous: boolean
    }, ExtArgs["result"]["users"]>
    composites: {}
  }

  type usersGetPayload<S extends boolean | null | undefined | usersDefaultArgs> = $Result.GetResult<Prisma.$usersPayload, S>

  type usersCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<usersFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: UsersCountAggregateInputType | true
    }

  export interface usersDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['users'], meta: { name: 'users' } }
    /**
     * Find zero or one Users that matches the filter.
     * @param {usersFindUniqueArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends usersFindUniqueArgs>(args: SelectSubset<T, usersFindUniqueArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Users that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {usersFindUniqueOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends usersFindUniqueOrThrowArgs>(args: SelectSubset<T, usersFindUniqueOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends usersFindFirstArgs>(args?: SelectSubset<T, usersFindFirstArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Users that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindFirstOrThrowArgs} args - Arguments to find a Users
     * @example
     * // Get one Users
     * const users = await prisma.users.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends usersFindFirstOrThrowArgs>(args?: SelectSubset<T, usersFindFirstOrThrowArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.users.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.users.findMany({ take: 10 })
     * 
     * // Only select the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.findMany({ select: { instance_id: true } })
     * 
     */
    findMany<T extends usersFindManyArgs>(args?: SelectSubset<T, usersFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Users.
     * @param {usersCreateArgs} args - Arguments to create a Users.
     * @example
     * // Create one Users
     * const Users = await prisma.users.create({
     *   data: {
     *     // ... data to create a Users
     *   }
     * })
     * 
     */
    create<T extends usersCreateArgs>(args: SelectSubset<T, usersCreateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Users.
     * @param {usersCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends usersCreateManyArgs>(args?: SelectSubset<T, usersCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Users and returns the data saved in the database.
     * @param {usersCreateManyAndReturnArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const users = await prisma.users.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Users and only return the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.createManyAndReturn({
     *   select: { instance_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends usersCreateManyAndReturnArgs>(args?: SelectSubset<T, usersCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Users.
     * @param {usersDeleteArgs} args - Arguments to delete one Users.
     * @example
     * // Delete one Users
     * const Users = await prisma.users.delete({
     *   where: {
     *     // ... filter to delete one Users
     *   }
     * })
     * 
     */
    delete<T extends usersDeleteArgs>(args: SelectSubset<T, usersDeleteArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Users.
     * @param {usersUpdateArgs} args - Arguments to update one Users.
     * @example
     * // Update one Users
     * const users = await prisma.users.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends usersUpdateArgs>(args: SelectSubset<T, usersUpdateArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Users.
     * @param {usersDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.users.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends usersDeleteManyArgs>(args?: SelectSubset<T, usersDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends usersUpdateManyArgs>(args: SelectSubset<T, usersUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users and returns the data updated in the database.
     * @param {usersUpdateManyAndReturnArgs} args - Arguments to update many Users.
     * @example
     * // Update many Users
     * const users = await prisma.users.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Users and only return the `instance_id`
     * const usersWithInstance_idOnly = await prisma.users.updateManyAndReturn({
     *   select: { instance_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends usersUpdateManyAndReturnArgs>(args: SelectSubset<T, usersUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Users.
     * @param {usersUpsertArgs} args - Arguments to update or create a Users.
     * @example
     * // Update or create a Users
     * const users = await prisma.users.upsert({
     *   create: {
     *     // ... data to create a Users
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Users we want to update
     *   }
     * })
     */
    upsert<T extends usersUpsertArgs>(args: SelectSubset<T, usersUpsertArgs<ExtArgs>>): Prisma__usersClient<$Result.GetResult<Prisma.$usersPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.users.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends usersCountArgs>(
      args?: Subset<T, usersCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UsersCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UsersAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UsersAggregateArgs>(args: Subset<T, UsersAggregateArgs>): Prisma.PrismaPromise<GetUsersAggregateType<T>>

    /**
     * Group by Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {usersGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends usersGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: usersGroupByArgs['orderBy'] }
        : { orderBy?: usersGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, usersGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUsersGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the users model
   */
  readonly fields: usersFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for users.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__usersClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    identities<T extends users$identitiesArgs<ExtArgs> = {}>(args?: Subset<T, users$identitiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$identitiesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    mfa_factors<T extends users$mfa_factorsArgs<ExtArgs> = {}>(args?: Subset<T, users$mfa_factorsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$mfa_factorsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    one_time_tokens<T extends users$one_time_tokensArgs<ExtArgs> = {}>(args?: Subset<T, users$one_time_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$one_time_tokensPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    sessions<T extends users$sessionsArgs<ExtArgs> = {}>(args?: Subset<T, users$sessionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    users<T extends users$usersArgs<ExtArgs> = {}>(args?: Subset<T, users$usersArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the users model
   */
  interface usersFieldRefs {
    readonly instance_id: FieldRef<"users", 'String'>
    readonly id: FieldRef<"users", 'String'>
    readonly aud: FieldRef<"users", 'String'>
    readonly role: FieldRef<"users", 'String'>
    readonly email: FieldRef<"users", 'String'>
    readonly encrypted_password: FieldRef<"users", 'String'>
    readonly email_confirmed_at: FieldRef<"users", 'DateTime'>
    readonly invited_at: FieldRef<"users", 'DateTime'>
    readonly confirmation_token: FieldRef<"users", 'String'>
    readonly confirmation_sent_at: FieldRef<"users", 'DateTime'>
    readonly recovery_token: FieldRef<"users", 'String'>
    readonly recovery_sent_at: FieldRef<"users", 'DateTime'>
    readonly email_change_token_new: FieldRef<"users", 'String'>
    readonly email_change: FieldRef<"users", 'String'>
    readonly email_change_sent_at: FieldRef<"users", 'DateTime'>
    readonly last_sign_in_at: FieldRef<"users", 'DateTime'>
    readonly raw_app_meta_data: FieldRef<"users", 'Json'>
    readonly raw_user_meta_data: FieldRef<"users", 'Json'>
    readonly is_super_admin: FieldRef<"users", 'Boolean'>
    readonly created_at: FieldRef<"users", 'DateTime'>
    readonly updated_at: FieldRef<"users", 'DateTime'>
    readonly phone: FieldRef<"users", 'String'>
    readonly phone_confirmed_at: FieldRef<"users", 'DateTime'>
    readonly phone_change: FieldRef<"users", 'String'>
    readonly phone_change_token: FieldRef<"users", 'String'>
    readonly phone_change_sent_at: FieldRef<"users", 'DateTime'>
    readonly confirmed_at: FieldRef<"users", 'DateTime'>
    readonly email_change_token_current: FieldRef<"users", 'String'>
    readonly email_change_confirm_status: FieldRef<"users", 'Int'>
    readonly banned_until: FieldRef<"users", 'DateTime'>
    readonly reauthentication_token: FieldRef<"users", 'String'>
    readonly reauthentication_sent_at: FieldRef<"users", 'DateTime'>
    readonly is_sso_user: FieldRef<"users", 'Boolean'>
    readonly deleted_at: FieldRef<"users", 'DateTime'>
    readonly is_anonymous: FieldRef<"users", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * users findUnique
   */
  export type usersFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findUniqueOrThrow
   */
  export type usersFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users findFirst
   */
  export type usersFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findFirstOrThrow
   */
  export type usersFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of users.
     */
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users findMany
   */
  export type usersFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter, which users to fetch.
     */
    where?: usersWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of users to fetch.
     */
    orderBy?: usersOrderByWithRelationInput | usersOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing users.
     */
    cursor?: usersWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` users.
     */
    skip?: number
    distinct?: UsersScalarFieldEnum | UsersScalarFieldEnum[]
  }

  /**
   * users create
   */
  export type usersCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to create a users.
     */
    data: XOR<usersCreateInput, usersUncheckedCreateInput>
  }

  /**
   * users createMany
   */
  export type usersCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users createManyAndReturn
   */
  export type usersCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to create many users.
     */
    data: usersCreateManyInput | usersCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * users update
   */
  export type usersUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The data needed to update a users.
     */
    data: XOR<usersUpdateInput, usersUncheckedUpdateInput>
    /**
     * Choose, which users to update.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users updateMany
   */
  export type usersUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users updateManyAndReturn
   */
  export type usersUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * The data used to update users.
     */
    data: XOR<usersUpdateManyMutationInput, usersUncheckedUpdateManyInput>
    /**
     * Filter which users to update
     */
    where?: usersWhereInput
    /**
     * Limit how many users to update.
     */
    limit?: number
  }

  /**
   * users upsert
   */
  export type usersUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * The filter to search for the users to update in case it exists.
     */
    where: usersWhereUniqueInput
    /**
     * In case the users found by the `where` argument doesn't exist, create a new users with this data.
     */
    create: XOR<usersCreateInput, usersUncheckedCreateInput>
    /**
     * In case the users was found with the provided `where` argument, update it with this data.
     */
    update: XOR<usersUpdateInput, usersUncheckedUpdateInput>
  }

  /**
   * users delete
   */
  export type usersDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
    /**
     * Filter which users to delete.
     */
    where: usersWhereUniqueInput
  }

  /**
   * users deleteMany
   */
  export type usersDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which users to delete
     */
    where?: usersWhereInput
    /**
     * Limit how many users to delete.
     */
    limit?: number
  }

  /**
   * users.identities
   */
  export type users$identitiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the identities
     */
    select?: identitiesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the identities
     */
    omit?: identitiesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: identitiesInclude<ExtArgs> | null
    where?: identitiesWhereInput
    orderBy?: identitiesOrderByWithRelationInput | identitiesOrderByWithRelationInput[]
    cursor?: identitiesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: IdentitiesScalarFieldEnum | IdentitiesScalarFieldEnum[]
  }

  /**
   * users.mfa_factors
   */
  export type users$mfa_factorsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the mfa_factors
     */
    select?: mfa_factorsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the mfa_factors
     */
    omit?: mfa_factorsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: mfa_factorsInclude<ExtArgs> | null
    where?: mfa_factorsWhereInput
    orderBy?: mfa_factorsOrderByWithRelationInput | mfa_factorsOrderByWithRelationInput[]
    cursor?: mfa_factorsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Mfa_factorsScalarFieldEnum | Mfa_factorsScalarFieldEnum[]
  }

  /**
   * users.one_time_tokens
   */
  export type users$one_time_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the one_time_tokens
     */
    select?: one_time_tokensSelect<ExtArgs> | null
    /**
     * Omit specific fields from the one_time_tokens
     */
    omit?: one_time_tokensOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: one_time_tokensInclude<ExtArgs> | null
    where?: one_time_tokensWhereInput
    orderBy?: one_time_tokensOrderByWithRelationInput | one_time_tokensOrderByWithRelationInput[]
    cursor?: one_time_tokensWhereUniqueInput
    take?: number
    skip?: number
    distinct?: One_time_tokensScalarFieldEnum | One_time_tokensScalarFieldEnum[]
  }

  /**
   * users.sessions
   */
  export type users$sessionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the sessions
     */
    select?: sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the sessions
     */
    omit?: sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: sessionsInclude<ExtArgs> | null
    where?: sessionsWhereInput
    orderBy?: sessionsOrderByWithRelationInput | sessionsOrderByWithRelationInput[]
    cursor?: sessionsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SessionsScalarFieldEnum | SessionsScalarFieldEnum[]
  }

  /**
   * users.users
   */
  export type users$usersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_users
     */
    select?: public_usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_users
     */
    omit?: public_usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_usersInclude<ExtArgs> | null
    where?: public_usersWhereInput
  }

  /**
   * users without action
   */
  export type usersDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the users
     */
    select?: usersSelect<ExtArgs> | null
    /**
     * Omit specific fields from the users
     */
    omit?: usersOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: usersInclude<ExtArgs> | null
  }


  /**
   * Model public_sessions
   */

  export type AggregatePublic_sessions = {
    _count: Public_sessionsCountAggregateOutputType | null
    _min: Public_sessionsMinAggregateOutputType | null
    _max: Public_sessionsMaxAggregateOutputType | null
  }

  export type Public_sessionsMinAggregateOutputType = {
    user_id: string | null
    token: string | null
    expires: Date | null
  }

  export type Public_sessionsMaxAggregateOutputType = {
    user_id: string | null
    token: string | null
    expires: Date | null
  }

  export type Public_sessionsCountAggregateOutputType = {
    user_id: number
    token: number
    expires: number
    _all: number
  }


  export type Public_sessionsMinAggregateInputType = {
    user_id?: true
    token?: true
    expires?: true
  }

  export type Public_sessionsMaxAggregateInputType = {
    user_id?: true
    token?: true
    expires?: true
  }

  export type Public_sessionsCountAggregateInputType = {
    user_id?: true
    token?: true
    expires?: true
    _all?: true
  }

  export type Public_sessionsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which public_sessions to aggregate.
     */
    where?: public_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_sessions to fetch.
     */
    orderBy?: public_sessionsOrderByWithRelationInput | public_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: public_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned public_sessions
    **/
    _count?: true | Public_sessionsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Public_sessionsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Public_sessionsMaxAggregateInputType
  }

  export type GetPublic_sessionsAggregateType<T extends Public_sessionsAggregateArgs> = {
        [P in keyof T & keyof AggregatePublic_sessions]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePublic_sessions[P]>
      : GetScalarType<T[P], AggregatePublic_sessions[P]>
  }




  export type public_sessionsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: public_sessionsWhereInput
    orderBy?: public_sessionsOrderByWithAggregationInput | public_sessionsOrderByWithAggregationInput[]
    by: Public_sessionsScalarFieldEnum[] | Public_sessionsScalarFieldEnum
    having?: public_sessionsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Public_sessionsCountAggregateInputType | true
    _min?: Public_sessionsMinAggregateInputType
    _max?: Public_sessionsMaxAggregateInputType
  }

  export type Public_sessionsGroupByOutputType = {
    user_id: string
    token: string | null
    expires: Date | null
    _count: Public_sessionsCountAggregateOutputType | null
    _min: Public_sessionsMinAggregateOutputType | null
    _max: Public_sessionsMaxAggregateOutputType | null
  }

  type GetPublic_sessionsGroupByPayload<T extends public_sessionsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Public_sessionsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Public_sessionsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Public_sessionsGroupByOutputType[P]>
            : GetScalarType<T[P], Public_sessionsGroupByOutputType[P]>
        }
      >
    >


  export type public_sessionsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    token?: boolean
    expires?: boolean
    users?: boolean | public_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["public_sessions"]>

  export type public_sessionsSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    token?: boolean
    expires?: boolean
    users?: boolean | public_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["public_sessions"]>

  export type public_sessionsSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    user_id?: boolean
    token?: boolean
    expires?: boolean
    users?: boolean | public_usersDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["public_sessions"]>

  export type public_sessionsSelectScalar = {
    user_id?: boolean
    token?: boolean
    expires?: boolean
  }

  export type public_sessionsOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"user_id" | "token" | "expires", ExtArgs["result"]["public_sessions"]>
  export type public_sessionsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | public_usersDefaultArgs<ExtArgs>
  }
  export type public_sessionsIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | public_usersDefaultArgs<ExtArgs>
  }
  export type public_sessionsIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    users?: boolean | public_usersDefaultArgs<ExtArgs>
  }

  export type $public_sessionsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "public_sessions"
    objects: {
      users: Prisma.$public_usersPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      user_id: string
      token: string | null
      expires: Date | null
    }, ExtArgs["result"]["public_sessions"]>
    composites: {}
  }

  type public_sessionsGetPayload<S extends boolean | null | undefined | public_sessionsDefaultArgs> = $Result.GetResult<Prisma.$public_sessionsPayload, S>

  type public_sessionsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<public_sessionsFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Public_sessionsCountAggregateInputType | true
    }

  export interface public_sessionsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['public_sessions'], meta: { name: 'public_sessions' } }
    /**
     * Find zero or one Public_sessions that matches the filter.
     * @param {public_sessionsFindUniqueArgs} args - Arguments to find a Public_sessions
     * @example
     * // Get one Public_sessions
     * const public_sessions = await prisma.public_sessions.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends public_sessionsFindUniqueArgs>(args: SelectSubset<T, public_sessionsFindUniqueArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Public_sessions that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {public_sessionsFindUniqueOrThrowArgs} args - Arguments to find a Public_sessions
     * @example
     * // Get one Public_sessions
     * const public_sessions = await prisma.public_sessions.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends public_sessionsFindUniqueOrThrowArgs>(args: SelectSubset<T, public_sessionsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Public_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_sessionsFindFirstArgs} args - Arguments to find a Public_sessions
     * @example
     * // Get one Public_sessions
     * const public_sessions = await prisma.public_sessions.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends public_sessionsFindFirstArgs>(args?: SelectSubset<T, public_sessionsFindFirstArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Public_sessions that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_sessionsFindFirstOrThrowArgs} args - Arguments to find a Public_sessions
     * @example
     * // Get one Public_sessions
     * const public_sessions = await prisma.public_sessions.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends public_sessionsFindFirstOrThrowArgs>(args?: SelectSubset<T, public_sessionsFindFirstOrThrowArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Public_sessions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_sessionsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Public_sessions
     * const public_sessions = await prisma.public_sessions.findMany()
     * 
     * // Get first 10 Public_sessions
     * const public_sessions = await prisma.public_sessions.findMany({ take: 10 })
     * 
     * // Only select the `user_id`
     * const public_sessionsWithUser_idOnly = await prisma.public_sessions.findMany({ select: { user_id: true } })
     * 
     */
    findMany<T extends public_sessionsFindManyArgs>(args?: SelectSubset<T, public_sessionsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Public_sessions.
     * @param {public_sessionsCreateArgs} args - Arguments to create a Public_sessions.
     * @example
     * // Create one Public_sessions
     * const Public_sessions = await prisma.public_sessions.create({
     *   data: {
     *     // ... data to create a Public_sessions
     *   }
     * })
     * 
     */
    create<T extends public_sessionsCreateArgs>(args: SelectSubset<T, public_sessionsCreateArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Public_sessions.
     * @param {public_sessionsCreateManyArgs} args - Arguments to create many Public_sessions.
     * @example
     * // Create many Public_sessions
     * const public_sessions = await prisma.public_sessions.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends public_sessionsCreateManyArgs>(args?: SelectSubset<T, public_sessionsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Public_sessions and returns the data saved in the database.
     * @param {public_sessionsCreateManyAndReturnArgs} args - Arguments to create many Public_sessions.
     * @example
     * // Create many Public_sessions
     * const public_sessions = await prisma.public_sessions.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Public_sessions and only return the `user_id`
     * const public_sessionsWithUser_idOnly = await prisma.public_sessions.createManyAndReturn({
     *   select: { user_id: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends public_sessionsCreateManyAndReturnArgs>(args?: SelectSubset<T, public_sessionsCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Public_sessions.
     * @param {public_sessionsDeleteArgs} args - Arguments to delete one Public_sessions.
     * @example
     * // Delete one Public_sessions
     * const Public_sessions = await prisma.public_sessions.delete({
     *   where: {
     *     // ... filter to delete one Public_sessions
     *   }
     * })
     * 
     */
    delete<T extends public_sessionsDeleteArgs>(args: SelectSubset<T, public_sessionsDeleteArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Public_sessions.
     * @param {public_sessionsUpdateArgs} args - Arguments to update one Public_sessions.
     * @example
     * // Update one Public_sessions
     * const public_sessions = await prisma.public_sessions.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends public_sessionsUpdateArgs>(args: SelectSubset<T, public_sessionsUpdateArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Public_sessions.
     * @param {public_sessionsDeleteManyArgs} args - Arguments to filter Public_sessions to delete.
     * @example
     * // Delete a few Public_sessions
     * const { count } = await prisma.public_sessions.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends public_sessionsDeleteManyArgs>(args?: SelectSubset<T, public_sessionsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Public_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_sessionsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Public_sessions
     * const public_sessions = await prisma.public_sessions.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends public_sessionsUpdateManyArgs>(args: SelectSubset<T, public_sessionsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Public_sessions and returns the data updated in the database.
     * @param {public_sessionsUpdateManyAndReturnArgs} args - Arguments to update many Public_sessions.
     * @example
     * // Update many Public_sessions
     * const public_sessions = await prisma.public_sessions.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Public_sessions and only return the `user_id`
     * const public_sessionsWithUser_idOnly = await prisma.public_sessions.updateManyAndReturn({
     *   select: { user_id: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends public_sessionsUpdateManyAndReturnArgs>(args: SelectSubset<T, public_sessionsUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Public_sessions.
     * @param {public_sessionsUpsertArgs} args - Arguments to update or create a Public_sessions.
     * @example
     * // Update or create a Public_sessions
     * const public_sessions = await prisma.public_sessions.upsert({
     *   create: {
     *     // ... data to create a Public_sessions
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Public_sessions we want to update
     *   }
     * })
     */
    upsert<T extends public_sessionsUpsertArgs>(args: SelectSubset<T, public_sessionsUpsertArgs<ExtArgs>>): Prisma__public_sessionsClient<$Result.GetResult<Prisma.$public_sessionsPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Public_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_sessionsCountArgs} args - Arguments to filter Public_sessions to count.
     * @example
     * // Count the number of Public_sessions
     * const count = await prisma.public_sessions.count({
     *   where: {
     *     // ... the filter for the Public_sessions we want to count
     *   }
     * })
    **/
    count<T extends public_sessionsCountArgs>(
      args?: Subset<T, public_sessionsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Public_sessionsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Public_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Public_sessionsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Public_sessionsAggregateArgs>(args: Subset<T, Public_sessionsAggregateArgs>): Prisma.PrismaPromise<GetPublic_sessionsAggregateType<T>>

    /**
     * Group by Public_sessions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {public_sessionsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends public_sessionsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: public_sessionsGroupByArgs['orderBy'] }
        : { orderBy?: public_sessionsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, public_sessionsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPublic_sessionsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the public_sessions model
   */
  readonly fields: public_sessionsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for public_sessions.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__public_sessionsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    users<T extends public_usersDefaultArgs<ExtArgs> = {}>(args?: Subset<T, public_usersDefaultArgs<ExtArgs>>): Prisma__public_usersClient<$Result.GetResult<Prisma.$public_usersPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the public_sessions model
   */
  interface public_sessionsFieldRefs {
    readonly user_id: FieldRef<"public_sessions", 'String'>
    readonly token: FieldRef<"public_sessions", 'String'>
    readonly expires: FieldRef<"public_sessions", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * public_sessions findUnique
   */
  export type public_sessionsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which public_sessions to fetch.
     */
    where: public_sessionsWhereUniqueInput
  }

  /**
   * public_sessions findUniqueOrThrow
   */
  export type public_sessionsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which public_sessions to fetch.
     */
    where: public_sessionsWhereUniqueInput
  }

  /**
   * public_sessions findFirst
   */
  export type public_sessionsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which public_sessions to fetch.
     */
    where?: public_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_sessions to fetch.
     */
    orderBy?: public_sessionsOrderByWithRelationInput | public_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for public_sessions.
     */
    cursor?: public_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of public_sessions.
     */
    distinct?: Public_sessionsScalarFieldEnum | Public_sessionsScalarFieldEnum[]
  }

  /**
   * public_sessions findFirstOrThrow
   */
  export type public_sessionsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which public_sessions to fetch.
     */
    where?: public_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_sessions to fetch.
     */
    orderBy?: public_sessionsOrderByWithRelationInput | public_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for public_sessions.
     */
    cursor?: public_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_sessions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of public_sessions.
     */
    distinct?: Public_sessionsScalarFieldEnum | Public_sessionsScalarFieldEnum[]
  }

  /**
   * public_sessions findMany
   */
  export type public_sessionsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * Filter, which public_sessions to fetch.
     */
    where?: public_sessionsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of public_sessions to fetch.
     */
    orderBy?: public_sessionsOrderByWithRelationInput | public_sessionsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing public_sessions.
     */
    cursor?: public_sessionsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` public_sessions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` public_sessions.
     */
    skip?: number
    distinct?: Public_sessionsScalarFieldEnum | Public_sessionsScalarFieldEnum[]
  }

  /**
   * public_sessions create
   */
  export type public_sessionsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to create a public_sessions.
     */
    data: XOR<public_sessionsCreateInput, public_sessionsUncheckedCreateInput>
  }

  /**
   * public_sessions createMany
   */
  export type public_sessionsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many public_sessions.
     */
    data: public_sessionsCreateManyInput | public_sessionsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * public_sessions createManyAndReturn
   */
  export type public_sessionsCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * The data used to create many public_sessions.
     */
    data: public_sessionsCreateManyInput | public_sessionsCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * public_sessions update
   */
  export type public_sessionsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * The data needed to update a public_sessions.
     */
    data: XOR<public_sessionsUpdateInput, public_sessionsUncheckedUpdateInput>
    /**
     * Choose, which public_sessions to update.
     */
    where: public_sessionsWhereUniqueInput
  }

  /**
   * public_sessions updateMany
   */
  export type public_sessionsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update public_sessions.
     */
    data: XOR<public_sessionsUpdateManyMutationInput, public_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which public_sessions to update
     */
    where?: public_sessionsWhereInput
    /**
     * Limit how many public_sessions to update.
     */
    limit?: number
  }

  /**
   * public_sessions updateManyAndReturn
   */
  export type public_sessionsUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * The data used to update public_sessions.
     */
    data: XOR<public_sessionsUpdateManyMutationInput, public_sessionsUncheckedUpdateManyInput>
    /**
     * Filter which public_sessions to update
     */
    where?: public_sessionsWhereInput
    /**
     * Limit how many public_sessions to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * public_sessions upsert
   */
  export type public_sessionsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * The filter to search for the public_sessions to update in case it exists.
     */
    where: public_sessionsWhereUniqueInput
    /**
     * In case the public_sessions found by the `where` argument doesn't exist, create a new public_sessions with this data.
     */
    create: XOR<public_sessionsCreateInput, public_sessionsUncheckedCreateInput>
    /**
     * In case the public_sessions was found with the provided `where` argument, update it with this data.
     */
    update: XOR<public_sessionsUpdateInput, public_sessionsUncheckedUpdateInput>
  }

  /**
   * public_sessions delete
   */
  export type public_sessionsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
    /**
     * Filter which public_sessions to delete.
     */
    where: public_sessionsWhereUniqueInput
  }

  /**
   * public_sessions deleteMany
   */
  export type public_sessionsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which public_sessions to delete
     */
    where?: public_sessionsWhereInput
    /**
     * Limit how many public_sessions to delete.
     */
    limit?: number
  }

  /**
   * public_sessions without action
   */
  export type public_sessionsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the public_sessions
     */
    select?: public_sessionsSelect<ExtArgs> | null
    /**
     * Omit specific fields from the public_sessions
     */
    omit?: public_sessionsOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: public_sessionsInclude<ExtArgs> | null
  }


  /**
   * Model book_articles
   */

  export type AggregateBook_articles = {
    _count: Book_articlesCountAggregateOutputType | null
    _avg: Book_articlesAvgAggregateOutputType | null
    _sum: Book_articlesSumAggregateOutputType | null
    _min: Book_articlesMinAggregateOutputType | null
    _max: Book_articlesMaxAggregateOutputType | null
  }

  export type Book_articlesAvgAggregateOutputType = {
    order: number | null
  }

  export type Book_articlesSumAggregateOutputType = {
    order: number | null
  }

  export type Book_articlesMinAggregateOutputType = {
    order: number | null
    added_at: Date | null
    id: string | null
    book_id: string | null
    article_id: string | null
  }

  export type Book_articlesMaxAggregateOutputType = {
    order: number | null
    added_at: Date | null
    id: string | null
    book_id: string | null
    article_id: string | null
  }

  export type Book_articlesCountAggregateOutputType = {
    order: number
    added_at: number
    id: number
    book_id: number
    article_id: number
    _all: number
  }


  export type Book_articlesAvgAggregateInputType = {
    order?: true
  }

  export type Book_articlesSumAggregateInputType = {
    order?: true
  }

  export type Book_articlesMinAggregateInputType = {
    order?: true
    added_at?: true
    id?: true
    book_id?: true
    article_id?: true
  }

  export type Book_articlesMaxAggregateInputType = {
    order?: true
    added_at?: true
    id?: true
    book_id?: true
    article_id?: true
  }

  export type Book_articlesCountAggregateInputType = {
    order?: true
    added_at?: true
    id?: true
    book_id?: true
    article_id?: true
    _all?: true
  }

  export type Book_articlesAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which book_articles to aggregate.
     */
    where?: book_articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of book_articles to fetch.
     */
    orderBy?: book_articlesOrderByWithRelationInput | book_articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: book_articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` book_articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` book_articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned book_articles
    **/
    _count?: true | Book_articlesCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Book_articlesAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Book_articlesSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Book_articlesMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Book_articlesMaxAggregateInputType
  }

  export type GetBook_articlesAggregateType<T extends Book_articlesAggregateArgs> = {
        [P in keyof T & keyof AggregateBook_articles]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBook_articles[P]>
      : GetScalarType<T[P], AggregateBook_articles[P]>
  }




  export type book_articlesGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: book_articlesWhereInput
    orderBy?: book_articlesOrderByWithAggregationInput | book_articlesOrderByWithAggregationInput[]
    by: Book_articlesScalarFieldEnum[] | Book_articlesScalarFieldEnum
    having?: book_articlesScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Book_articlesCountAggregateInputType | true
    _avg?: Book_articlesAvgAggregateInputType
    _sum?: Book_articlesSumAggregateInputType
    _min?: Book_articlesMinAggregateInputType
    _max?: Book_articlesMaxAggregateInputType
  }

  export type Book_articlesGroupByOutputType = {
    order: number
    added_at: Date
    id: string
    book_id: string
    article_id: string
    _count: Book_articlesCountAggregateOutputType | null
    _avg: Book_articlesAvgAggregateOutputType | null
    _sum: Book_articlesSumAggregateOutputType | null
    _min: Book_articlesMinAggregateOutputType | null
    _max: Book_articlesMaxAggregateOutputType | null
  }

  type GetBook_articlesGroupByPayload<T extends book_articlesGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Book_articlesGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Book_articlesGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Book_articlesGroupByOutputType[P]>
            : GetScalarType<T[P], Book_articlesGroupByOutputType[P]>
        }
      >
    >


  export type book_articlesSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    order?: boolean
    added_at?: boolean
    id?: boolean
    book_id?: boolean
    article_id?: boolean
    books?: boolean | booksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["book_articles"]>

  export type book_articlesSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    order?: boolean
    added_at?: boolean
    id?: boolean
    book_id?: boolean
    article_id?: boolean
    books?: boolean | booksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["book_articles"]>

  export type book_articlesSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    order?: boolean
    added_at?: boolean
    id?: boolean
    book_id?: boolean
    article_id?: boolean
    books?: boolean | booksDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["book_articles"]>

  export type book_articlesSelectScalar = {
    order?: boolean
    added_at?: boolean
    id?: boolean
    book_id?: boolean
    article_id?: boolean
  }

  export type book_articlesOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"order" | "added_at" | "id" | "book_id" | "article_id", ExtArgs["result"]["book_articles"]>
  export type book_articlesInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    books?: boolean | booksDefaultArgs<ExtArgs>
  }
  export type book_articlesIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    books?: boolean | booksDefaultArgs<ExtArgs>
  }
  export type book_articlesIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    books?: boolean | booksDefaultArgs<ExtArgs>
  }

  export type $book_articlesPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "book_articles"
    objects: {
      books: Prisma.$booksPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      order: number
      added_at: Date
      id: string
      book_id: string
      article_id: string
    }, ExtArgs["result"]["book_articles"]>
    composites: {}
  }

  type book_articlesGetPayload<S extends boolean | null | undefined | book_articlesDefaultArgs> = $Result.GetResult<Prisma.$book_articlesPayload, S>

  type book_articlesCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<book_articlesFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Book_articlesCountAggregateInputType | true
    }

  export interface book_articlesDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['book_articles'], meta: { name: 'book_articles' } }
    /**
     * Find zero or one Book_articles that matches the filter.
     * @param {book_articlesFindUniqueArgs} args - Arguments to find a Book_articles
     * @example
     * // Get one Book_articles
     * const book_articles = await prisma.book_articles.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends book_articlesFindUniqueArgs>(args: SelectSubset<T, book_articlesFindUniqueArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Book_articles that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {book_articlesFindUniqueOrThrowArgs} args - Arguments to find a Book_articles
     * @example
     * // Get one Book_articles
     * const book_articles = await prisma.book_articles.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends book_articlesFindUniqueOrThrowArgs>(args: SelectSubset<T, book_articlesFindUniqueOrThrowArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Book_articles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {book_articlesFindFirstArgs} args - Arguments to find a Book_articles
     * @example
     * // Get one Book_articles
     * const book_articles = await prisma.book_articles.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends book_articlesFindFirstArgs>(args?: SelectSubset<T, book_articlesFindFirstArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Book_articles that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {book_articlesFindFirstOrThrowArgs} args - Arguments to find a Book_articles
     * @example
     * // Get one Book_articles
     * const book_articles = await prisma.book_articles.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends book_articlesFindFirstOrThrowArgs>(args?: SelectSubset<T, book_articlesFindFirstOrThrowArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Book_articles that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {book_articlesFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Book_articles
     * const book_articles = await prisma.book_articles.findMany()
     * 
     * // Get first 10 Book_articles
     * const book_articles = await prisma.book_articles.findMany({ take: 10 })
     * 
     * // Only select the `order`
     * const book_articlesWithOrderOnly = await prisma.book_articles.findMany({ select: { order: true } })
     * 
     */
    findMany<T extends book_articlesFindManyArgs>(args?: SelectSubset<T, book_articlesFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Book_articles.
     * @param {book_articlesCreateArgs} args - Arguments to create a Book_articles.
     * @example
     * // Create one Book_articles
     * const Book_articles = await prisma.book_articles.create({
     *   data: {
     *     // ... data to create a Book_articles
     *   }
     * })
     * 
     */
    create<T extends book_articlesCreateArgs>(args: SelectSubset<T, book_articlesCreateArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Book_articles.
     * @param {book_articlesCreateManyArgs} args - Arguments to create many Book_articles.
     * @example
     * // Create many Book_articles
     * const book_articles = await prisma.book_articles.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends book_articlesCreateManyArgs>(args?: SelectSubset<T, book_articlesCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Book_articles and returns the data saved in the database.
     * @param {book_articlesCreateManyAndReturnArgs} args - Arguments to create many Book_articles.
     * @example
     * // Create many Book_articles
     * const book_articles = await prisma.book_articles.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Book_articles and only return the `order`
     * const book_articlesWithOrderOnly = await prisma.book_articles.createManyAndReturn({
     *   select: { order: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends book_articlesCreateManyAndReturnArgs>(args?: SelectSubset<T, book_articlesCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Book_articles.
     * @param {book_articlesDeleteArgs} args - Arguments to delete one Book_articles.
     * @example
     * // Delete one Book_articles
     * const Book_articles = await prisma.book_articles.delete({
     *   where: {
     *     // ... filter to delete one Book_articles
     *   }
     * })
     * 
     */
    delete<T extends book_articlesDeleteArgs>(args: SelectSubset<T, book_articlesDeleteArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Book_articles.
     * @param {book_articlesUpdateArgs} args - Arguments to update one Book_articles.
     * @example
     * // Update one Book_articles
     * const book_articles = await prisma.book_articles.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends book_articlesUpdateArgs>(args: SelectSubset<T, book_articlesUpdateArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Book_articles.
     * @param {book_articlesDeleteManyArgs} args - Arguments to filter Book_articles to delete.
     * @example
     * // Delete a few Book_articles
     * const { count } = await prisma.book_articles.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends book_articlesDeleteManyArgs>(args?: SelectSubset<T, book_articlesDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Book_articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {book_articlesUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Book_articles
     * const book_articles = await prisma.book_articles.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends book_articlesUpdateManyArgs>(args: SelectSubset<T, book_articlesUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Book_articles and returns the data updated in the database.
     * @param {book_articlesUpdateManyAndReturnArgs} args - Arguments to update many Book_articles.
     * @example
     * // Update many Book_articles
     * const book_articles = await prisma.book_articles.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Book_articles and only return the `order`
     * const book_articlesWithOrderOnly = await prisma.book_articles.updateManyAndReturn({
     *   select: { order: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends book_articlesUpdateManyAndReturnArgs>(args: SelectSubset<T, book_articlesUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Book_articles.
     * @param {book_articlesUpsertArgs} args - Arguments to update or create a Book_articles.
     * @example
     * // Update or create a Book_articles
     * const book_articles = await prisma.book_articles.upsert({
     *   create: {
     *     // ... data to create a Book_articles
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Book_articles we want to update
     *   }
     * })
     */
    upsert<T extends book_articlesUpsertArgs>(args: SelectSubset<T, book_articlesUpsertArgs<ExtArgs>>): Prisma__book_articlesClient<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Book_articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {book_articlesCountArgs} args - Arguments to filter Book_articles to count.
     * @example
     * // Count the number of Book_articles
     * const count = await prisma.book_articles.count({
     *   where: {
     *     // ... the filter for the Book_articles we want to count
     *   }
     * })
    **/
    count<T extends book_articlesCountArgs>(
      args?: Subset<T, book_articlesCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Book_articlesCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Book_articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Book_articlesAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Book_articlesAggregateArgs>(args: Subset<T, Book_articlesAggregateArgs>): Prisma.PrismaPromise<GetBook_articlesAggregateType<T>>

    /**
     * Group by Book_articles.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {book_articlesGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends book_articlesGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: book_articlesGroupByArgs['orderBy'] }
        : { orderBy?: book_articlesGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, book_articlesGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBook_articlesGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the book_articles model
   */
  readonly fields: book_articlesFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for book_articles.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__book_articlesClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    books<T extends booksDefaultArgs<ExtArgs> = {}>(args?: Subset<T, booksDefaultArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions> | Null, Null, ExtArgs, GlobalOmitOptions>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the book_articles model
   */
  interface book_articlesFieldRefs {
    readonly order: FieldRef<"book_articles", 'Int'>
    readonly added_at: FieldRef<"book_articles", 'DateTime'>
    readonly id: FieldRef<"book_articles", 'String'>
    readonly book_id: FieldRef<"book_articles", 'String'>
    readonly article_id: FieldRef<"book_articles", 'String'>
  }
    

  // Custom InputTypes
  /**
   * book_articles findUnique
   */
  export type book_articlesFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * Filter, which book_articles to fetch.
     */
    where: book_articlesWhereUniqueInput
  }

  /**
   * book_articles findUniqueOrThrow
   */
  export type book_articlesFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * Filter, which book_articles to fetch.
     */
    where: book_articlesWhereUniqueInput
  }

  /**
   * book_articles findFirst
   */
  export type book_articlesFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * Filter, which book_articles to fetch.
     */
    where?: book_articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of book_articles to fetch.
     */
    orderBy?: book_articlesOrderByWithRelationInput | book_articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for book_articles.
     */
    cursor?: book_articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` book_articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` book_articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of book_articles.
     */
    distinct?: Book_articlesScalarFieldEnum | Book_articlesScalarFieldEnum[]
  }

  /**
   * book_articles findFirstOrThrow
   */
  export type book_articlesFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * Filter, which book_articles to fetch.
     */
    where?: book_articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of book_articles to fetch.
     */
    orderBy?: book_articlesOrderByWithRelationInput | book_articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for book_articles.
     */
    cursor?: book_articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` book_articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` book_articles.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of book_articles.
     */
    distinct?: Book_articlesScalarFieldEnum | Book_articlesScalarFieldEnum[]
  }

  /**
   * book_articles findMany
   */
  export type book_articlesFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * Filter, which book_articles to fetch.
     */
    where?: book_articlesWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of book_articles to fetch.
     */
    orderBy?: book_articlesOrderByWithRelationInput | book_articlesOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing book_articles.
     */
    cursor?: book_articlesWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` book_articles from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` book_articles.
     */
    skip?: number
    distinct?: Book_articlesScalarFieldEnum | Book_articlesScalarFieldEnum[]
  }

  /**
   * book_articles create
   */
  export type book_articlesCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * The data needed to create a book_articles.
     */
    data: XOR<book_articlesCreateInput, book_articlesUncheckedCreateInput>
  }

  /**
   * book_articles createMany
   */
  export type book_articlesCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many book_articles.
     */
    data: book_articlesCreateManyInput | book_articlesCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * book_articles createManyAndReturn
   */
  export type book_articlesCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * The data used to create many book_articles.
     */
    data: book_articlesCreateManyInput | book_articlesCreateManyInput[]
    skipDuplicates?: boolean
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesIncludeCreateManyAndReturn<ExtArgs> | null
  }

  /**
   * book_articles update
   */
  export type book_articlesUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * The data needed to update a book_articles.
     */
    data: XOR<book_articlesUpdateInput, book_articlesUncheckedUpdateInput>
    /**
     * Choose, which book_articles to update.
     */
    where: book_articlesWhereUniqueInput
  }

  /**
   * book_articles updateMany
   */
  export type book_articlesUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update book_articles.
     */
    data: XOR<book_articlesUpdateManyMutationInput, book_articlesUncheckedUpdateManyInput>
    /**
     * Filter which book_articles to update
     */
    where?: book_articlesWhereInput
    /**
     * Limit how many book_articles to update.
     */
    limit?: number
  }

  /**
   * book_articles updateManyAndReturn
   */
  export type book_articlesUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * The data used to update book_articles.
     */
    data: XOR<book_articlesUpdateManyMutationInput, book_articlesUncheckedUpdateManyInput>
    /**
     * Filter which book_articles to update
     */
    where?: book_articlesWhereInput
    /**
     * Limit how many book_articles to update.
     */
    limit?: number
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesIncludeUpdateManyAndReturn<ExtArgs> | null
  }

  /**
   * book_articles upsert
   */
  export type book_articlesUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * The filter to search for the book_articles to update in case it exists.
     */
    where: book_articlesWhereUniqueInput
    /**
     * In case the book_articles found by the `where` argument doesn't exist, create a new book_articles with this data.
     */
    create: XOR<book_articlesCreateInput, book_articlesUncheckedCreateInput>
    /**
     * In case the book_articles was found with the provided `where` argument, update it with this data.
     */
    update: XOR<book_articlesUpdateInput, book_articlesUncheckedUpdateInput>
  }

  /**
   * book_articles delete
   */
  export type book_articlesDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    /**
     * Filter which book_articles to delete.
     */
    where: book_articlesWhereUniqueInput
  }

  /**
   * book_articles deleteMany
   */
  export type book_articlesDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which book_articles to delete
     */
    where?: book_articlesWhereInput
    /**
     * Limit how many book_articles to delete.
     */
    limit?: number
  }

  /**
   * book_articles without action
   */
  export type book_articlesDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
  }


  /**
   * Model books
   */

  export type AggregateBooks = {
    _count: BooksCountAggregateOutputType | null
    _min: BooksMinAggregateOutputType | null
    _max: BooksMaxAggregateOutputType | null
  }

  export type BooksMinAggregateOutputType = {
    title: string | null
    description: string | null
    cover_image_url: string | null
    is_public: boolean | null
    created_at: Date | null
    updated_at: Date | null
    id: string | null
    user_id: string | null
  }

  export type BooksMaxAggregateOutputType = {
    title: string | null
    description: string | null
    cover_image_url: string | null
    is_public: boolean | null
    created_at: Date | null
    updated_at: Date | null
    id: string | null
    user_id: string | null
  }

  export type BooksCountAggregateOutputType = {
    title: number
    description: number
    cover_image_url: number
    is_public: number
    created_at: number
    updated_at: number
    id: number
    user_id: number
    _all: number
  }


  export type BooksMinAggregateInputType = {
    title?: true
    description?: true
    cover_image_url?: true
    is_public?: true
    created_at?: true
    updated_at?: true
    id?: true
    user_id?: true
  }

  export type BooksMaxAggregateInputType = {
    title?: true
    description?: true
    cover_image_url?: true
    is_public?: true
    created_at?: true
    updated_at?: true
    id?: true
    user_id?: true
  }

  export type BooksCountAggregateInputType = {
    title?: true
    description?: true
    cover_image_url?: true
    is_public?: true
    created_at?: true
    updated_at?: true
    id?: true
    user_id?: true
    _all?: true
  }

  export type BooksAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which books to aggregate.
     */
    where?: booksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books to fetch.
     */
    orderBy?: booksOrderByWithRelationInput | booksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: booksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned books
    **/
    _count?: true | BooksCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BooksMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BooksMaxAggregateInputType
  }

  export type GetBooksAggregateType<T extends BooksAggregateArgs> = {
        [P in keyof T & keyof AggregateBooks]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBooks[P]>
      : GetScalarType<T[P], AggregateBooks[P]>
  }




  export type booksGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: booksWhereInput
    orderBy?: booksOrderByWithAggregationInput | booksOrderByWithAggregationInput[]
    by: BooksScalarFieldEnum[] | BooksScalarFieldEnum
    having?: booksScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BooksCountAggregateInputType | true
    _min?: BooksMinAggregateInputType
    _max?: BooksMaxAggregateInputType
  }

  export type BooksGroupByOutputType = {
    title: string
    description: string
    cover_image_url: string | null
    is_public: boolean
    created_at: Date
    updated_at: Date
    id: string
    user_id: string
    _count: BooksCountAggregateOutputType | null
    _min: BooksMinAggregateOutputType | null
    _max: BooksMaxAggregateOutputType | null
  }

  type GetBooksGroupByPayload<T extends booksGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BooksGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BooksGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BooksGroupByOutputType[P]>
            : GetScalarType<T[P], BooksGroupByOutputType[P]>
        }
      >
    >


  export type booksSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    title?: boolean
    description?: boolean
    cover_image_url?: boolean
    is_public?: boolean
    created_at?: boolean
    updated_at?: boolean
    id?: boolean
    user_id?: boolean
    book_articles?: boolean | books$book_articlesArgs<ExtArgs>
    _count?: boolean | BooksCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["books"]>

  export type booksSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    title?: boolean
    description?: boolean
    cover_image_url?: boolean
    is_public?: boolean
    created_at?: boolean
    updated_at?: boolean
    id?: boolean
    user_id?: boolean
  }, ExtArgs["result"]["books"]>

  export type booksSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    title?: boolean
    description?: boolean
    cover_image_url?: boolean
    is_public?: boolean
    created_at?: boolean
    updated_at?: boolean
    id?: boolean
    user_id?: boolean
  }, ExtArgs["result"]["books"]>

  export type booksSelectScalar = {
    title?: boolean
    description?: boolean
    cover_image_url?: boolean
    is_public?: boolean
    created_at?: boolean
    updated_at?: boolean
    id?: boolean
    user_id?: boolean
  }

  export type booksOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"title" | "description" | "cover_image_url" | "is_public" | "created_at" | "updated_at" | "id" | "user_id", ExtArgs["result"]["books"]>
  export type booksInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    book_articles?: boolean | books$book_articlesArgs<ExtArgs>
    _count?: boolean | BooksCountOutputTypeDefaultArgs<ExtArgs>
  }
  export type booksIncludeCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}
  export type booksIncludeUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {}

  export type $booksPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "books"
    objects: {
      book_articles: Prisma.$book_articlesPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      title: string
      description: string
      cover_image_url: string | null
      is_public: boolean
      created_at: Date
      updated_at: Date
      id: string
      user_id: string
    }, ExtArgs["result"]["books"]>
    composites: {}
  }

  type booksGetPayload<S extends boolean | null | undefined | booksDefaultArgs> = $Result.GetResult<Prisma.$booksPayload, S>

  type booksCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<booksFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: BooksCountAggregateInputType | true
    }

  export interface booksDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['books'], meta: { name: 'books' } }
    /**
     * Find zero or one Books that matches the filter.
     * @param {booksFindUniqueArgs} args - Arguments to find a Books
     * @example
     * // Get one Books
     * const books = await prisma.books.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends booksFindUniqueArgs>(args: SelectSubset<T, booksFindUniqueArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Books that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {booksFindUniqueOrThrowArgs} args - Arguments to find a Books
     * @example
     * // Get one Books
     * const books = await prisma.books.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends booksFindUniqueOrThrowArgs>(args: SelectSubset<T, booksFindUniqueOrThrowArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Books that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {booksFindFirstArgs} args - Arguments to find a Books
     * @example
     * // Get one Books
     * const books = await prisma.books.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends booksFindFirstArgs>(args?: SelectSubset<T, booksFindFirstArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Books that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {booksFindFirstOrThrowArgs} args - Arguments to find a Books
     * @example
     * // Get one Books
     * const books = await prisma.books.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends booksFindFirstOrThrowArgs>(args?: SelectSubset<T, booksFindFirstOrThrowArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Books that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {booksFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Books
     * const books = await prisma.books.findMany()
     * 
     * // Get first 10 Books
     * const books = await prisma.books.findMany({ take: 10 })
     * 
     * // Only select the `title`
     * const booksWithTitleOnly = await prisma.books.findMany({ select: { title: true } })
     * 
     */
    findMany<T extends booksFindManyArgs>(args?: SelectSubset<T, booksFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Books.
     * @param {booksCreateArgs} args - Arguments to create a Books.
     * @example
     * // Create one Books
     * const Books = await prisma.books.create({
     *   data: {
     *     // ... data to create a Books
     *   }
     * })
     * 
     */
    create<T extends booksCreateArgs>(args: SelectSubset<T, booksCreateArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Books.
     * @param {booksCreateManyArgs} args - Arguments to create many Books.
     * @example
     * // Create many Books
     * const books = await prisma.books.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends booksCreateManyArgs>(args?: SelectSubset<T, booksCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Books and returns the data saved in the database.
     * @param {booksCreateManyAndReturnArgs} args - Arguments to create many Books.
     * @example
     * // Create many Books
     * const books = await prisma.books.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Books and only return the `title`
     * const booksWithTitleOnly = await prisma.books.createManyAndReturn({
     *   select: { title: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends booksCreateManyAndReturnArgs>(args?: SelectSubset<T, booksCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Books.
     * @param {booksDeleteArgs} args - Arguments to delete one Books.
     * @example
     * // Delete one Books
     * const Books = await prisma.books.delete({
     *   where: {
     *     // ... filter to delete one Books
     *   }
     * })
     * 
     */
    delete<T extends booksDeleteArgs>(args: SelectSubset<T, booksDeleteArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Books.
     * @param {booksUpdateArgs} args - Arguments to update one Books.
     * @example
     * // Update one Books
     * const books = await prisma.books.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends booksUpdateArgs>(args: SelectSubset<T, booksUpdateArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Books.
     * @param {booksDeleteManyArgs} args - Arguments to filter Books to delete.
     * @example
     * // Delete a few Books
     * const { count } = await prisma.books.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends booksDeleteManyArgs>(args?: SelectSubset<T, booksDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Books.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {booksUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Books
     * const books = await prisma.books.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends booksUpdateManyArgs>(args: SelectSubset<T, booksUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Books and returns the data updated in the database.
     * @param {booksUpdateManyAndReturnArgs} args - Arguments to update many Books.
     * @example
     * // Update many Books
     * const books = await prisma.books.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Books and only return the `title`
     * const booksWithTitleOnly = await prisma.books.updateManyAndReturn({
     *   select: { title: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends booksUpdateManyAndReturnArgs>(args: SelectSubset<T, booksUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Books.
     * @param {booksUpsertArgs} args - Arguments to update or create a Books.
     * @example
     * // Update or create a Books
     * const books = await prisma.books.upsert({
     *   create: {
     *     // ... data to create a Books
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Books we want to update
     *   }
     * })
     */
    upsert<T extends booksUpsertArgs>(args: SelectSubset<T, booksUpsertArgs<ExtArgs>>): Prisma__booksClient<$Result.GetResult<Prisma.$booksPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Books.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {booksCountArgs} args - Arguments to filter Books to count.
     * @example
     * // Count the number of Books
     * const count = await prisma.books.count({
     *   where: {
     *     // ... the filter for the Books we want to count
     *   }
     * })
    **/
    count<T extends booksCountArgs>(
      args?: Subset<T, booksCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BooksCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Books.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BooksAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BooksAggregateArgs>(args: Subset<T, BooksAggregateArgs>): Prisma.PrismaPromise<GetBooksAggregateType<T>>

    /**
     * Group by Books.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {booksGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends booksGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: booksGroupByArgs['orderBy'] }
        : { orderBy?: booksGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, booksGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBooksGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the books model
   */
  readonly fields: booksFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for books.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__booksClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    book_articles<T extends books$book_articlesArgs<ExtArgs> = {}>(args?: Subset<T, books$book_articlesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$book_articlesPayload<ExtArgs>, T, "findMany", GlobalOmitOptions> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the books model
   */
  interface booksFieldRefs {
    readonly title: FieldRef<"books", 'String'>
    readonly description: FieldRef<"books", 'String'>
    readonly cover_image_url: FieldRef<"books", 'String'>
    readonly is_public: FieldRef<"books", 'Boolean'>
    readonly created_at: FieldRef<"books", 'DateTime'>
    readonly updated_at: FieldRef<"books", 'DateTime'>
    readonly id: FieldRef<"books", 'String'>
    readonly user_id: FieldRef<"books", 'String'>
  }
    

  // Custom InputTypes
  /**
   * books findUnique
   */
  export type booksFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * Filter, which books to fetch.
     */
    where: booksWhereUniqueInput
  }

  /**
   * books findUniqueOrThrow
   */
  export type booksFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * Filter, which books to fetch.
     */
    where: booksWhereUniqueInput
  }

  /**
   * books findFirst
   */
  export type booksFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * Filter, which books to fetch.
     */
    where?: booksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books to fetch.
     */
    orderBy?: booksOrderByWithRelationInput | booksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for books.
     */
    cursor?: booksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of books.
     */
    distinct?: BooksScalarFieldEnum | BooksScalarFieldEnum[]
  }

  /**
   * books findFirstOrThrow
   */
  export type booksFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * Filter, which books to fetch.
     */
    where?: booksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books to fetch.
     */
    orderBy?: booksOrderByWithRelationInput | booksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for books.
     */
    cursor?: booksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of books.
     */
    distinct?: BooksScalarFieldEnum | BooksScalarFieldEnum[]
  }

  /**
   * books findMany
   */
  export type booksFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * Filter, which books to fetch.
     */
    where?: booksWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of books to fetch.
     */
    orderBy?: booksOrderByWithRelationInput | booksOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing books.
     */
    cursor?: booksWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` books from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` books.
     */
    skip?: number
    distinct?: BooksScalarFieldEnum | BooksScalarFieldEnum[]
  }

  /**
   * books create
   */
  export type booksCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * The data needed to create a books.
     */
    data: XOR<booksCreateInput, booksUncheckedCreateInput>
  }

  /**
   * books createMany
   */
  export type booksCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many books.
     */
    data: booksCreateManyInput | booksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * books createManyAndReturn
   */
  export type booksCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * The data used to create many books.
     */
    data: booksCreateManyInput | booksCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * books update
   */
  export type booksUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * The data needed to update a books.
     */
    data: XOR<booksUpdateInput, booksUncheckedUpdateInput>
    /**
     * Choose, which books to update.
     */
    where: booksWhereUniqueInput
  }

  /**
   * books updateMany
   */
  export type booksUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update books.
     */
    data: XOR<booksUpdateManyMutationInput, booksUncheckedUpdateManyInput>
    /**
     * Filter which books to update
     */
    where?: booksWhereInput
    /**
     * Limit how many books to update.
     */
    limit?: number
  }

  /**
   * books updateManyAndReturn
   */
  export type booksUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * The data used to update books.
     */
    data: XOR<booksUpdateManyMutationInput, booksUncheckedUpdateManyInput>
    /**
     * Filter which books to update
     */
    where?: booksWhereInput
    /**
     * Limit how many books to update.
     */
    limit?: number
  }

  /**
   * books upsert
   */
  export type booksUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * The filter to search for the books to update in case it exists.
     */
    where: booksWhereUniqueInput
    /**
     * In case the books found by the `where` argument doesn't exist, create a new books with this data.
     */
    create: XOR<booksCreateInput, booksUncheckedCreateInput>
    /**
     * In case the books was found with the provided `where` argument, update it with this data.
     */
    update: XOR<booksUpdateInput, booksUncheckedUpdateInput>
  }

  /**
   * books delete
   */
  export type booksDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
    /**
     * Filter which books to delete.
     */
    where: booksWhereUniqueInput
  }

  /**
   * books deleteMany
   */
  export type booksDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which books to delete
     */
    where?: booksWhereInput
    /**
     * Limit how many books to delete.
     */
    limit?: number
  }

  /**
   * books.book_articles
   */
  export type books$book_articlesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the book_articles
     */
    select?: book_articlesSelect<ExtArgs> | null
    /**
     * Omit specific fields from the book_articles
     */
    omit?: book_articlesOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: book_articlesInclude<ExtArgs> | null
    where?: book_articlesWhereInput
    orderBy?: book_articlesOrderByWithRelationInput | book_articlesOrderByWithRelationInput[]
    cursor?: book_articlesWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Book_articlesScalarFieldEnum | Book_articlesScalarFieldEnum[]
  }

  /**
   * books without action
   */
  export type booksDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the books
     */
    select?: booksSelect<ExtArgs> | null
    /**
     * Omit specific fields from the books
     */
    omit?: booksOmit<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: booksInclude<ExtArgs> | null
  }


  /**
   * Model spatial_ref_sys
   */

  export type AggregateSpatial_ref_sys = {
    _count: Spatial_ref_sysCountAggregateOutputType | null
    _avg: Spatial_ref_sysAvgAggregateOutputType | null
    _sum: Spatial_ref_sysSumAggregateOutputType | null
    _min: Spatial_ref_sysMinAggregateOutputType | null
    _max: Spatial_ref_sysMaxAggregateOutputType | null
  }

  export type Spatial_ref_sysAvgAggregateOutputType = {
    srid: number | null
    auth_srid: number | null
  }

  export type Spatial_ref_sysSumAggregateOutputType = {
    srid: number | null
    auth_srid: number | null
  }

  export type Spatial_ref_sysMinAggregateOutputType = {
    srid: number | null
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
  }

  export type Spatial_ref_sysMaxAggregateOutputType = {
    srid: number | null
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
  }

  export type Spatial_ref_sysCountAggregateOutputType = {
    srid: number
    auth_name: number
    auth_srid: number
    srtext: number
    proj4text: number
    _all: number
  }


  export type Spatial_ref_sysAvgAggregateInputType = {
    srid?: true
    auth_srid?: true
  }

  export type Spatial_ref_sysSumAggregateInputType = {
    srid?: true
    auth_srid?: true
  }

  export type Spatial_ref_sysMinAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
  }

  export type Spatial_ref_sysMaxAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
  }

  export type Spatial_ref_sysCountAggregateInputType = {
    srid?: true
    auth_name?: true
    auth_srid?: true
    srtext?: true
    proj4text?: true
    _all?: true
  }

  export type Spatial_ref_sysAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spatial_ref_sys to aggregate.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned spatial_ref_sys
    **/
    _count?: true | Spatial_ref_sysCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Spatial_ref_sysAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Spatial_ref_sysSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Spatial_ref_sysMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Spatial_ref_sysMaxAggregateInputType
  }

  export type GetSpatial_ref_sysAggregateType<T extends Spatial_ref_sysAggregateArgs> = {
        [P in keyof T & keyof AggregateSpatial_ref_sys]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpatial_ref_sys[P]>
      : GetScalarType<T[P], AggregateSpatial_ref_sys[P]>
  }




  export type spatial_ref_sysGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: spatial_ref_sysWhereInput
    orderBy?: spatial_ref_sysOrderByWithAggregationInput | spatial_ref_sysOrderByWithAggregationInput[]
    by: Spatial_ref_sysScalarFieldEnum[] | Spatial_ref_sysScalarFieldEnum
    having?: spatial_ref_sysScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Spatial_ref_sysCountAggregateInputType | true
    _avg?: Spatial_ref_sysAvgAggregateInputType
    _sum?: Spatial_ref_sysSumAggregateInputType
    _min?: Spatial_ref_sysMinAggregateInputType
    _max?: Spatial_ref_sysMaxAggregateInputType
  }

  export type Spatial_ref_sysGroupByOutputType = {
    srid: number
    auth_name: string | null
    auth_srid: number | null
    srtext: string | null
    proj4text: string | null
    _count: Spatial_ref_sysCountAggregateOutputType | null
    _avg: Spatial_ref_sysAvgAggregateOutputType | null
    _sum: Spatial_ref_sysSumAggregateOutputType | null
    _min: Spatial_ref_sysMinAggregateOutputType | null
    _max: Spatial_ref_sysMaxAggregateOutputType | null
  }

  type GetSpatial_ref_sysGroupByPayload<T extends spatial_ref_sysGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Spatial_ref_sysGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Spatial_ref_sysGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Spatial_ref_sysGroupByOutputType[P]>
            : GetScalarType<T[P], Spatial_ref_sysGroupByOutputType[P]>
        }
      >
    >


  export type spatial_ref_sysSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectCreateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectUpdateManyAndReturn<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }, ExtArgs["result"]["spatial_ref_sys"]>

  export type spatial_ref_sysSelectScalar = {
    srid?: boolean
    auth_name?: boolean
    auth_srid?: boolean
    srtext?: boolean
    proj4text?: boolean
  }

  export type spatial_ref_sysOmit<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetOmit<"srid" | "auth_name" | "auth_srid" | "srtext" | "proj4text", ExtArgs["result"]["spatial_ref_sys"]>

  export type $spatial_ref_sysPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "spatial_ref_sys"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      srid: number
      auth_name: string | null
      auth_srid: number | null
      srtext: string | null
      proj4text: string | null
    }, ExtArgs["result"]["spatial_ref_sys"]>
    composites: {}
  }

  type spatial_ref_sysGetPayload<S extends boolean | null | undefined | spatial_ref_sysDefaultArgs> = $Result.GetResult<Prisma.$spatial_ref_sysPayload, S>

  type spatial_ref_sysCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> =
    Omit<spatial_ref_sysFindManyArgs, 'select' | 'include' | 'distinct' | 'omit'> & {
      select?: Spatial_ref_sysCountAggregateInputType | true
    }

  export interface spatial_ref_sysDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['spatial_ref_sys'], meta: { name: 'spatial_ref_sys' } }
    /**
     * Find zero or one Spatial_ref_sys that matches the filter.
     * @param {spatial_ref_sysFindUniqueArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends spatial_ref_sysFindUniqueArgs>(args: SelectSubset<T, spatial_ref_sysFindUniqueArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findUnique", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find one Spatial_ref_sys that matches the filter or throw an error with `error.code='P2025'`
     * if no matches were found.
     * @param {spatial_ref_sysFindUniqueOrThrowArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends spatial_ref_sysFindUniqueOrThrowArgs>(args: SelectSubset<T, spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findUniqueOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spatial_ref_sys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindFirstArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends spatial_ref_sysFindFirstArgs>(args?: SelectSubset<T, spatial_ref_sysFindFirstArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findFirst", GlobalOmitOptions> | null, null, ExtArgs, GlobalOmitOptions>

    /**
     * Find the first Spatial_ref_sys that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindFirstOrThrowArgs} args - Arguments to find a Spatial_ref_sys
     * @example
     * // Get one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends spatial_ref_sysFindFirstOrThrowArgs>(args?: SelectSubset<T, spatial_ref_sysFindFirstOrThrowArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findFirstOrThrow", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Find zero or more Spatial_ref_sys that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany()
     * 
     * // Get first 10 Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.findMany({ take: 10 })
     * 
     * // Only select the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.findMany({ select: { srid: true } })
     * 
     */
    findMany<T extends spatial_ref_sysFindManyArgs>(args?: SelectSubset<T, spatial_ref_sysFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "findMany", GlobalOmitOptions>>

    /**
     * Create a Spatial_ref_sys.
     * @param {spatial_ref_sysCreateArgs} args - Arguments to create a Spatial_ref_sys.
     * @example
     * // Create one Spatial_ref_sys
     * const Spatial_ref_sys = await prisma.spatial_ref_sys.create({
     *   data: {
     *     // ... data to create a Spatial_ref_sys
     *   }
     * })
     * 
     */
    create<T extends spatial_ref_sysCreateArgs>(args: SelectSubset<T, spatial_ref_sysCreateArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "create", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Create many Spatial_ref_sys.
     * @param {spatial_ref_sysCreateManyArgs} args - Arguments to create many Spatial_ref_sys.
     * @example
     * // Create many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends spatial_ref_sysCreateManyArgs>(args?: SelectSubset<T, spatial_ref_sysCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create many Spatial_ref_sys and returns the data saved in the database.
     * @param {spatial_ref_sysCreateManyAndReturnArgs} args - Arguments to create many Spatial_ref_sys.
     * @example
     * // Create many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.createManyAndReturn({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Create many Spatial_ref_sys and only return the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.createManyAndReturn({
     *   select: { srid: true },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    createManyAndReturn<T extends spatial_ref_sysCreateManyAndReturnArgs>(args?: SelectSubset<T, spatial_ref_sysCreateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "createManyAndReturn", GlobalOmitOptions>>

    /**
     * Delete a Spatial_ref_sys.
     * @param {spatial_ref_sysDeleteArgs} args - Arguments to delete one Spatial_ref_sys.
     * @example
     * // Delete one Spatial_ref_sys
     * const Spatial_ref_sys = await prisma.spatial_ref_sys.delete({
     *   where: {
     *     // ... filter to delete one Spatial_ref_sys
     *   }
     * })
     * 
     */
    delete<T extends spatial_ref_sysDeleteArgs>(args: SelectSubset<T, spatial_ref_sysDeleteArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "delete", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Update one Spatial_ref_sys.
     * @param {spatial_ref_sysUpdateArgs} args - Arguments to update one Spatial_ref_sys.
     * @example
     * // Update one Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends spatial_ref_sysUpdateArgs>(args: SelectSubset<T, spatial_ref_sysUpdateArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "update", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>

    /**
     * Delete zero or more Spatial_ref_sys.
     * @param {spatial_ref_sysDeleteManyArgs} args - Arguments to filter Spatial_ref_sys to delete.
     * @example
     * // Delete a few Spatial_ref_sys
     * const { count } = await prisma.spatial_ref_sys.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends spatial_ref_sysDeleteManyArgs>(args?: SelectSubset<T, spatial_ref_sysDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends spatial_ref_sysUpdateManyArgs>(args: SelectSubset<T, spatial_ref_sysUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Spatial_ref_sys and returns the data updated in the database.
     * @param {spatial_ref_sysUpdateManyAndReturnArgs} args - Arguments to update many Spatial_ref_sys.
     * @example
     * // Update many Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.updateManyAndReturn({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * 
     * // Update zero or more Spatial_ref_sys and only return the `srid`
     * const spatial_ref_sysWithSridOnly = await prisma.spatial_ref_sys.updateManyAndReturn({
     *   select: { srid: true },
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * 
     */
    updateManyAndReturn<T extends spatial_ref_sysUpdateManyAndReturnArgs>(args: SelectSubset<T, spatial_ref_sysUpdateManyAndReturnArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "updateManyAndReturn", GlobalOmitOptions>>

    /**
     * Create or update one Spatial_ref_sys.
     * @param {spatial_ref_sysUpsertArgs} args - Arguments to update or create a Spatial_ref_sys.
     * @example
     * // Update or create a Spatial_ref_sys
     * const spatial_ref_sys = await prisma.spatial_ref_sys.upsert({
     *   create: {
     *     // ... data to create a Spatial_ref_sys
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Spatial_ref_sys we want to update
     *   }
     * })
     */
    upsert<T extends spatial_ref_sysUpsertArgs>(args: SelectSubset<T, spatial_ref_sysUpsertArgs<ExtArgs>>): Prisma__spatial_ref_sysClient<$Result.GetResult<Prisma.$spatial_ref_sysPayload<ExtArgs>, T, "upsert", GlobalOmitOptions>, never, ExtArgs, GlobalOmitOptions>


    /**
     * Count the number of Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysCountArgs} args - Arguments to filter Spatial_ref_sys to count.
     * @example
     * // Count the number of Spatial_ref_sys
     * const count = await prisma.spatial_ref_sys.count({
     *   where: {
     *     // ... the filter for the Spatial_ref_sys we want to count
     *   }
     * })
    **/
    count<T extends spatial_ref_sysCountArgs>(
      args?: Subset<T, spatial_ref_sysCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Spatial_ref_sysCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Spatial_ref_sysAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Spatial_ref_sysAggregateArgs>(args: Subset<T, Spatial_ref_sysAggregateArgs>): Prisma.PrismaPromise<GetSpatial_ref_sysAggregateType<T>>

    /**
     * Group by Spatial_ref_sys.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {spatial_ref_sysGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends spatial_ref_sysGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: spatial_ref_sysGroupByArgs['orderBy'] }
        : { orderBy?: spatial_ref_sysGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, spatial_ref_sysGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpatial_ref_sysGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the spatial_ref_sys model
   */
  readonly fields: spatial_ref_sysFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for spatial_ref_sys.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__spatial_ref_sysClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, GlobalOmitOptions = {}> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the spatial_ref_sys model
   */
  interface spatial_ref_sysFieldRefs {
    readonly srid: FieldRef<"spatial_ref_sys", 'Int'>
    readonly auth_name: FieldRef<"spatial_ref_sys", 'String'>
    readonly auth_srid: FieldRef<"spatial_ref_sys", 'Int'>
    readonly srtext: FieldRef<"spatial_ref_sys", 'String'>
    readonly proj4text: FieldRef<"spatial_ref_sys", 'String'>
  }
    

  // Custom InputTypes
  /**
   * spatial_ref_sys findUnique
   */
  export type spatial_ref_sysFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys findUniqueOrThrow
   */
  export type spatial_ref_sysFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys findFirst
   */
  export type spatial_ref_sysFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spatial_ref_sys.
     */
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys findFirstOrThrow
   */
  export type spatial_ref_sysFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of spatial_ref_sys.
     */
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys findMany
   */
  export type spatial_ref_sysFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter, which spatial_ref_sys to fetch.
     */
    where?: spatial_ref_sysWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of spatial_ref_sys to fetch.
     */
    orderBy?: spatial_ref_sysOrderByWithRelationInput | spatial_ref_sysOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing spatial_ref_sys.
     */
    cursor?: spatial_ref_sysWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` spatial_ref_sys from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` spatial_ref_sys.
     */
    skip?: number
    distinct?: Spatial_ref_sysScalarFieldEnum | Spatial_ref_sysScalarFieldEnum[]
  }

  /**
   * spatial_ref_sys create
   */
  export type spatial_ref_sysCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data needed to create a spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysCreateInput, spatial_ref_sysUncheckedCreateInput>
  }

  /**
   * spatial_ref_sys createMany
   */
  export type spatial_ref_sysCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many spatial_ref_sys.
     */
    data: spatial_ref_sysCreateManyInput | spatial_ref_sysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spatial_ref_sys createManyAndReturn
   */
  export type spatial_ref_sysCreateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelectCreateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data used to create many spatial_ref_sys.
     */
    data: spatial_ref_sysCreateManyInput | spatial_ref_sysCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * spatial_ref_sys update
   */
  export type spatial_ref_sysUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data needed to update a spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateInput, spatial_ref_sysUncheckedUpdateInput>
    /**
     * Choose, which spatial_ref_sys to update.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys updateMany
   */
  export type spatial_ref_sysUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateManyMutationInput, spatial_ref_sysUncheckedUpdateManyInput>
    /**
     * Filter which spatial_ref_sys to update
     */
    where?: spatial_ref_sysWhereInput
    /**
     * Limit how many spatial_ref_sys to update.
     */
    limit?: number
  }

  /**
   * spatial_ref_sys updateManyAndReturn
   */
  export type spatial_ref_sysUpdateManyAndReturnArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelectUpdateManyAndReturn<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The data used to update spatial_ref_sys.
     */
    data: XOR<spatial_ref_sysUpdateManyMutationInput, spatial_ref_sysUncheckedUpdateManyInput>
    /**
     * Filter which spatial_ref_sys to update
     */
    where?: spatial_ref_sysWhereInput
    /**
     * Limit how many spatial_ref_sys to update.
     */
    limit?: number
  }

  /**
   * spatial_ref_sys upsert
   */
  export type spatial_ref_sysUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * The filter to search for the spatial_ref_sys to update in case it exists.
     */
    where: spatial_ref_sysWhereUniqueInput
    /**
     * In case the spatial_ref_sys found by the `where` argument doesn't exist, create a new spatial_ref_sys with this data.
     */
    create: XOR<spatial_ref_sysCreateInput, spatial_ref_sysUncheckedCreateInput>
    /**
     * In case the spatial_ref_sys was found with the provided `where` argument, update it with this data.
     */
    update: XOR<spatial_ref_sysUpdateInput, spatial_ref_sysUncheckedUpdateInput>
  }

  /**
   * spatial_ref_sys delete
   */
  export type spatial_ref_sysDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
    /**
     * Filter which spatial_ref_sys to delete.
     */
    where: spatial_ref_sysWhereUniqueInput
  }

  /**
   * spatial_ref_sys deleteMany
   */
  export type spatial_ref_sysDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which spatial_ref_sys to delete
     */
    where?: spatial_ref_sysWhereInput
    /**
     * Limit how many spatial_ref_sys to delete.
     */
    limit?: number
  }

  /**
   * spatial_ref_sys without action
   */
  export type spatial_ref_sysDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the spatial_ref_sys
     */
    select?: spatial_ref_sysSelect<ExtArgs> | null
    /**
     * Omit specific fields from the spatial_ref_sys
     */
    omit?: spatial_ref_sysOmit<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const Article_entitiesScalarFieldEnum: {
    article_id: 'article_id',
    entity_id: 'entity_id'
  };

  export type Article_entitiesScalarFieldEnum = (typeof Article_entitiesScalarFieldEnum)[keyof typeof Article_entitiesScalarFieldEnum]


  export const ArticlesScalarFieldEnum: {
    id: 'id',
    source: 'source',
    title: 'title',
    url: 'url',
    image_url: 'image_url',
    published_at: 'published_at',
    category: 'category',
    author: 'author',
    content: 'content',
    summary: 'summary',
    lat: 'lat',
    lng: 'lng',
    location_name: 'location_name',
    sentiment: 'sentiment',
    significance: 'significance',
    created_at: 'created_at',
    future_implications: 'future_implications'
  };

  export type ArticlesScalarFieldEnum = (typeof ArticlesScalarFieldEnum)[keyof typeof ArticlesScalarFieldEnum]


  export const EntitiesScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    description: 'description',
    wiki_url: 'wiki_url',
    created_at: 'created_at'
  };

  export type EntitiesScalarFieldEnum = (typeof EntitiesScalarFieldEnum)[keyof typeof EntitiesScalarFieldEnum]


  export const User_article_viewsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    article_id: 'article_id',
    viewed_at: 'viewed_at',
    liked: 'liked',
    bookmarked: 'bookmarked'
  };

  export type User_article_viewsScalarFieldEnum = (typeof User_article_viewsScalarFieldEnum)[keyof typeof User_article_viewsScalarFieldEnum]


  export const Public_usersScalarFieldEnum: {
    id: 'id',
    name: 'name',
    email: 'email',
    password: 'password',
    preferences: 'preferences',
    created_at: 'created_at',
    last_active: 'last_active'
  };

  export type Public_usersScalarFieldEnum = (typeof Public_usersScalarFieldEnum)[keyof typeof Public_usersScalarFieldEnum]


  export const Weekly_forecastsScalarFieldEnum: {
    id: 'id',
    week_start: 'week_start',
    generated_at: 'generated_at',
    content: 'content'
  };

  export type Weekly_forecastsScalarFieldEnum = (typeof Weekly_forecastsScalarFieldEnum)[keyof typeof Weekly_forecastsScalarFieldEnum]


  export const Article_tagsScalarFieldEnum: {
    article_id: 'article_id',
    tag_id: 'tag_id'
  };

  export type Article_tagsScalarFieldEnum = (typeof Article_tagsScalarFieldEnum)[keyof typeof Article_tagsScalarFieldEnum]


  export const Bookmark_foldersScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    name: 'name',
    is_standard: 'is_standard',
    created_at: 'created_at'
  };

  export type Bookmark_foldersScalarFieldEnum = (typeof Bookmark_foldersScalarFieldEnum)[keyof typeof Bookmark_foldersScalarFieldEnum]


  export const BookmarksScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    article_id: 'article_id',
    folder_id: 'folder_id',
    bookmarked_at: 'bookmarked_at'
  };

  export type BookmarksScalarFieldEnum = (typeof BookmarksScalarFieldEnum)[keyof typeof BookmarksScalarFieldEnum]


  export const Geo_eventsScalarFieldEnum: {
    id: 'id',
    article_id: 'article_id',
    lat: 'lat',
    lng: 'lng',
    zoom_level: 'zoom_level',
    label: 'label',
    created_at: 'created_at'
  };

  export type Geo_eventsScalarFieldEnum = (typeof Geo_eventsScalarFieldEnum)[keyof typeof Geo_eventsScalarFieldEnum]


  export const LikesScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    article_id: 'article_id',
    liked_at: 'liked_at'
  };

  export type LikesScalarFieldEnum = (typeof LikesScalarFieldEnum)[keyof typeof LikesScalarFieldEnum]


  export const TagsScalarFieldEnum: {
    id: 'id',
    name: 'name'
  };

  export type TagsScalarFieldEnum = (typeof TagsScalarFieldEnum)[keyof typeof TagsScalarFieldEnum]


  export const ViewsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    article_id: 'article_id',
    viewed_at: 'viewed_at'
  };

  export type ViewsScalarFieldEnum = (typeof ViewsScalarFieldEnum)[keyof typeof ViewsScalarFieldEnum]


  export const Audit_log_entriesScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    payload: 'payload',
    created_at: 'created_at',
    ip_address: 'ip_address'
  };

  export type Audit_log_entriesScalarFieldEnum = (typeof Audit_log_entriesScalarFieldEnum)[keyof typeof Audit_log_entriesScalarFieldEnum]


  export const Flow_stateScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    auth_code: 'auth_code',
    code_challenge_method: 'code_challenge_method',
    code_challenge: 'code_challenge',
    provider_type: 'provider_type',
    provider_access_token: 'provider_access_token',
    provider_refresh_token: 'provider_refresh_token',
    created_at: 'created_at',
    updated_at: 'updated_at',
    authentication_method: 'authentication_method',
    auth_code_issued_at: 'auth_code_issued_at'
  };

  export type Flow_stateScalarFieldEnum = (typeof Flow_stateScalarFieldEnum)[keyof typeof Flow_stateScalarFieldEnum]


  export const IdentitiesScalarFieldEnum: {
    provider_id: 'provider_id',
    user_id: 'user_id',
    identity_data: 'identity_data',
    provider: 'provider',
    last_sign_in_at: 'last_sign_in_at',
    created_at: 'created_at',
    updated_at: 'updated_at',
    email: 'email',
    id: 'id'
  };

  export type IdentitiesScalarFieldEnum = (typeof IdentitiesScalarFieldEnum)[keyof typeof IdentitiesScalarFieldEnum]


  export const InstancesScalarFieldEnum: {
    id: 'id',
    uuid: 'uuid',
    raw_base_config: 'raw_base_config',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type InstancesScalarFieldEnum = (typeof InstancesScalarFieldEnum)[keyof typeof InstancesScalarFieldEnum]


  export const Mfa_amr_claimsScalarFieldEnum: {
    session_id: 'session_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    authentication_method: 'authentication_method',
    id: 'id'
  };

  export type Mfa_amr_claimsScalarFieldEnum = (typeof Mfa_amr_claimsScalarFieldEnum)[keyof typeof Mfa_amr_claimsScalarFieldEnum]


  export const Mfa_challengesScalarFieldEnum: {
    id: 'id',
    factor_id: 'factor_id',
    created_at: 'created_at',
    verified_at: 'verified_at',
    ip_address: 'ip_address',
    otp_code: 'otp_code',
    web_authn_session_data: 'web_authn_session_data'
  };

  export type Mfa_challengesScalarFieldEnum = (typeof Mfa_challengesScalarFieldEnum)[keyof typeof Mfa_challengesScalarFieldEnum]


  export const Mfa_factorsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    friendly_name: 'friendly_name',
    factor_type: 'factor_type',
    status: 'status',
    created_at: 'created_at',
    updated_at: 'updated_at',
    secret: 'secret',
    phone: 'phone',
    last_challenged_at: 'last_challenged_at',
    web_authn_credential: 'web_authn_credential',
    web_authn_aaguid: 'web_authn_aaguid'
  };

  export type Mfa_factorsScalarFieldEnum = (typeof Mfa_factorsScalarFieldEnum)[keyof typeof Mfa_factorsScalarFieldEnum]


  export const One_time_tokensScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    token_type: 'token_type',
    token_hash: 'token_hash',
    relates_to: 'relates_to',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type One_time_tokensScalarFieldEnum = (typeof One_time_tokensScalarFieldEnum)[keyof typeof One_time_tokensScalarFieldEnum]


  export const Refresh_tokensScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    token: 'token',
    user_id: 'user_id',
    revoked: 'revoked',
    created_at: 'created_at',
    updated_at: 'updated_at',
    parent: 'parent',
    session_id: 'session_id'
  };

  export type Refresh_tokensScalarFieldEnum = (typeof Refresh_tokensScalarFieldEnum)[keyof typeof Refresh_tokensScalarFieldEnum]


  export const Saml_providersScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    entity_id: 'entity_id',
    metadata_xml: 'metadata_xml',
    metadata_url: 'metadata_url',
    attribute_mapping: 'attribute_mapping',
    created_at: 'created_at',
    updated_at: 'updated_at',
    name_id_format: 'name_id_format'
  };

  export type Saml_providersScalarFieldEnum = (typeof Saml_providersScalarFieldEnum)[keyof typeof Saml_providersScalarFieldEnum]


  export const Saml_relay_statesScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    request_id: 'request_id',
    for_email: 'for_email',
    redirect_to: 'redirect_to',
    created_at: 'created_at',
    updated_at: 'updated_at',
    flow_state_id: 'flow_state_id'
  };

  export type Saml_relay_statesScalarFieldEnum = (typeof Saml_relay_statesScalarFieldEnum)[keyof typeof Saml_relay_statesScalarFieldEnum]


  export const Schema_migrationsScalarFieldEnum: {
    version: 'version'
  };

  export type Schema_migrationsScalarFieldEnum = (typeof Schema_migrationsScalarFieldEnum)[keyof typeof Schema_migrationsScalarFieldEnum]


  export const SessionsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    created_at: 'created_at',
    updated_at: 'updated_at',
    factor_id: 'factor_id',
    aal: 'aal',
    not_after: 'not_after',
    refreshed_at: 'refreshed_at',
    user_agent: 'user_agent',
    ip: 'ip',
    tag: 'tag'
  };

  export type SessionsScalarFieldEnum = (typeof SessionsScalarFieldEnum)[keyof typeof SessionsScalarFieldEnum]


  export const Sso_domainsScalarFieldEnum: {
    id: 'id',
    sso_provider_id: 'sso_provider_id',
    domain: 'domain',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sso_domainsScalarFieldEnum = (typeof Sso_domainsScalarFieldEnum)[keyof typeof Sso_domainsScalarFieldEnum]


  export const Sso_providersScalarFieldEnum: {
    id: 'id',
    resource_id: 'resource_id',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type Sso_providersScalarFieldEnum = (typeof Sso_providersScalarFieldEnum)[keyof typeof Sso_providersScalarFieldEnum]


  export const UsersScalarFieldEnum: {
    instance_id: 'instance_id',
    id: 'id',
    aud: 'aud',
    role: 'role',
    email: 'email',
    encrypted_password: 'encrypted_password',
    email_confirmed_at: 'email_confirmed_at',
    invited_at: 'invited_at',
    confirmation_token: 'confirmation_token',
    confirmation_sent_at: 'confirmation_sent_at',
    recovery_token: 'recovery_token',
    recovery_sent_at: 'recovery_sent_at',
    email_change_token_new: 'email_change_token_new',
    email_change: 'email_change',
    email_change_sent_at: 'email_change_sent_at',
    last_sign_in_at: 'last_sign_in_at',
    raw_app_meta_data: 'raw_app_meta_data',
    raw_user_meta_data: 'raw_user_meta_data',
    is_super_admin: 'is_super_admin',
    created_at: 'created_at',
    updated_at: 'updated_at',
    phone: 'phone',
    phone_confirmed_at: 'phone_confirmed_at',
    phone_change: 'phone_change',
    phone_change_token: 'phone_change_token',
    phone_change_sent_at: 'phone_change_sent_at',
    confirmed_at: 'confirmed_at',
    email_change_token_current: 'email_change_token_current',
    email_change_confirm_status: 'email_change_confirm_status',
    banned_until: 'banned_until',
    reauthentication_token: 'reauthentication_token',
    reauthentication_sent_at: 'reauthentication_sent_at',
    is_sso_user: 'is_sso_user',
    deleted_at: 'deleted_at',
    is_anonymous: 'is_anonymous'
  };

  export type UsersScalarFieldEnum = (typeof UsersScalarFieldEnum)[keyof typeof UsersScalarFieldEnum]


  export const Public_sessionsScalarFieldEnum: {
    user_id: 'user_id',
    token: 'token',
    expires: 'expires'
  };

  export type Public_sessionsScalarFieldEnum = (typeof Public_sessionsScalarFieldEnum)[keyof typeof Public_sessionsScalarFieldEnum]


  export const Book_articlesScalarFieldEnum: {
    order: 'order',
    added_at: 'added_at',
    id: 'id',
    book_id: 'book_id',
    article_id: 'article_id'
  };

  export type Book_articlesScalarFieldEnum = (typeof Book_articlesScalarFieldEnum)[keyof typeof Book_articlesScalarFieldEnum]


  export const BooksScalarFieldEnum: {
    title: 'title',
    description: 'description',
    cover_image_url: 'cover_image_url',
    is_public: 'is_public',
    created_at: 'created_at',
    updated_at: 'updated_at',
    id: 'id',
    user_id: 'user_id'
  };

  export type BooksScalarFieldEnum = (typeof BooksScalarFieldEnum)[keyof typeof BooksScalarFieldEnum]


  export const Spatial_ref_sysScalarFieldEnum: {
    srid: 'srid',
    auth_name: 'auth_name',
    auth_srid: 'auth_srid',
    srtext: 'srtext',
    proj4text: 'proj4text'
  };

  export type Spatial_ref_sysScalarFieldEnum = (typeof Spatial_ref_sysScalarFieldEnum)[keyof typeof Spatial_ref_sysScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const QueryMode: {
    default: 'default',
    insensitive: 'insensitive'
  };

  export type QueryMode = (typeof QueryMode)[keyof typeof QueryMode]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  /**
   * Field references
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'String[]'
   */
  export type ListStringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String[]'>
    


  /**
   * Reference to a field of type 'BigInt'
   */
  export type BigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt'>
    


  /**
   * Reference to a field of type 'BigInt[]'
   */
  export type ListBigIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'BigInt[]'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'DateTime[]'
   */
  export type ListDateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime[]'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'Float[]'
   */
  export type ListFloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float[]'>
    


  /**
   * Reference to a field of type 'sentiment_type'
   */
  export type Enumsentiment_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'sentiment_type'>
    


  /**
   * Reference to a field of type 'sentiment_type[]'
   */
  export type ListEnumsentiment_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'sentiment_type[]'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'QueryMode'
   */
  export type EnumQueryModeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'QueryMode'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Int[]'
   */
  export type ListIntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int[]'>
    


  /**
   * Reference to a field of type 'code_challenge_method'
   */
  export type Enumcode_challenge_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'code_challenge_method'>
    


  /**
   * Reference to a field of type 'code_challenge_method[]'
   */
  export type ListEnumcode_challenge_methodFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'code_challenge_method[]'>
    


  /**
   * Reference to a field of type 'factor_type'
   */
  export type Enumfactor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_type'>
    


  /**
   * Reference to a field of type 'factor_type[]'
   */
  export type ListEnumfactor_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_type[]'>
    


  /**
   * Reference to a field of type 'factor_status'
   */
  export type Enumfactor_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_status'>
    


  /**
   * Reference to a field of type 'factor_status[]'
   */
  export type ListEnumfactor_statusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'factor_status[]'>
    


  /**
   * Reference to a field of type 'one_time_token_type'
   */
  export type Enumone_time_token_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'one_time_token_type'>
    


  /**
   * Reference to a field of type 'one_time_token_type[]'
   */
  export type ListEnumone_time_token_typeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'one_time_token_type[]'>
    


  /**
   * Reference to a field of type 'aal_level'
   */
  export type Enumaal_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'aal_level'>
    


  /**
   * Reference to a field of type 'aal_level[]'
   */
  export type ListEnumaal_levelFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'aal_level[]'>
    
  /**
   * Deep Input Types
   */


  export type article_entitiesWhereInput = {
    AND?: article_entitiesWhereInput | article_entitiesWhereInput[]
    OR?: article_entitiesWhereInput[]
    NOT?: article_entitiesWhereInput | article_entitiesWhereInput[]
    article_id?: UuidFilter<"article_entities"> | string
    entity_id?: BigIntFilter<"article_entities"> | bigint | number
    articles?: XOR<ArticlesScalarRelationFilter, articlesWhereInput>
    entities?: XOR<EntitiesScalarRelationFilter, entitiesWhereInput>
  }

  export type article_entitiesOrderByWithRelationInput = {
    article_id?: SortOrder
    entity_id?: SortOrder
    articles?: articlesOrderByWithRelationInput
    entities?: entitiesOrderByWithRelationInput
  }

  export type article_entitiesWhereUniqueInput = Prisma.AtLeast<{
    article_id_entity_id?: article_entitiesArticle_idEntity_idCompoundUniqueInput
    AND?: article_entitiesWhereInput | article_entitiesWhereInput[]
    OR?: article_entitiesWhereInput[]
    NOT?: article_entitiesWhereInput | article_entitiesWhereInput[]
    article_id?: UuidFilter<"article_entities"> | string
    entity_id?: BigIntFilter<"article_entities"> | bigint | number
    articles?: XOR<ArticlesScalarRelationFilter, articlesWhereInput>
    entities?: XOR<EntitiesScalarRelationFilter, entitiesWhereInput>
  }, "article_id_entity_id">

  export type article_entitiesOrderByWithAggregationInput = {
    article_id?: SortOrder
    entity_id?: SortOrder
    _count?: article_entitiesCountOrderByAggregateInput
    _avg?: article_entitiesAvgOrderByAggregateInput
    _max?: article_entitiesMaxOrderByAggregateInput
    _min?: article_entitiesMinOrderByAggregateInput
    _sum?: article_entitiesSumOrderByAggregateInput
  }

  export type article_entitiesScalarWhereWithAggregatesInput = {
    AND?: article_entitiesScalarWhereWithAggregatesInput | article_entitiesScalarWhereWithAggregatesInput[]
    OR?: article_entitiesScalarWhereWithAggregatesInput[]
    NOT?: article_entitiesScalarWhereWithAggregatesInput | article_entitiesScalarWhereWithAggregatesInput[]
    article_id?: UuidWithAggregatesFilter<"article_entities"> | string
    entity_id?: BigIntWithAggregatesFilter<"article_entities"> | bigint | number
  }

  export type articlesWhereInput = {
    AND?: articlesWhereInput | articlesWhereInput[]
    OR?: articlesWhereInput[]
    NOT?: articlesWhereInput | articlesWhereInput[]
    id?: UuidFilter<"articles"> | string
    source?: StringNullableFilter<"articles"> | string | null
    title?: StringNullableFilter<"articles"> | string | null
    url?: StringNullableFilter<"articles"> | string | null
    image_url?: StringNullableFilter<"articles"> | string | null
    published_at?: DateTimeNullableFilter<"articles"> | Date | string | null
    category?: StringNullableFilter<"articles"> | string | null
    author?: StringNullableFilter<"articles"> | string | null
    content?: StringNullableFilter<"articles"> | string | null
    summary?: StringNullableFilter<"articles"> | string | null
    lat?: FloatNullableFilter<"articles"> | number | null
    lng?: FloatNullableFilter<"articles"> | number | null
    location_name?: StringNullableFilter<"articles"> | string | null
    sentiment?: Enumsentiment_typeNullableFilter<"articles"> | $Enums.sentiment_type | null
    significance?: StringNullableFilter<"articles"> | string | null
    created_at?: DateTimeNullableFilter<"articles"> | Date | string | null
    future_implications?: StringNullableFilter<"articles"> | string | null
    article_entities?: Article_entitiesListRelationFilter
    article_tags?: Article_tagsListRelationFilter
    bookmarks?: BookmarksListRelationFilter
    geo_events?: Geo_eventsListRelationFilter
    likes?: LikesListRelationFilter
    views?: ViewsListRelationFilter
  }

  export type articlesOrderByWithRelationInput = {
    id?: SortOrder
    source?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    published_at?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    author?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    summary?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    location_name?: SortOrderInput | SortOrder
    sentiment?: SortOrderInput | SortOrder
    significance?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    future_implications?: SortOrderInput | SortOrder
    article_entities?: article_entitiesOrderByRelationAggregateInput
    article_tags?: article_tagsOrderByRelationAggregateInput
    bookmarks?: bookmarksOrderByRelationAggregateInput
    geo_events?: geo_eventsOrderByRelationAggregateInput
    likes?: likesOrderByRelationAggregateInput
    views?: viewsOrderByRelationAggregateInput
  }

  export type articlesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    url?: string
    AND?: articlesWhereInput | articlesWhereInput[]
    OR?: articlesWhereInput[]
    NOT?: articlesWhereInput | articlesWhereInput[]
    source?: StringNullableFilter<"articles"> | string | null
    title?: StringNullableFilter<"articles"> | string | null
    image_url?: StringNullableFilter<"articles"> | string | null
    published_at?: DateTimeNullableFilter<"articles"> | Date | string | null
    category?: StringNullableFilter<"articles"> | string | null
    author?: StringNullableFilter<"articles"> | string | null
    content?: StringNullableFilter<"articles"> | string | null
    summary?: StringNullableFilter<"articles"> | string | null
    lat?: FloatNullableFilter<"articles"> | number | null
    lng?: FloatNullableFilter<"articles"> | number | null
    location_name?: StringNullableFilter<"articles"> | string | null
    sentiment?: Enumsentiment_typeNullableFilter<"articles"> | $Enums.sentiment_type | null
    significance?: StringNullableFilter<"articles"> | string | null
    created_at?: DateTimeNullableFilter<"articles"> | Date | string | null
    future_implications?: StringNullableFilter<"articles"> | string | null
    article_entities?: Article_entitiesListRelationFilter
    article_tags?: Article_tagsListRelationFilter
    bookmarks?: BookmarksListRelationFilter
    geo_events?: Geo_eventsListRelationFilter
    likes?: LikesListRelationFilter
    views?: ViewsListRelationFilter
  }, "id" | "url">

  export type articlesOrderByWithAggregationInput = {
    id?: SortOrder
    source?: SortOrderInput | SortOrder
    title?: SortOrderInput | SortOrder
    url?: SortOrderInput | SortOrder
    image_url?: SortOrderInput | SortOrder
    published_at?: SortOrderInput | SortOrder
    category?: SortOrderInput | SortOrder
    author?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    summary?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    location_name?: SortOrderInput | SortOrder
    sentiment?: SortOrderInput | SortOrder
    significance?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    future_implications?: SortOrderInput | SortOrder
    _count?: articlesCountOrderByAggregateInput
    _avg?: articlesAvgOrderByAggregateInput
    _max?: articlesMaxOrderByAggregateInput
    _min?: articlesMinOrderByAggregateInput
    _sum?: articlesSumOrderByAggregateInput
  }

  export type articlesScalarWhereWithAggregatesInput = {
    AND?: articlesScalarWhereWithAggregatesInput | articlesScalarWhereWithAggregatesInput[]
    OR?: articlesScalarWhereWithAggregatesInput[]
    NOT?: articlesScalarWhereWithAggregatesInput | articlesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"articles"> | string
    source?: StringNullableWithAggregatesFilter<"articles"> | string | null
    title?: StringNullableWithAggregatesFilter<"articles"> | string | null
    url?: StringNullableWithAggregatesFilter<"articles"> | string | null
    image_url?: StringNullableWithAggregatesFilter<"articles"> | string | null
    published_at?: DateTimeNullableWithAggregatesFilter<"articles"> | Date | string | null
    category?: StringNullableWithAggregatesFilter<"articles"> | string | null
    author?: StringNullableWithAggregatesFilter<"articles"> | string | null
    content?: StringNullableWithAggregatesFilter<"articles"> | string | null
    summary?: StringNullableWithAggregatesFilter<"articles"> | string | null
    lat?: FloatNullableWithAggregatesFilter<"articles"> | number | null
    lng?: FloatNullableWithAggregatesFilter<"articles"> | number | null
    location_name?: StringNullableWithAggregatesFilter<"articles"> | string | null
    sentiment?: Enumsentiment_typeNullableWithAggregatesFilter<"articles"> | $Enums.sentiment_type | null
    significance?: StringNullableWithAggregatesFilter<"articles"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"articles"> | Date | string | null
    future_implications?: StringNullableWithAggregatesFilter<"articles"> | string | null
  }

  export type entitiesWhereInput = {
    AND?: entitiesWhereInput | entitiesWhereInput[]
    OR?: entitiesWhereInput[]
    NOT?: entitiesWhereInput | entitiesWhereInput[]
    id?: BigIntFilter<"entities"> | bigint | number
    name?: StringFilter<"entities"> | string
    type?: StringFilter<"entities"> | string
    description?: StringNullableFilter<"entities"> | string | null
    wiki_url?: StringNullableFilter<"entities"> | string | null
    created_at?: DateTimeNullableFilter<"entities"> | Date | string | null
    article_entities?: Article_entitiesListRelationFilter
  }

  export type entitiesOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    wiki_url?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    article_entities?: article_entitiesOrderByRelationAggregateInput
  }

  export type entitiesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: entitiesWhereInput | entitiesWhereInput[]
    OR?: entitiesWhereInput[]
    NOT?: entitiesWhereInput | entitiesWhereInput[]
    type?: StringFilter<"entities"> | string
    description?: StringNullableFilter<"entities"> | string | null
    wiki_url?: StringNullableFilter<"entities"> | string | null
    created_at?: DateTimeNullableFilter<"entities"> | Date | string | null
    article_entities?: Article_entitiesListRelationFilter
  }, "id" | "name">

  export type entitiesOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    description?: SortOrderInput | SortOrder
    wiki_url?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: entitiesCountOrderByAggregateInput
    _avg?: entitiesAvgOrderByAggregateInput
    _max?: entitiesMaxOrderByAggregateInput
    _min?: entitiesMinOrderByAggregateInput
    _sum?: entitiesSumOrderByAggregateInput
  }

  export type entitiesScalarWhereWithAggregatesInput = {
    AND?: entitiesScalarWhereWithAggregatesInput | entitiesScalarWhereWithAggregatesInput[]
    OR?: entitiesScalarWhereWithAggregatesInput[]
    NOT?: entitiesScalarWhereWithAggregatesInput | entitiesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"entities"> | bigint | number
    name?: StringWithAggregatesFilter<"entities"> | string
    type?: StringWithAggregatesFilter<"entities"> | string
    description?: StringNullableWithAggregatesFilter<"entities"> | string | null
    wiki_url?: StringNullableWithAggregatesFilter<"entities"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"entities"> | Date | string | null
  }

  export type user_article_viewsWhereInput = {
    AND?: user_article_viewsWhereInput | user_article_viewsWhereInput[]
    OR?: user_article_viewsWhereInput[]
    NOT?: user_article_viewsWhereInput | user_article_viewsWhereInput[]
    id?: BigIntFilter<"user_article_views"> | bigint | number
    user_id?: UuidNullableFilter<"user_article_views"> | string | null
    article_id?: UuidNullableFilter<"user_article_views"> | string | null
    viewed_at?: DateTimeNullableFilter<"user_article_views"> | Date | string | null
    liked?: BoolNullableFilter<"user_article_views"> | boolean | null
    bookmarked?: BoolNullableFilter<"user_article_views"> | boolean | null
  }

  export type user_article_viewsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    viewed_at?: SortOrderInput | SortOrder
    liked?: SortOrderInput | SortOrder
    bookmarked?: SortOrderInput | SortOrder
  }

  export type user_article_viewsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: user_article_viewsWhereInput | user_article_viewsWhereInput[]
    OR?: user_article_viewsWhereInput[]
    NOT?: user_article_viewsWhereInput | user_article_viewsWhereInput[]
    user_id?: UuidNullableFilter<"user_article_views"> | string | null
    article_id?: UuidNullableFilter<"user_article_views"> | string | null
    viewed_at?: DateTimeNullableFilter<"user_article_views"> | Date | string | null
    liked?: BoolNullableFilter<"user_article_views"> | boolean | null
    bookmarked?: BoolNullableFilter<"user_article_views"> | boolean | null
  }, "id">

  export type user_article_viewsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    viewed_at?: SortOrderInput | SortOrder
    liked?: SortOrderInput | SortOrder
    bookmarked?: SortOrderInput | SortOrder
    _count?: user_article_viewsCountOrderByAggregateInput
    _avg?: user_article_viewsAvgOrderByAggregateInput
    _max?: user_article_viewsMaxOrderByAggregateInput
    _min?: user_article_viewsMinOrderByAggregateInput
    _sum?: user_article_viewsSumOrderByAggregateInput
  }

  export type user_article_viewsScalarWhereWithAggregatesInput = {
    AND?: user_article_viewsScalarWhereWithAggregatesInput | user_article_viewsScalarWhereWithAggregatesInput[]
    OR?: user_article_viewsScalarWhereWithAggregatesInput[]
    NOT?: user_article_viewsScalarWhereWithAggregatesInput | user_article_viewsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"user_article_views"> | bigint | number
    user_id?: UuidNullableWithAggregatesFilter<"user_article_views"> | string | null
    article_id?: UuidNullableWithAggregatesFilter<"user_article_views"> | string | null
    viewed_at?: DateTimeNullableWithAggregatesFilter<"user_article_views"> | Date | string | null
    liked?: BoolNullableWithAggregatesFilter<"user_article_views"> | boolean | null
    bookmarked?: BoolNullableWithAggregatesFilter<"user_article_views"> | boolean | null
  }

  export type public_usersWhereInput = {
    AND?: public_usersWhereInput | public_usersWhereInput[]
    OR?: public_usersWhereInput[]
    NOT?: public_usersWhereInput | public_usersWhereInput[]
    id?: UuidFilter<"public_users"> | string
    name?: StringNullableFilter<"public_users"> | string | null
    email?: StringNullableFilter<"public_users"> | string | null
    password?: StringNullableFilter<"public_users"> | string | null
    preferences?: JsonNullableFilter<"public_users">
    created_at?: DateTimeNullableFilter<"public_users"> | Date | string | null
    last_active?: DateTimeNullableFilter<"public_users"> | Date | string | null
    bookmark_folders?: Bookmark_foldersListRelationFilter
    bookmarks?: BookmarksListRelationFilter
    likes?: LikesListRelationFilter
    sessions?: XOR<Public_sessionsNullableScalarRelationFilter, public_sessionsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    views?: ViewsListRelationFilter
  }

  export type public_usersOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    preferences?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    last_active?: SortOrderInput | SortOrder
    bookmark_folders?: bookmark_foldersOrderByRelationAggregateInput
    bookmarks?: bookmarksOrderByRelationAggregateInput
    likes?: likesOrderByRelationAggregateInput
    sessions?: public_sessionsOrderByWithRelationInput
    users?: usersOrderByWithRelationInput
    views?: viewsOrderByRelationAggregateInput
  }

  export type public_usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    name?: string
    AND?: public_usersWhereInput | public_usersWhereInput[]
    OR?: public_usersWhereInput[]
    NOT?: public_usersWhereInput | public_usersWhereInput[]
    email?: StringNullableFilter<"public_users"> | string | null
    password?: StringNullableFilter<"public_users"> | string | null
    preferences?: JsonNullableFilter<"public_users">
    created_at?: DateTimeNullableFilter<"public_users"> | Date | string | null
    last_active?: DateTimeNullableFilter<"public_users"> | Date | string | null
    bookmark_folders?: Bookmark_foldersListRelationFilter
    bookmarks?: BookmarksListRelationFilter
    likes?: LikesListRelationFilter
    sessions?: XOR<Public_sessionsNullableScalarRelationFilter, public_sessionsWhereInput> | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
    views?: ViewsListRelationFilter
  }, "id" | "name">

  export type public_usersOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    password?: SortOrderInput | SortOrder
    preferences?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    last_active?: SortOrderInput | SortOrder
    _count?: public_usersCountOrderByAggregateInput
    _max?: public_usersMaxOrderByAggregateInput
    _min?: public_usersMinOrderByAggregateInput
  }

  export type public_usersScalarWhereWithAggregatesInput = {
    AND?: public_usersScalarWhereWithAggregatesInput | public_usersScalarWhereWithAggregatesInput[]
    OR?: public_usersScalarWhereWithAggregatesInput[]
    NOT?: public_usersScalarWhereWithAggregatesInput | public_usersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"public_users"> | string
    name?: StringNullableWithAggregatesFilter<"public_users"> | string | null
    email?: StringNullableWithAggregatesFilter<"public_users"> | string | null
    password?: StringNullableWithAggregatesFilter<"public_users"> | string | null
    preferences?: JsonNullableWithAggregatesFilter<"public_users">
    created_at?: DateTimeNullableWithAggregatesFilter<"public_users"> | Date | string | null
    last_active?: DateTimeNullableWithAggregatesFilter<"public_users"> | Date | string | null
  }

  export type weekly_forecastsWhereInput = {
    AND?: weekly_forecastsWhereInput | weekly_forecastsWhereInput[]
    OR?: weekly_forecastsWhereInput[]
    NOT?: weekly_forecastsWhereInput | weekly_forecastsWhereInput[]
    id?: BigIntFilter<"weekly_forecasts"> | bigint | number
    week_start?: DateTimeNullableFilter<"weekly_forecasts"> | Date | string | null
    generated_at?: DateTimeNullableFilter<"weekly_forecasts"> | Date | string | null
    content?: StringNullableFilter<"weekly_forecasts"> | string | null
  }

  export type weekly_forecastsOrderByWithRelationInput = {
    id?: SortOrder
    week_start?: SortOrderInput | SortOrder
    generated_at?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
  }

  export type weekly_forecastsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    week_start?: Date | string
    AND?: weekly_forecastsWhereInput | weekly_forecastsWhereInput[]
    OR?: weekly_forecastsWhereInput[]
    NOT?: weekly_forecastsWhereInput | weekly_forecastsWhereInput[]
    generated_at?: DateTimeNullableFilter<"weekly_forecasts"> | Date | string | null
    content?: StringNullableFilter<"weekly_forecasts"> | string | null
  }, "id" | "week_start">

  export type weekly_forecastsOrderByWithAggregationInput = {
    id?: SortOrder
    week_start?: SortOrderInput | SortOrder
    generated_at?: SortOrderInput | SortOrder
    content?: SortOrderInput | SortOrder
    _count?: weekly_forecastsCountOrderByAggregateInput
    _avg?: weekly_forecastsAvgOrderByAggregateInput
    _max?: weekly_forecastsMaxOrderByAggregateInput
    _min?: weekly_forecastsMinOrderByAggregateInput
    _sum?: weekly_forecastsSumOrderByAggregateInput
  }

  export type weekly_forecastsScalarWhereWithAggregatesInput = {
    AND?: weekly_forecastsScalarWhereWithAggregatesInput | weekly_forecastsScalarWhereWithAggregatesInput[]
    OR?: weekly_forecastsScalarWhereWithAggregatesInput[]
    NOT?: weekly_forecastsScalarWhereWithAggregatesInput | weekly_forecastsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"weekly_forecasts"> | bigint | number
    week_start?: DateTimeNullableWithAggregatesFilter<"weekly_forecasts"> | Date | string | null
    generated_at?: DateTimeNullableWithAggregatesFilter<"weekly_forecasts"> | Date | string | null
    content?: StringNullableWithAggregatesFilter<"weekly_forecasts"> | string | null
  }

  export type article_tagsWhereInput = {
    AND?: article_tagsWhereInput | article_tagsWhereInput[]
    OR?: article_tagsWhereInput[]
    NOT?: article_tagsWhereInput | article_tagsWhereInput[]
    article_id?: UuidFilter<"article_tags"> | string
    tag_id?: BigIntFilter<"article_tags"> | bigint | number
    articles?: XOR<ArticlesScalarRelationFilter, articlesWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }

  export type article_tagsOrderByWithRelationInput = {
    article_id?: SortOrder
    tag_id?: SortOrder
    articles?: articlesOrderByWithRelationInput
    tags?: tagsOrderByWithRelationInput
  }

  export type article_tagsWhereUniqueInput = Prisma.AtLeast<{
    article_id_tag_id?: article_tagsArticle_idTag_idCompoundUniqueInput
    AND?: article_tagsWhereInput | article_tagsWhereInput[]
    OR?: article_tagsWhereInput[]
    NOT?: article_tagsWhereInput | article_tagsWhereInput[]
    article_id?: UuidFilter<"article_tags"> | string
    tag_id?: BigIntFilter<"article_tags"> | bigint | number
    articles?: XOR<ArticlesScalarRelationFilter, articlesWhereInput>
    tags?: XOR<TagsScalarRelationFilter, tagsWhereInput>
  }, "article_id_tag_id">

  export type article_tagsOrderByWithAggregationInput = {
    article_id?: SortOrder
    tag_id?: SortOrder
    _count?: article_tagsCountOrderByAggregateInput
    _avg?: article_tagsAvgOrderByAggregateInput
    _max?: article_tagsMaxOrderByAggregateInput
    _min?: article_tagsMinOrderByAggregateInput
    _sum?: article_tagsSumOrderByAggregateInput
  }

  export type article_tagsScalarWhereWithAggregatesInput = {
    AND?: article_tagsScalarWhereWithAggregatesInput | article_tagsScalarWhereWithAggregatesInput[]
    OR?: article_tagsScalarWhereWithAggregatesInput[]
    NOT?: article_tagsScalarWhereWithAggregatesInput | article_tagsScalarWhereWithAggregatesInput[]
    article_id?: UuidWithAggregatesFilter<"article_tags"> | string
    tag_id?: BigIntWithAggregatesFilter<"article_tags"> | bigint | number
  }

  export type bookmark_foldersWhereInput = {
    AND?: bookmark_foldersWhereInput | bookmark_foldersWhereInput[]
    OR?: bookmark_foldersWhereInput[]
    NOT?: bookmark_foldersWhereInput | bookmark_foldersWhereInput[]
    id?: BigIntFilter<"bookmark_folders"> | bigint | number
    user_id?: UuidNullableFilter<"bookmark_folders"> | string | null
    name?: StringNullableFilter<"bookmark_folders"> | string | null
    is_standard?: BoolNullableFilter<"bookmark_folders"> | boolean | null
    created_at?: DateTimeNullableFilter<"bookmark_folders"> | Date | string | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
    bookmarks?: BookmarksListRelationFilter
  }

  export type bookmark_foldersOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    is_standard?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    users?: public_usersOrderByWithRelationInput
    bookmarks?: bookmarksOrderByRelationAggregateInput
  }

  export type bookmark_foldersWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id_name?: bookmark_foldersUser_idNameCompoundUniqueInput
    AND?: bookmark_foldersWhereInput | bookmark_foldersWhereInput[]
    OR?: bookmark_foldersWhereInput[]
    NOT?: bookmark_foldersWhereInput | bookmark_foldersWhereInput[]
    user_id?: UuidNullableFilter<"bookmark_folders"> | string | null
    name?: StringNullableFilter<"bookmark_folders"> | string | null
    is_standard?: BoolNullableFilter<"bookmark_folders"> | boolean | null
    created_at?: DateTimeNullableFilter<"bookmark_folders"> | Date | string | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
    bookmarks?: BookmarksListRelationFilter
  }, "id" | "user_id_name">

  export type bookmark_foldersOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    name?: SortOrderInput | SortOrder
    is_standard?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: bookmark_foldersCountOrderByAggregateInput
    _avg?: bookmark_foldersAvgOrderByAggregateInput
    _max?: bookmark_foldersMaxOrderByAggregateInput
    _min?: bookmark_foldersMinOrderByAggregateInput
    _sum?: bookmark_foldersSumOrderByAggregateInput
  }

  export type bookmark_foldersScalarWhereWithAggregatesInput = {
    AND?: bookmark_foldersScalarWhereWithAggregatesInput | bookmark_foldersScalarWhereWithAggregatesInput[]
    OR?: bookmark_foldersScalarWhereWithAggregatesInput[]
    NOT?: bookmark_foldersScalarWhereWithAggregatesInput | bookmark_foldersScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"bookmark_folders"> | bigint | number
    user_id?: UuidNullableWithAggregatesFilter<"bookmark_folders"> | string | null
    name?: StringNullableWithAggregatesFilter<"bookmark_folders"> | string | null
    is_standard?: BoolNullableWithAggregatesFilter<"bookmark_folders"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"bookmark_folders"> | Date | string | null
  }

  export type bookmarksWhereInput = {
    AND?: bookmarksWhereInput | bookmarksWhereInput[]
    OR?: bookmarksWhereInput[]
    NOT?: bookmarksWhereInput | bookmarksWhereInput[]
    id?: BigIntFilter<"bookmarks"> | bigint | number
    user_id?: UuidNullableFilter<"bookmarks"> | string | null
    article_id?: UuidNullableFilter<"bookmarks"> | string | null
    folder_id?: BigIntNullableFilter<"bookmarks"> | bigint | number | null
    bookmarked_at?: DateTimeNullableFilter<"bookmarks"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
    bookmark_folders?: XOR<Bookmark_foldersNullableScalarRelationFilter, bookmark_foldersWhereInput> | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }

  export type bookmarksOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    folder_id?: SortOrderInput | SortOrder
    bookmarked_at?: SortOrderInput | SortOrder
    articles?: articlesOrderByWithRelationInput
    bookmark_folders?: bookmark_foldersOrderByWithRelationInput
    users?: public_usersOrderByWithRelationInput
  }

  export type bookmarksWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id_article_id?: bookmarksUser_idArticle_idCompoundUniqueInput
    AND?: bookmarksWhereInput | bookmarksWhereInput[]
    OR?: bookmarksWhereInput[]
    NOT?: bookmarksWhereInput | bookmarksWhereInput[]
    user_id?: UuidNullableFilter<"bookmarks"> | string | null
    article_id?: UuidNullableFilter<"bookmarks"> | string | null
    folder_id?: BigIntNullableFilter<"bookmarks"> | bigint | number | null
    bookmarked_at?: DateTimeNullableFilter<"bookmarks"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
    bookmark_folders?: XOR<Bookmark_foldersNullableScalarRelationFilter, bookmark_foldersWhereInput> | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }, "id" | "user_id_article_id">

  export type bookmarksOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    folder_id?: SortOrderInput | SortOrder
    bookmarked_at?: SortOrderInput | SortOrder
    _count?: bookmarksCountOrderByAggregateInput
    _avg?: bookmarksAvgOrderByAggregateInput
    _max?: bookmarksMaxOrderByAggregateInput
    _min?: bookmarksMinOrderByAggregateInput
    _sum?: bookmarksSumOrderByAggregateInput
  }

  export type bookmarksScalarWhereWithAggregatesInput = {
    AND?: bookmarksScalarWhereWithAggregatesInput | bookmarksScalarWhereWithAggregatesInput[]
    OR?: bookmarksScalarWhereWithAggregatesInput[]
    NOT?: bookmarksScalarWhereWithAggregatesInput | bookmarksScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"bookmarks"> | bigint | number
    user_id?: UuidNullableWithAggregatesFilter<"bookmarks"> | string | null
    article_id?: UuidNullableWithAggregatesFilter<"bookmarks"> | string | null
    folder_id?: BigIntNullableWithAggregatesFilter<"bookmarks"> | bigint | number | null
    bookmarked_at?: DateTimeNullableWithAggregatesFilter<"bookmarks"> | Date | string | null
  }

  export type geo_eventsWhereInput = {
    AND?: geo_eventsWhereInput | geo_eventsWhereInput[]
    OR?: geo_eventsWhereInput[]
    NOT?: geo_eventsWhereInput | geo_eventsWhereInput[]
    id?: UuidFilter<"geo_events"> | string
    article_id?: UuidNullableFilter<"geo_events"> | string | null
    lat?: FloatNullableFilter<"geo_events"> | number | null
    lng?: FloatNullableFilter<"geo_events"> | number | null
    zoom_level?: IntNullableFilter<"geo_events"> | number | null
    label?: StringNullableFilter<"geo_events"> | string | null
    created_at?: DateTimeNullableFilter<"geo_events"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
  }

  export type geo_eventsOrderByWithRelationInput = {
    id?: SortOrder
    article_id?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    zoom_level?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    articles?: articlesOrderByWithRelationInput
  }

  export type geo_eventsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    label?: string
    AND?: geo_eventsWhereInput | geo_eventsWhereInput[]
    OR?: geo_eventsWhereInput[]
    NOT?: geo_eventsWhereInput | geo_eventsWhereInput[]
    article_id?: UuidNullableFilter<"geo_events"> | string | null
    lat?: FloatNullableFilter<"geo_events"> | number | null
    lng?: FloatNullableFilter<"geo_events"> | number | null
    zoom_level?: IntNullableFilter<"geo_events"> | number | null
    created_at?: DateTimeNullableFilter<"geo_events"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
  }, "id" | "label">

  export type geo_eventsOrderByWithAggregationInput = {
    id?: SortOrder
    article_id?: SortOrderInput | SortOrder
    lat?: SortOrderInput | SortOrder
    lng?: SortOrderInput | SortOrder
    zoom_level?: SortOrderInput | SortOrder
    label?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    _count?: geo_eventsCountOrderByAggregateInput
    _avg?: geo_eventsAvgOrderByAggregateInput
    _max?: geo_eventsMaxOrderByAggregateInput
    _min?: geo_eventsMinOrderByAggregateInput
    _sum?: geo_eventsSumOrderByAggregateInput
  }

  export type geo_eventsScalarWhereWithAggregatesInput = {
    AND?: geo_eventsScalarWhereWithAggregatesInput | geo_eventsScalarWhereWithAggregatesInput[]
    OR?: geo_eventsScalarWhereWithAggregatesInput[]
    NOT?: geo_eventsScalarWhereWithAggregatesInput | geo_eventsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"geo_events"> | string
    article_id?: UuidNullableWithAggregatesFilter<"geo_events"> | string | null
    lat?: FloatNullableWithAggregatesFilter<"geo_events"> | number | null
    lng?: FloatNullableWithAggregatesFilter<"geo_events"> | number | null
    zoom_level?: IntNullableWithAggregatesFilter<"geo_events"> | number | null
    label?: StringNullableWithAggregatesFilter<"geo_events"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"geo_events"> | Date | string | null
  }

  export type likesWhereInput = {
    AND?: likesWhereInput | likesWhereInput[]
    OR?: likesWhereInput[]
    NOT?: likesWhereInput | likesWhereInput[]
    id?: BigIntFilter<"likes"> | bigint | number
    user_id?: UuidNullableFilter<"likes"> | string | null
    article_id?: UuidNullableFilter<"likes"> | string | null
    liked_at?: DateTimeNullableFilter<"likes"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }

  export type likesOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    liked_at?: SortOrderInput | SortOrder
    articles?: articlesOrderByWithRelationInput
    users?: public_usersOrderByWithRelationInput
  }

  export type likesWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    user_id_article_id?: likesUser_idArticle_idCompoundUniqueInput
    AND?: likesWhereInput | likesWhereInput[]
    OR?: likesWhereInput[]
    NOT?: likesWhereInput | likesWhereInput[]
    user_id?: UuidNullableFilter<"likes"> | string | null
    article_id?: UuidNullableFilter<"likes"> | string | null
    liked_at?: DateTimeNullableFilter<"likes"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }, "id" | "user_id_article_id">

  export type likesOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    liked_at?: SortOrderInput | SortOrder
    _count?: likesCountOrderByAggregateInput
    _avg?: likesAvgOrderByAggregateInput
    _max?: likesMaxOrderByAggregateInput
    _min?: likesMinOrderByAggregateInput
    _sum?: likesSumOrderByAggregateInput
  }

  export type likesScalarWhereWithAggregatesInput = {
    AND?: likesScalarWhereWithAggregatesInput | likesScalarWhereWithAggregatesInput[]
    OR?: likesScalarWhereWithAggregatesInput[]
    NOT?: likesScalarWhereWithAggregatesInput | likesScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"likes"> | bigint | number
    user_id?: UuidNullableWithAggregatesFilter<"likes"> | string | null
    article_id?: UuidNullableWithAggregatesFilter<"likes"> | string | null
    liked_at?: DateTimeNullableWithAggregatesFilter<"likes"> | Date | string | null
  }

  export type tagsWhereInput = {
    AND?: tagsWhereInput | tagsWhereInput[]
    OR?: tagsWhereInput[]
    NOT?: tagsWhereInput | tagsWhereInput[]
    id?: BigIntFilter<"tags"> | bigint | number
    name?: StringNullableFilter<"tags"> | string | null
    article_tags?: Article_tagsListRelationFilter
  }

  export type tagsOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    article_tags?: article_tagsOrderByRelationAggregateInput
  }

  export type tagsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    name?: string
    AND?: tagsWhereInput | tagsWhereInput[]
    OR?: tagsWhereInput[]
    NOT?: tagsWhereInput | tagsWhereInput[]
    article_tags?: Article_tagsListRelationFilter
  }, "id" | "name">

  export type tagsOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrderInput | SortOrder
    _count?: tagsCountOrderByAggregateInput
    _avg?: tagsAvgOrderByAggregateInput
    _max?: tagsMaxOrderByAggregateInput
    _min?: tagsMinOrderByAggregateInput
    _sum?: tagsSumOrderByAggregateInput
  }

  export type tagsScalarWhereWithAggregatesInput = {
    AND?: tagsScalarWhereWithAggregatesInput | tagsScalarWhereWithAggregatesInput[]
    OR?: tagsScalarWhereWithAggregatesInput[]
    NOT?: tagsScalarWhereWithAggregatesInput | tagsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"tags"> | bigint | number
    name?: StringNullableWithAggregatesFilter<"tags"> | string | null
  }

  export type viewsWhereInput = {
    AND?: viewsWhereInput | viewsWhereInput[]
    OR?: viewsWhereInput[]
    NOT?: viewsWhereInput | viewsWhereInput[]
    id?: BigIntFilter<"views"> | bigint | number
    user_id?: UuidNullableFilter<"views"> | string | null
    article_id?: UuidNullableFilter<"views"> | string | null
    viewed_at?: DateTimeNullableFilter<"views"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }

  export type viewsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    viewed_at?: SortOrderInput | SortOrder
    articles?: articlesOrderByWithRelationInput
    users?: public_usersOrderByWithRelationInput
  }

  export type viewsWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    AND?: viewsWhereInput | viewsWhereInput[]
    OR?: viewsWhereInput[]
    NOT?: viewsWhereInput | viewsWhereInput[]
    user_id?: UuidNullableFilter<"views"> | string | null
    article_id?: UuidNullableFilter<"views"> | string | null
    viewed_at?: DateTimeNullableFilter<"views"> | Date | string | null
    articles?: XOR<ArticlesNullableScalarRelationFilter, articlesWhereInput> | null
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }, "id">

  export type viewsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    article_id?: SortOrderInput | SortOrder
    viewed_at?: SortOrderInput | SortOrder
    _count?: viewsCountOrderByAggregateInput
    _avg?: viewsAvgOrderByAggregateInput
    _max?: viewsMaxOrderByAggregateInput
    _min?: viewsMinOrderByAggregateInput
    _sum?: viewsSumOrderByAggregateInput
  }

  export type viewsScalarWhereWithAggregatesInput = {
    AND?: viewsScalarWhereWithAggregatesInput | viewsScalarWhereWithAggregatesInput[]
    OR?: viewsScalarWhereWithAggregatesInput[]
    NOT?: viewsScalarWhereWithAggregatesInput | viewsScalarWhereWithAggregatesInput[]
    id?: BigIntWithAggregatesFilter<"views"> | bigint | number
    user_id?: UuidNullableWithAggregatesFilter<"views"> | string | null
    article_id?: UuidNullableWithAggregatesFilter<"views"> | string | null
    viewed_at?: DateTimeNullableWithAggregatesFilter<"views"> | Date | string | null
  }

  export type audit_log_entriesWhereInput = {
    AND?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    OR?: audit_log_entriesWhereInput[]
    NOT?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    instance_id?: UuidNullableFilter<"audit_log_entries"> | string | null
    id?: UuidFilter<"audit_log_entries"> | string
    payload?: JsonNullableFilter<"audit_log_entries">
    created_at?: DateTimeNullableFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringFilter<"audit_log_entries"> | string
  }

  export type audit_log_entriesOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    payload?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    OR?: audit_log_entriesWhereInput[]
    NOT?: audit_log_entriesWhereInput | audit_log_entriesWhereInput[]
    instance_id?: UuidNullableFilter<"audit_log_entries"> | string | null
    payload?: JsonNullableFilter<"audit_log_entries">
    created_at?: DateTimeNullableFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringFilter<"audit_log_entries"> | string
  }, "id">

  export type audit_log_entriesOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    payload?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    _count?: audit_log_entriesCountOrderByAggregateInput
    _max?: audit_log_entriesMaxOrderByAggregateInput
    _min?: audit_log_entriesMinOrderByAggregateInput
  }

  export type audit_log_entriesScalarWhereWithAggregatesInput = {
    AND?: audit_log_entriesScalarWhereWithAggregatesInput | audit_log_entriesScalarWhereWithAggregatesInput[]
    OR?: audit_log_entriesScalarWhereWithAggregatesInput[]
    NOT?: audit_log_entriesScalarWhereWithAggregatesInput | audit_log_entriesScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"audit_log_entries"> | string | null
    id?: UuidWithAggregatesFilter<"audit_log_entries"> | string
    payload?: JsonNullableWithAggregatesFilter<"audit_log_entries">
    created_at?: DateTimeNullableWithAggregatesFilter<"audit_log_entries"> | Date | string | null
    ip_address?: StringWithAggregatesFilter<"audit_log_entries"> | string
  }

  export type flow_stateWhereInput = {
    AND?: flow_stateWhereInput | flow_stateWhereInput[]
    OR?: flow_stateWhereInput[]
    NOT?: flow_stateWhereInput | flow_stateWhereInput[]
    id?: UuidFilter<"flow_state"> | string
    user_id?: UuidNullableFilter<"flow_state"> | string | null
    auth_code?: StringFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringFilter<"flow_state"> | string
    provider_type?: StringFilter<"flow_state"> | string
    provider_access_token?: StringNullableFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    authentication_method?: StringFilter<"flow_state"> | string
    auth_code_issued_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    saml_relay_states?: Saml_relay_statesListRelationFilter
  }

  export type flow_stateOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrderInput | SortOrder
    provider_refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrderInput | SortOrder
    saml_relay_states?: saml_relay_statesOrderByRelationAggregateInput
  }

  export type flow_stateWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: flow_stateWhereInput | flow_stateWhereInput[]
    OR?: flow_stateWhereInput[]
    NOT?: flow_stateWhereInput | flow_stateWhereInput[]
    user_id?: UuidNullableFilter<"flow_state"> | string | null
    auth_code?: StringFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringFilter<"flow_state"> | string
    provider_type?: StringFilter<"flow_state"> | string
    provider_access_token?: StringNullableFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    authentication_method?: StringFilter<"flow_state"> | string
    auth_code_issued_at?: DateTimeNullableFilter<"flow_state"> | Date | string | null
    saml_relay_states?: Saml_relay_statesListRelationFilter
  }, "id">

  export type flow_stateOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrderInput | SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrderInput | SortOrder
    provider_refresh_token?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrderInput | SortOrder
    _count?: flow_stateCountOrderByAggregateInput
    _max?: flow_stateMaxOrderByAggregateInput
    _min?: flow_stateMinOrderByAggregateInput
  }

  export type flow_stateScalarWhereWithAggregatesInput = {
    AND?: flow_stateScalarWhereWithAggregatesInput | flow_stateScalarWhereWithAggregatesInput[]
    OR?: flow_stateScalarWhereWithAggregatesInput[]
    NOT?: flow_stateScalarWhereWithAggregatesInput | flow_stateScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"flow_state"> | string
    user_id?: UuidNullableWithAggregatesFilter<"flow_state"> | string | null
    auth_code?: StringWithAggregatesFilter<"flow_state"> | string
    code_challenge_method?: Enumcode_challenge_methodWithAggregatesFilter<"flow_state"> | $Enums.code_challenge_method
    code_challenge?: StringWithAggregatesFilter<"flow_state"> | string
    provider_type?: StringWithAggregatesFilter<"flow_state"> | string
    provider_access_token?: StringNullableWithAggregatesFilter<"flow_state"> | string | null
    provider_refresh_token?: StringNullableWithAggregatesFilter<"flow_state"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
    authentication_method?: StringWithAggregatesFilter<"flow_state"> | string
    auth_code_issued_at?: DateTimeNullableWithAggregatesFilter<"flow_state"> | Date | string | null
  }

  export type identitiesWhereInput = {
    AND?: identitiesWhereInput | identitiesWhereInput[]
    OR?: identitiesWhereInput[]
    NOT?: identitiesWhereInput | identitiesWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    id?: UuidFilter<"identities"> | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type identitiesOrderByWithRelationInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    id?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type identitiesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    provider_id_provider?: identitiesProvider_idProviderCompoundUniqueInput
    AND?: identitiesWhereInput | identitiesWhereInput[]
    OR?: identitiesWhereInput[]
    NOT?: identitiesWhereInput | identitiesWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "provider_id_provider">

  export type identitiesOrderByWithAggregationInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    id?: SortOrder
    _count?: identitiesCountOrderByAggregateInput
    _max?: identitiesMaxOrderByAggregateInput
    _min?: identitiesMinOrderByAggregateInput
  }

  export type identitiesScalarWhereWithAggregatesInput = {
    AND?: identitiesScalarWhereWithAggregatesInput | identitiesScalarWhereWithAggregatesInput[]
    OR?: identitiesScalarWhereWithAggregatesInput[]
    NOT?: identitiesScalarWhereWithAggregatesInput | identitiesScalarWhereWithAggregatesInput[]
    provider_id?: StringWithAggregatesFilter<"identities"> | string
    user_id?: UuidWithAggregatesFilter<"identities"> | string
    identity_data?: JsonWithAggregatesFilter<"identities">
    provider?: StringWithAggregatesFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"identities"> | Date | string | null
    email?: StringNullableWithAggregatesFilter<"identities"> | string | null
    id?: UuidWithAggregatesFilter<"identities"> | string
  }

  export type instancesWhereInput = {
    AND?: instancesWhereInput | instancesWhereInput[]
    OR?: instancesWhereInput[]
    NOT?: instancesWhereInput | instancesWhereInput[]
    id?: UuidFilter<"instances"> | string
    uuid?: UuidNullableFilter<"instances"> | string | null
    raw_base_config?: StringNullableFilter<"instances"> | string | null
    created_at?: DateTimeNullableFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"instances"> | Date | string | null
  }

  export type instancesOrderByWithRelationInput = {
    id?: SortOrder
    uuid?: SortOrderInput | SortOrder
    raw_base_config?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
  }

  export type instancesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: instancesWhereInput | instancesWhereInput[]
    OR?: instancesWhereInput[]
    NOT?: instancesWhereInput | instancesWhereInput[]
    uuid?: UuidNullableFilter<"instances"> | string | null
    raw_base_config?: StringNullableFilter<"instances"> | string | null
    created_at?: DateTimeNullableFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"instances"> | Date | string | null
  }, "id">

  export type instancesOrderByWithAggregationInput = {
    id?: SortOrder
    uuid?: SortOrderInput | SortOrder
    raw_base_config?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: instancesCountOrderByAggregateInput
    _max?: instancesMaxOrderByAggregateInput
    _min?: instancesMinOrderByAggregateInput
  }

  export type instancesScalarWhereWithAggregatesInput = {
    AND?: instancesScalarWhereWithAggregatesInput | instancesScalarWhereWithAggregatesInput[]
    OR?: instancesScalarWhereWithAggregatesInput[]
    NOT?: instancesScalarWhereWithAggregatesInput | instancesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"instances"> | string
    uuid?: UuidNullableWithAggregatesFilter<"instances"> | string | null
    raw_base_config?: StringNullableWithAggregatesFilter<"instances"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"instances"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"instances"> | Date | string | null
  }

  export type mfa_amr_claimsWhereInput = {
    AND?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    OR?: mfa_amr_claimsWhereInput[]
    NOT?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    id?: UuidFilter<"mfa_amr_claims"> | string
    sessions?: XOR<SessionsScalarRelationFilter, sessionsWhereInput>
  }

  export type mfa_amr_claimsOrderByWithRelationInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
    sessions?: sessionsOrderByWithRelationInput
  }

  export type mfa_amr_claimsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    session_id_authentication_method?: mfa_amr_claimsSession_idAuthentication_methodCompoundUniqueInput
    AND?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    OR?: mfa_amr_claimsWhereInput[]
    NOT?: mfa_amr_claimsWhereInput | mfa_amr_claimsWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    sessions?: XOR<SessionsScalarRelationFilter, sessionsWhereInput>
  }, "id" | "session_id_authentication_method">

  export type mfa_amr_claimsOrderByWithAggregationInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
    _count?: mfa_amr_claimsCountOrderByAggregateInput
    _max?: mfa_amr_claimsMaxOrderByAggregateInput
    _min?: mfa_amr_claimsMinOrderByAggregateInput
  }

  export type mfa_amr_claimsScalarWhereWithAggregatesInput = {
    AND?: mfa_amr_claimsScalarWhereWithAggregatesInput | mfa_amr_claimsScalarWhereWithAggregatesInput[]
    OR?: mfa_amr_claimsScalarWhereWithAggregatesInput[]
    NOT?: mfa_amr_claimsScalarWhereWithAggregatesInput | mfa_amr_claimsScalarWhereWithAggregatesInput[]
    session_id?: UuidWithAggregatesFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeWithAggregatesFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringWithAggregatesFilter<"mfa_amr_claims"> | string
    id?: UuidWithAggregatesFilter<"mfa_amr_claims"> | string
  }

  export type mfa_challengesWhereInput = {
    AND?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    OR?: mfa_challengesWhereInput[]
    NOT?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    id?: UuidFilter<"mfa_challenges"> | string
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    otp_code?: StringNullableFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableFilter<"mfa_challenges">
    mfa_factors?: XOR<Mfa_factorsScalarRelationFilter, mfa_factorsWhereInput>
  }

  export type mfa_challengesOrderByWithRelationInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrderInput | SortOrder
    web_authn_session_data?: SortOrderInput | SortOrder
    mfa_factors?: mfa_factorsOrderByWithRelationInput
  }

  export type mfa_challengesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    OR?: mfa_challengesWhereInput[]
    NOT?: mfa_challengesWhereInput | mfa_challengesWhereInput[]
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    otp_code?: StringNullableFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableFilter<"mfa_challenges">
    mfa_factors?: XOR<Mfa_factorsScalarRelationFilter, mfa_factorsWhereInput>
  }, "id">

  export type mfa_challengesOrderByWithAggregationInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrderInput | SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrderInput | SortOrder
    web_authn_session_data?: SortOrderInput | SortOrder
    _count?: mfa_challengesCountOrderByAggregateInput
    _max?: mfa_challengesMaxOrderByAggregateInput
    _min?: mfa_challengesMinOrderByAggregateInput
  }

  export type mfa_challengesScalarWhereWithAggregatesInput = {
    AND?: mfa_challengesScalarWhereWithAggregatesInput | mfa_challengesScalarWhereWithAggregatesInput[]
    OR?: mfa_challengesScalarWhereWithAggregatesInput[]
    NOT?: mfa_challengesScalarWhereWithAggregatesInput | mfa_challengesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"mfa_challenges"> | string
    factor_id?: UuidWithAggregatesFilter<"mfa_challenges"> | string
    created_at?: DateTimeWithAggregatesFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableWithAggregatesFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringWithAggregatesFilter<"mfa_challenges"> | string
    otp_code?: StringNullableWithAggregatesFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableWithAggregatesFilter<"mfa_challenges">
  }

  export type mfa_factorsWhereInput = {
    AND?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    OR?: mfa_factorsWhereInput[]
    NOT?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    id?: UuidFilter<"mfa_factors"> | string
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    phone?: StringNullableFilter<"mfa_factors"> | string | null
    last_challenged_at?: DateTimeNullableFilter<"mfa_factors"> | Date | string | null
    web_authn_credential?: JsonNullableFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableFilter<"mfa_factors"> | string | null
    mfa_challenges?: Mfa_challengesListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type mfa_factorsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrderInput | SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    last_challenged_at?: SortOrderInput | SortOrder
    web_authn_credential?: SortOrderInput | SortOrder
    web_authn_aaguid?: SortOrderInput | SortOrder
    mfa_challenges?: mfa_challengesOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type mfa_factorsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    last_challenged_at?: Date | string
    user_id_phone?: mfa_factorsUser_idPhoneCompoundUniqueInput
    AND?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    OR?: mfa_factorsWhereInput[]
    NOT?: mfa_factorsWhereInput | mfa_factorsWhereInput[]
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    phone?: StringNullableFilter<"mfa_factors"> | string | null
    web_authn_credential?: JsonNullableFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableFilter<"mfa_factors"> | string | null
    mfa_challenges?: Mfa_challengesListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "last_challenged_at" | "user_id_phone">

  export type mfa_factorsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrderInput | SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    last_challenged_at?: SortOrderInput | SortOrder
    web_authn_credential?: SortOrderInput | SortOrder
    web_authn_aaguid?: SortOrderInput | SortOrder
    _count?: mfa_factorsCountOrderByAggregateInput
    _max?: mfa_factorsMaxOrderByAggregateInput
    _min?: mfa_factorsMinOrderByAggregateInput
  }

  export type mfa_factorsScalarWhereWithAggregatesInput = {
    AND?: mfa_factorsScalarWhereWithAggregatesInput | mfa_factorsScalarWhereWithAggregatesInput[]
    OR?: mfa_factorsScalarWhereWithAggregatesInput[]
    NOT?: mfa_factorsScalarWhereWithAggregatesInput | mfa_factorsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"mfa_factors"> | string
    user_id?: UuidWithAggregatesFilter<"mfa_factors"> | string
    friendly_name?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeWithAggregatesFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusWithAggregatesFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeWithAggregatesFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"mfa_factors"> | Date | string
    secret?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    phone?: StringNullableWithAggregatesFilter<"mfa_factors"> | string | null
    last_challenged_at?: DateTimeNullableWithAggregatesFilter<"mfa_factors"> | Date | string | null
    web_authn_credential?: JsonNullableWithAggregatesFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableWithAggregatesFilter<"mfa_factors"> | string | null
  }

  export type one_time_tokensWhereInput = {
    AND?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    OR?: one_time_tokensWhereInput[]
    NOT?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    id?: UuidFilter<"one_time_tokens"> | string
    user_id?: UuidFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringFilter<"one_time_tokens"> | string
    relates_to?: StringFilter<"one_time_tokens"> | string
    created_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type one_time_tokensOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    users?: usersOrderByWithRelationInput
  }

  export type one_time_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    user_id_token_type?: one_time_tokensUser_idToken_typeCompoundUniqueInput
    AND?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    OR?: one_time_tokensWhereInput[]
    NOT?: one_time_tokensWhereInput | one_time_tokensWhereInput[]
    user_id?: UuidFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringFilter<"one_time_tokens"> | string
    relates_to?: StringFilter<"one_time_tokens"> | string
    created_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id" | "user_id_token_type">

  export type one_time_tokensOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: one_time_tokensCountOrderByAggregateInput
    _max?: one_time_tokensMaxOrderByAggregateInput
    _min?: one_time_tokensMinOrderByAggregateInput
  }

  export type one_time_tokensScalarWhereWithAggregatesInput = {
    AND?: one_time_tokensScalarWhereWithAggregatesInput | one_time_tokensScalarWhereWithAggregatesInput[]
    OR?: one_time_tokensScalarWhereWithAggregatesInput[]
    NOT?: one_time_tokensScalarWhereWithAggregatesInput | one_time_tokensScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"one_time_tokens"> | string
    user_id?: UuidWithAggregatesFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeWithAggregatesFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringWithAggregatesFilter<"one_time_tokens"> | string
    relates_to?: StringWithAggregatesFilter<"one_time_tokens"> | string
    created_at?: DateTimeWithAggregatesFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"one_time_tokens"> | Date | string
  }

  export type refresh_tokensWhereInput = {
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    id?: BigIntFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    sessions?: XOR<SessionsNullableScalarRelationFilter, sessionsWhereInput> | null
  }

  export type refresh_tokensOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    token?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    revoked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    parent?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    sessions?: sessionsOrderByWithRelationInput
  }

  export type refresh_tokensWhereUniqueInput = Prisma.AtLeast<{
    id?: bigint | number
    token?: string
    AND?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    OR?: refresh_tokensWhereInput[]
    NOT?: refresh_tokensWhereInput | refresh_tokensWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    sessions?: XOR<SessionsNullableScalarRelationFilter, sessionsWhereInput> | null
  }, "id" | "token">

  export type refresh_tokensOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    token?: SortOrderInput | SortOrder
    user_id?: SortOrderInput | SortOrder
    revoked?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    parent?: SortOrderInput | SortOrder
    session_id?: SortOrderInput | SortOrder
    _count?: refresh_tokensCountOrderByAggregateInput
    _avg?: refresh_tokensAvgOrderByAggregateInput
    _max?: refresh_tokensMaxOrderByAggregateInput
    _min?: refresh_tokensMinOrderByAggregateInput
    _sum?: refresh_tokensSumOrderByAggregateInput
  }

  export type refresh_tokensScalarWhereWithAggregatesInput = {
    AND?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    OR?: refresh_tokensScalarWhereWithAggregatesInput[]
    NOT?: refresh_tokensScalarWhereWithAggregatesInput | refresh_tokensScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    id?: BigIntWithAggregatesFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableWithAggregatesFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableWithAggregatesFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableWithAggregatesFilter<"refresh_tokens"> | string | null
  }

  export type saml_providersWhereInput = {
    AND?: saml_providersWhereInput | saml_providersWhereInput[]
    OR?: saml_providersWhereInput[]
    NOT?: saml_providersWhereInput | saml_providersWhereInput[]
    id?: UuidFilter<"saml_providers"> | string
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    entity_id?: StringFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableFilter<"saml_providers"> | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }

  export type saml_providersOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrderInput | SortOrder
    attribute_mapping?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    name_id_format?: SortOrderInput | SortOrder
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type saml_providersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    entity_id?: string
    AND?: saml_providersWhereInput | saml_providersWhereInput[]
    OR?: saml_providersWhereInput[]
    NOT?: saml_providersWhereInput | saml_providersWhereInput[]
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableFilter<"saml_providers"> | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }, "id" | "entity_id">

  export type saml_providersOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrderInput | SortOrder
    attribute_mapping?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    name_id_format?: SortOrderInput | SortOrder
    _count?: saml_providersCountOrderByAggregateInput
    _max?: saml_providersMaxOrderByAggregateInput
    _min?: saml_providersMinOrderByAggregateInput
  }

  export type saml_providersScalarWhereWithAggregatesInput = {
    AND?: saml_providersScalarWhereWithAggregatesInput | saml_providersScalarWhereWithAggregatesInput[]
    OR?: saml_providersScalarWhereWithAggregatesInput[]
    NOT?: saml_providersScalarWhereWithAggregatesInput | saml_providersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"saml_providers"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"saml_providers"> | string
    entity_id?: StringWithAggregatesFilter<"saml_providers"> | string
    metadata_xml?: StringWithAggregatesFilter<"saml_providers"> | string
    metadata_url?: StringNullableWithAggregatesFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableWithAggregatesFilter<"saml_providers">
    created_at?: DateTimeNullableWithAggregatesFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableWithAggregatesFilter<"saml_providers"> | string | null
  }

  export type saml_relay_statesWhereInput = {
    AND?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    OR?: saml_relay_statesWhereInput[]
    NOT?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    id?: UuidFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
    flow_state?: XOR<Flow_stateNullableScalarRelationFilter, flow_stateWhereInput> | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }

  export type saml_relay_statesOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrderInput | SortOrder
    redirect_to?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    flow_state_id?: SortOrderInput | SortOrder
    flow_state?: flow_stateOrderByWithRelationInput
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type saml_relay_statesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    OR?: saml_relay_statesWhereInput[]
    NOT?: saml_relay_statesWhereInput | saml_relay_statesWhereInput[]
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
    flow_state?: XOR<Flow_stateNullableScalarRelationFilter, flow_stateWhereInput> | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }, "id">

  export type saml_relay_statesOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrderInput | SortOrder
    redirect_to?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    flow_state_id?: SortOrderInput | SortOrder
    _count?: saml_relay_statesCountOrderByAggregateInput
    _max?: saml_relay_statesMaxOrderByAggregateInput
    _min?: saml_relay_statesMinOrderByAggregateInput
  }

  export type saml_relay_statesScalarWhereWithAggregatesInput = {
    AND?: saml_relay_statesScalarWhereWithAggregatesInput | saml_relay_statesScalarWhereWithAggregatesInput[]
    OR?: saml_relay_statesScalarWhereWithAggregatesInput[]
    NOT?: saml_relay_statesScalarWhereWithAggregatesInput | saml_relay_statesScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"saml_relay_states"> | string
    request_id?: StringWithAggregatesFilter<"saml_relay_states"> | string
    for_email?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableWithAggregatesFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableWithAggregatesFilter<"saml_relay_states"> | string | null
  }

  export type schema_migrationsWhereInput = {
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    version?: StringFilter<"schema_migrations"> | string
  }

  export type schema_migrationsOrderByWithRelationInput = {
    version?: SortOrder
  }

  export type schema_migrationsWhereUniqueInput = Prisma.AtLeast<{
    version?: string
    AND?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
    OR?: schema_migrationsWhereInput[]
    NOT?: schema_migrationsWhereInput | schema_migrationsWhereInput[]
  }, "version">

  export type schema_migrationsOrderByWithAggregationInput = {
    version?: SortOrder
    _count?: schema_migrationsCountOrderByAggregateInput
    _max?: schema_migrationsMaxOrderByAggregateInput
    _min?: schema_migrationsMinOrderByAggregateInput
  }

  export type schema_migrationsScalarWhereWithAggregatesInput = {
    AND?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    OR?: schema_migrationsScalarWhereWithAggregatesInput[]
    NOT?: schema_migrationsScalarWhereWithAggregatesInput | schema_migrationsScalarWhereWithAggregatesInput[]
    version?: StringWithAggregatesFilter<"schema_migrations"> | string
  }

  export type sessionsWhereInput = {
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    id?: UuidFilter<"sessions"> | string
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
    mfa_amr_claims?: Mfa_amr_claimsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }

  export type sessionsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    factor_id?: SortOrderInput | SortOrder
    aal?: SortOrderInput | SortOrder
    not_after?: SortOrderInput | SortOrder
    refreshed_at?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    ip?: SortOrderInput | SortOrder
    tag?: SortOrderInput | SortOrder
    mfa_amr_claims?: mfa_amr_claimsOrderByRelationAggregateInput
    refresh_tokens?: refresh_tokensOrderByRelationAggregateInput
    users?: usersOrderByWithRelationInput
  }

  export type sessionsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sessionsWhereInput | sessionsWhereInput[]
    OR?: sessionsWhereInput[]
    NOT?: sessionsWhereInput | sessionsWhereInput[]
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
    mfa_amr_claims?: Mfa_amr_claimsListRelationFilter
    refresh_tokens?: Refresh_tokensListRelationFilter
    users?: XOR<UsersScalarRelationFilter, usersWhereInput>
  }, "id">

  export type sessionsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    factor_id?: SortOrderInput | SortOrder
    aal?: SortOrderInput | SortOrder
    not_after?: SortOrderInput | SortOrder
    refreshed_at?: SortOrderInput | SortOrder
    user_agent?: SortOrderInput | SortOrder
    ip?: SortOrderInput | SortOrder
    tag?: SortOrderInput | SortOrder
    _count?: sessionsCountOrderByAggregateInput
    _max?: sessionsMaxOrderByAggregateInput
    _min?: sessionsMinOrderByAggregateInput
  }

  export type sessionsScalarWhereWithAggregatesInput = {
    AND?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    OR?: sessionsScalarWhereWithAggregatesInput[]
    NOT?: sessionsScalarWhereWithAggregatesInput | sessionsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sessions"> | string
    user_id?: UuidWithAggregatesFilter<"sessions"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableWithAggregatesFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableWithAggregatesFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableWithAggregatesFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableWithAggregatesFilter<"sessions"> | string | null
    ip?: StringNullableWithAggregatesFilter<"sessions"> | string | null
    tag?: StringNullableWithAggregatesFilter<"sessions"> | string | null
  }

  export type sso_domainsWhereInput = {
    AND?: sso_domainsWhereInput | sso_domainsWhereInput[]
    OR?: sso_domainsWhereInput[]
    NOT?: sso_domainsWhereInput | sso_domainsWhereInput[]
    id?: UuidFilter<"sso_domains"> | string
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }

  export type sso_domainsOrderByWithRelationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    sso_providers?: sso_providersOrderByWithRelationInput
  }

  export type sso_domainsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sso_domainsWhereInput | sso_domainsWhereInput[]
    OR?: sso_domainsWhereInput[]
    NOT?: sso_domainsWhereInput | sso_domainsWhereInput[]
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    sso_providers?: XOR<Sso_providersScalarRelationFilter, sso_providersWhereInput>
  }, "id">

  export type sso_domainsOrderByWithAggregationInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: sso_domainsCountOrderByAggregateInput
    _max?: sso_domainsMaxOrderByAggregateInput
    _min?: sso_domainsMinOrderByAggregateInput
  }

  export type sso_domainsScalarWhereWithAggregatesInput = {
    AND?: sso_domainsScalarWhereWithAggregatesInput | sso_domainsScalarWhereWithAggregatesInput[]
    OR?: sso_domainsScalarWhereWithAggregatesInput[]
    NOT?: sso_domainsScalarWhereWithAggregatesInput | sso_domainsScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sso_domains"> | string
    sso_provider_id?: UuidWithAggregatesFilter<"sso_domains"> | string
    domain?: StringWithAggregatesFilter<"sso_domains"> | string
    created_at?: DateTimeNullableWithAggregatesFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sso_domains"> | Date | string | null
  }

  export type sso_providersWhereInput = {
    AND?: sso_providersWhereInput | sso_providersWhereInput[]
    OR?: sso_providersWhereInput[]
    NOT?: sso_providersWhereInput | sso_providersWhereInput[]
    id?: UuidFilter<"sso_providers"> | string
    resource_id?: StringNullableFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    saml_providers?: Saml_providersListRelationFilter
    saml_relay_states?: Saml_relay_statesListRelationFilter
    sso_domains?: Sso_domainsListRelationFilter
  }

  export type sso_providersOrderByWithRelationInput = {
    id?: SortOrder
    resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    saml_providers?: saml_providersOrderByRelationAggregateInput
    saml_relay_states?: saml_relay_statesOrderByRelationAggregateInput
    sso_domains?: sso_domainsOrderByRelationAggregateInput
  }

  export type sso_providersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: sso_providersWhereInput | sso_providersWhereInput[]
    OR?: sso_providersWhereInput[]
    NOT?: sso_providersWhereInput | sso_providersWhereInput[]
    resource_id?: StringNullableFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_providers"> | Date | string | null
    saml_providers?: Saml_providersListRelationFilter
    saml_relay_states?: Saml_relay_statesListRelationFilter
    sso_domains?: Sso_domainsListRelationFilter
  }, "id">

  export type sso_providersOrderByWithAggregationInput = {
    id?: SortOrder
    resource_id?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    _count?: sso_providersCountOrderByAggregateInput
    _max?: sso_providersMaxOrderByAggregateInput
    _min?: sso_providersMinOrderByAggregateInput
  }

  export type sso_providersScalarWhereWithAggregatesInput = {
    AND?: sso_providersScalarWhereWithAggregatesInput | sso_providersScalarWhereWithAggregatesInput[]
    OR?: sso_providersScalarWhereWithAggregatesInput[]
    NOT?: sso_providersScalarWhereWithAggregatesInput | sso_providersScalarWhereWithAggregatesInput[]
    id?: UuidWithAggregatesFilter<"sso_providers"> | string
    resource_id?: StringNullableWithAggregatesFilter<"sso_providers"> | string | null
    created_at?: DateTimeNullableWithAggregatesFilter<"sso_providers"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"sso_providers"> | Date | string | null
  }

  export type usersWhereInput = {
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    instance_id?: UuidNullableFilter<"users"> | string | null
    id?: UuidFilter<"users"> | string
    aud?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    encrypted_password?: StringNullableFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    recovery_token?: StringNullableFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableFilter<"users"> | string | null
    email_change?: StringNullableFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableFilter<"users">
    raw_user_meta_data?: JsonNullableFilter<"users">
    is_super_admin?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone?: StringNullableFilter<"users"> | string | null
    phone_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_change?: StringNullableFilter<"users"> | string | null
    phone_change_token?: StringNullableFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableFilter<"users"> | number | null
    banned_until?: DateTimeNullableFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_sso_user?: BoolFilter<"users"> | boolean
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_anonymous?: BoolFilter<"users"> | boolean
    identities?: IdentitiesListRelationFilter
    mfa_factors?: Mfa_factorsListRelationFilter
    one_time_tokens?: One_time_tokensListRelationFilter
    sessions?: SessionsListRelationFilter
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }

  export type usersOrderByWithRelationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    aud?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    encrypted_password?: SortOrderInput | SortOrder
    email_confirmed_at?: SortOrderInput | SortOrder
    invited_at?: SortOrderInput | SortOrder
    confirmation_token?: SortOrderInput | SortOrder
    confirmation_sent_at?: SortOrderInput | SortOrder
    recovery_token?: SortOrderInput | SortOrder
    recovery_sent_at?: SortOrderInput | SortOrder
    email_change_token_new?: SortOrderInput | SortOrder
    email_change?: SortOrderInput | SortOrder
    email_change_sent_at?: SortOrderInput | SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    raw_app_meta_data?: SortOrderInput | SortOrder
    raw_user_meta_data?: SortOrderInput | SortOrder
    is_super_admin?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    phone_confirmed_at?: SortOrderInput | SortOrder
    phone_change?: SortOrderInput | SortOrder
    phone_change_token?: SortOrderInput | SortOrder
    phone_change_sent_at?: SortOrderInput | SortOrder
    confirmed_at?: SortOrderInput | SortOrder
    email_change_token_current?: SortOrderInput | SortOrder
    email_change_confirm_status?: SortOrderInput | SortOrder
    banned_until?: SortOrderInput | SortOrder
    reauthentication_token?: SortOrderInput | SortOrder
    reauthentication_sent_at?: SortOrderInput | SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    identities?: identitiesOrderByRelationAggregateInput
    mfa_factors?: mfa_factorsOrderByRelationAggregateInput
    one_time_tokens?: one_time_tokensOrderByRelationAggregateInput
    sessions?: sessionsOrderByRelationAggregateInput
    users?: public_usersOrderByWithRelationInput
  }

  export type usersWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    phone?: string
    AND?: usersWhereInput | usersWhereInput[]
    OR?: usersWhereInput[]
    NOT?: usersWhereInput | usersWhereInput[]
    instance_id?: UuidNullableFilter<"users"> | string | null
    aud?: StringNullableFilter<"users"> | string | null
    role?: StringNullableFilter<"users"> | string | null
    email?: StringNullableFilter<"users"> | string | null
    encrypted_password?: StringNullableFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    recovery_token?: StringNullableFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableFilter<"users"> | string | null
    email_change?: StringNullableFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableFilter<"users">
    raw_user_meta_data?: JsonNullableFilter<"users">
    is_super_admin?: BoolNullableFilter<"users"> | boolean | null
    created_at?: DateTimeNullableFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    phone_change?: StringNullableFilter<"users"> | string | null
    phone_change_token?: StringNullableFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableFilter<"users"> | number | null
    banned_until?: DateTimeNullableFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_sso_user?: BoolFilter<"users"> | boolean
    deleted_at?: DateTimeNullableFilter<"users"> | Date | string | null
    is_anonymous?: BoolFilter<"users"> | boolean
    identities?: IdentitiesListRelationFilter
    mfa_factors?: Mfa_factorsListRelationFilter
    one_time_tokens?: One_time_tokensListRelationFilter
    sessions?: SessionsListRelationFilter
    users?: XOR<Public_usersNullableScalarRelationFilter, public_usersWhereInput> | null
  }, "id" | "phone">

  export type usersOrderByWithAggregationInput = {
    instance_id?: SortOrderInput | SortOrder
    id?: SortOrder
    aud?: SortOrderInput | SortOrder
    role?: SortOrderInput | SortOrder
    email?: SortOrderInput | SortOrder
    encrypted_password?: SortOrderInput | SortOrder
    email_confirmed_at?: SortOrderInput | SortOrder
    invited_at?: SortOrderInput | SortOrder
    confirmation_token?: SortOrderInput | SortOrder
    confirmation_sent_at?: SortOrderInput | SortOrder
    recovery_token?: SortOrderInput | SortOrder
    recovery_sent_at?: SortOrderInput | SortOrder
    email_change_token_new?: SortOrderInput | SortOrder
    email_change?: SortOrderInput | SortOrder
    email_change_sent_at?: SortOrderInput | SortOrder
    last_sign_in_at?: SortOrderInput | SortOrder
    raw_app_meta_data?: SortOrderInput | SortOrder
    raw_user_meta_data?: SortOrderInput | SortOrder
    is_super_admin?: SortOrderInput | SortOrder
    created_at?: SortOrderInput | SortOrder
    updated_at?: SortOrderInput | SortOrder
    phone?: SortOrderInput | SortOrder
    phone_confirmed_at?: SortOrderInput | SortOrder
    phone_change?: SortOrderInput | SortOrder
    phone_change_token?: SortOrderInput | SortOrder
    phone_change_sent_at?: SortOrderInput | SortOrder
    confirmed_at?: SortOrderInput | SortOrder
    email_change_token_current?: SortOrderInput | SortOrder
    email_change_confirm_status?: SortOrderInput | SortOrder
    banned_until?: SortOrderInput | SortOrder
    reauthentication_token?: SortOrderInput | SortOrder
    reauthentication_sent_at?: SortOrderInput | SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrderInput | SortOrder
    is_anonymous?: SortOrder
    _count?: usersCountOrderByAggregateInput
    _avg?: usersAvgOrderByAggregateInput
    _max?: usersMaxOrderByAggregateInput
    _min?: usersMinOrderByAggregateInput
    _sum?: usersSumOrderByAggregateInput
  }

  export type usersScalarWhereWithAggregatesInput = {
    AND?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    OR?: usersScalarWhereWithAggregatesInput[]
    NOT?: usersScalarWhereWithAggregatesInput | usersScalarWhereWithAggregatesInput[]
    instance_id?: UuidNullableWithAggregatesFilter<"users"> | string | null
    id?: UuidWithAggregatesFilter<"users"> | string
    aud?: StringNullableWithAggregatesFilter<"users"> | string | null
    role?: StringNullableWithAggregatesFilter<"users"> | string | null
    email?: StringNullableWithAggregatesFilter<"users"> | string | null
    encrypted_password?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    invited_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    confirmation_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    confirmation_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    recovery_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    recovery_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    email_change_token_new?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    last_sign_in_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    raw_app_meta_data?: JsonNullableWithAggregatesFilter<"users">
    raw_user_meta_data?: JsonNullableWithAggregatesFilter<"users">
    is_super_admin?: BoolNullableWithAggregatesFilter<"users"> | boolean | null
    created_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    updated_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    phone?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    phone_change?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_change_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    phone_change_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    confirmed_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    email_change_token_current?: StringNullableWithAggregatesFilter<"users"> | string | null
    email_change_confirm_status?: IntNullableWithAggregatesFilter<"users"> | number | null
    banned_until?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    reauthentication_token?: StringNullableWithAggregatesFilter<"users"> | string | null
    reauthentication_sent_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    is_sso_user?: BoolWithAggregatesFilter<"users"> | boolean
    deleted_at?: DateTimeNullableWithAggregatesFilter<"users"> | Date | string | null
    is_anonymous?: BoolWithAggregatesFilter<"users"> | boolean
  }

  export type public_sessionsWhereInput = {
    AND?: public_sessionsWhereInput | public_sessionsWhereInput[]
    OR?: public_sessionsWhereInput[]
    NOT?: public_sessionsWhereInput | public_sessionsWhereInput[]
    user_id?: UuidFilter<"public_sessions"> | string
    token?: StringNullableFilter<"public_sessions"> | string | null
    expires?: DateTimeNullableFilter<"public_sessions"> | Date | string | null
    users?: XOR<Public_usersScalarRelationFilter, public_usersWhereInput>
  }

  export type public_sessionsOrderByWithRelationInput = {
    user_id?: SortOrder
    token?: SortOrderInput | SortOrder
    expires?: SortOrderInput | SortOrder
    users?: public_usersOrderByWithRelationInput
  }

  export type public_sessionsWhereUniqueInput = Prisma.AtLeast<{
    user_id?: string
    AND?: public_sessionsWhereInput | public_sessionsWhereInput[]
    OR?: public_sessionsWhereInput[]
    NOT?: public_sessionsWhereInput | public_sessionsWhereInput[]
    token?: StringNullableFilter<"public_sessions"> | string | null
    expires?: DateTimeNullableFilter<"public_sessions"> | Date | string | null
    users?: XOR<Public_usersScalarRelationFilter, public_usersWhereInput>
  }, "user_id">

  export type public_sessionsOrderByWithAggregationInput = {
    user_id?: SortOrder
    token?: SortOrderInput | SortOrder
    expires?: SortOrderInput | SortOrder
    _count?: public_sessionsCountOrderByAggregateInput
    _max?: public_sessionsMaxOrderByAggregateInput
    _min?: public_sessionsMinOrderByAggregateInput
  }

  export type public_sessionsScalarWhereWithAggregatesInput = {
    AND?: public_sessionsScalarWhereWithAggregatesInput | public_sessionsScalarWhereWithAggregatesInput[]
    OR?: public_sessionsScalarWhereWithAggregatesInput[]
    NOT?: public_sessionsScalarWhereWithAggregatesInput | public_sessionsScalarWhereWithAggregatesInput[]
    user_id?: UuidWithAggregatesFilter<"public_sessions"> | string
    token?: StringNullableWithAggregatesFilter<"public_sessions"> | string | null
    expires?: DateTimeNullableWithAggregatesFilter<"public_sessions"> | Date | string | null
  }

  export type book_articlesWhereInput = {
    AND?: book_articlesWhereInput | book_articlesWhereInput[]
    OR?: book_articlesWhereInput[]
    NOT?: book_articlesWhereInput | book_articlesWhereInput[]
    order?: IntFilter<"book_articles"> | number
    added_at?: DateTimeFilter<"book_articles"> | Date | string
    id?: UuidFilter<"book_articles"> | string
    book_id?: UuidFilter<"book_articles"> | string
    article_id?: UuidFilter<"book_articles"> | string
    books?: XOR<BooksScalarRelationFilter, booksWhereInput>
  }

  export type book_articlesOrderByWithRelationInput = {
    order?: SortOrder
    added_at?: SortOrder
    id?: SortOrder
    book_id?: SortOrder
    article_id?: SortOrder
    books?: booksOrderByWithRelationInput
  }

  export type book_articlesWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    book_id_article_id?: book_articlesBook_idArticle_idCompoundUniqueInput
    AND?: book_articlesWhereInput | book_articlesWhereInput[]
    OR?: book_articlesWhereInput[]
    NOT?: book_articlesWhereInput | book_articlesWhereInput[]
    order?: IntFilter<"book_articles"> | number
    added_at?: DateTimeFilter<"book_articles"> | Date | string
    book_id?: UuidFilter<"book_articles"> | string
    article_id?: UuidFilter<"book_articles"> | string
    books?: XOR<BooksScalarRelationFilter, booksWhereInput>
  }, "id" | "book_id_article_id">

  export type book_articlesOrderByWithAggregationInput = {
    order?: SortOrder
    added_at?: SortOrder
    id?: SortOrder
    book_id?: SortOrder
    article_id?: SortOrder
    _count?: book_articlesCountOrderByAggregateInput
    _avg?: book_articlesAvgOrderByAggregateInput
    _max?: book_articlesMaxOrderByAggregateInput
    _min?: book_articlesMinOrderByAggregateInput
    _sum?: book_articlesSumOrderByAggregateInput
  }

  export type book_articlesScalarWhereWithAggregatesInput = {
    AND?: book_articlesScalarWhereWithAggregatesInput | book_articlesScalarWhereWithAggregatesInput[]
    OR?: book_articlesScalarWhereWithAggregatesInput[]
    NOT?: book_articlesScalarWhereWithAggregatesInput | book_articlesScalarWhereWithAggregatesInput[]
    order?: IntWithAggregatesFilter<"book_articles"> | number
    added_at?: DateTimeWithAggregatesFilter<"book_articles"> | Date | string
    id?: UuidWithAggregatesFilter<"book_articles"> | string
    book_id?: UuidWithAggregatesFilter<"book_articles"> | string
    article_id?: UuidWithAggregatesFilter<"book_articles"> | string
  }

  export type booksWhereInput = {
    AND?: booksWhereInput | booksWhereInput[]
    OR?: booksWhereInput[]
    NOT?: booksWhereInput | booksWhereInput[]
    title?: StringFilter<"books"> | string
    description?: StringFilter<"books"> | string
    cover_image_url?: StringNullableFilter<"books"> | string | null
    is_public?: BoolFilter<"books"> | boolean
    created_at?: DateTimeFilter<"books"> | Date | string
    updated_at?: DateTimeFilter<"books"> | Date | string
    id?: UuidFilter<"books"> | string
    user_id?: UuidFilter<"books"> | string
    book_articles?: Book_articlesListRelationFilter
  }

  export type booksOrderByWithRelationInput = {
    title?: SortOrder
    description?: SortOrder
    cover_image_url?: SortOrderInput | SortOrder
    is_public?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    book_articles?: book_articlesOrderByRelationAggregateInput
  }

  export type booksWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: booksWhereInput | booksWhereInput[]
    OR?: booksWhereInput[]
    NOT?: booksWhereInput | booksWhereInput[]
    title?: StringFilter<"books"> | string
    description?: StringFilter<"books"> | string
    cover_image_url?: StringNullableFilter<"books"> | string | null
    is_public?: BoolFilter<"books"> | boolean
    created_at?: DateTimeFilter<"books"> | Date | string
    updated_at?: DateTimeFilter<"books"> | Date | string
    user_id?: UuidFilter<"books"> | string
    book_articles?: Book_articlesListRelationFilter
  }, "id">

  export type booksOrderByWithAggregationInput = {
    title?: SortOrder
    description?: SortOrder
    cover_image_url?: SortOrderInput | SortOrder
    is_public?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
    _count?: booksCountOrderByAggregateInput
    _max?: booksMaxOrderByAggregateInput
    _min?: booksMinOrderByAggregateInput
  }

  export type booksScalarWhereWithAggregatesInput = {
    AND?: booksScalarWhereWithAggregatesInput | booksScalarWhereWithAggregatesInput[]
    OR?: booksScalarWhereWithAggregatesInput[]
    NOT?: booksScalarWhereWithAggregatesInput | booksScalarWhereWithAggregatesInput[]
    title?: StringWithAggregatesFilter<"books"> | string
    description?: StringWithAggregatesFilter<"books"> | string
    cover_image_url?: StringNullableWithAggregatesFilter<"books"> | string | null
    is_public?: BoolWithAggregatesFilter<"books"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"books"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"books"> | Date | string
    id?: UuidWithAggregatesFilter<"books"> | string
    user_id?: UuidWithAggregatesFilter<"books"> | string
  }

  export type spatial_ref_sysWhereInput = {
    AND?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    OR?: spatial_ref_sysWhereInput[]
    NOT?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    srid?: IntFilter<"spatial_ref_sys"> | number
    auth_name?: StringNullableFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableFilter<"spatial_ref_sys"> | string | null
  }

  export type spatial_ref_sysOrderByWithRelationInput = {
    srid?: SortOrder
    auth_name?: SortOrderInput | SortOrder
    auth_srid?: SortOrderInput | SortOrder
    srtext?: SortOrderInput | SortOrder
    proj4text?: SortOrderInput | SortOrder
  }

  export type spatial_ref_sysWhereUniqueInput = Prisma.AtLeast<{
    srid?: number
    AND?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    OR?: spatial_ref_sysWhereInput[]
    NOT?: spatial_ref_sysWhereInput | spatial_ref_sysWhereInput[]
    auth_name?: StringNullableFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableFilter<"spatial_ref_sys"> | string | null
  }, "srid">

  export type spatial_ref_sysOrderByWithAggregationInput = {
    srid?: SortOrder
    auth_name?: SortOrderInput | SortOrder
    auth_srid?: SortOrderInput | SortOrder
    srtext?: SortOrderInput | SortOrder
    proj4text?: SortOrderInput | SortOrder
    _count?: spatial_ref_sysCountOrderByAggregateInput
    _avg?: spatial_ref_sysAvgOrderByAggregateInput
    _max?: spatial_ref_sysMaxOrderByAggregateInput
    _min?: spatial_ref_sysMinOrderByAggregateInput
    _sum?: spatial_ref_sysSumOrderByAggregateInput
  }

  export type spatial_ref_sysScalarWhereWithAggregatesInput = {
    AND?: spatial_ref_sysScalarWhereWithAggregatesInput | spatial_ref_sysScalarWhereWithAggregatesInput[]
    OR?: spatial_ref_sysScalarWhereWithAggregatesInput[]
    NOT?: spatial_ref_sysScalarWhereWithAggregatesInput | spatial_ref_sysScalarWhereWithAggregatesInput[]
    srid?: IntWithAggregatesFilter<"spatial_ref_sys"> | number
    auth_name?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
    auth_srid?: IntNullableWithAggregatesFilter<"spatial_ref_sys"> | number | null
    srtext?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
    proj4text?: StringNullableWithAggregatesFilter<"spatial_ref_sys"> | string | null
  }

  export type article_entitiesCreateInput = {
    articles: articlesCreateNestedOneWithoutArticle_entitiesInput
    entities: entitiesCreateNestedOneWithoutArticle_entitiesInput
  }

  export type article_entitiesUncheckedCreateInput = {
    article_id: string
    entity_id: bigint | number
  }

  export type article_entitiesUpdateInput = {
    articles?: articlesUpdateOneRequiredWithoutArticle_entitiesNestedInput
    entities?: entitiesUpdateOneRequiredWithoutArticle_entitiesNestedInput
  }

  export type article_entitiesUncheckedUpdateInput = {
    article_id?: StringFieldUpdateOperationsInput | string
    entity_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type article_entitiesCreateManyInput = {
    article_id: string
    entity_id: bigint | number
  }

  export type article_entitiesUpdateManyMutationInput = {

  }

  export type article_entitiesUncheckedUpdateManyInput = {
    article_id?: StringFieldUpdateOperationsInput | string
    entity_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type articlesCreateInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsCreateNestedManyWithoutArticlesInput
    likes?: likesCreateNestedManyWithoutArticlesInput
    views?: viewsCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsUncheckedCreateNestedManyWithoutArticlesInput
    likes?: likesUncheckedCreateNestedManyWithoutArticlesInput
    views?: viewsUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUpdateManyWithoutArticlesNestedInput
    likes?: likesUpdateManyWithoutArticlesNestedInput
    views?: viewsUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUncheckedUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput
    likes?: likesUncheckedUpdateManyWithoutArticlesNestedInput
    views?: viewsUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type articlesCreateManyInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
  }

  export type articlesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type articlesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type entitiesCreateInput = {
    id?: bigint | number
    name: string
    type: string
    description?: string | null
    wiki_url?: string | null
    created_at?: Date | string | null
    article_entities?: article_entitiesCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUncheckedCreateInput = {
    id?: bigint | number
    name: string
    type: string
    description?: string | null
    wiki_url?: string | null
    created_at?: Date | string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutEntitiesInput
  }

  export type entitiesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    wiki_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    article_entities?: article_entitiesUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    wiki_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutEntitiesNestedInput
  }

  export type entitiesCreateManyInput = {
    id?: bigint | number
    name: string
    type: string
    description?: string | null
    wiki_url?: string | null
    created_at?: Date | string | null
  }

  export type entitiesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    wiki_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entitiesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    wiki_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type user_article_viewsCreateInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    viewed_at?: Date | string | null
    liked?: boolean | null
    bookmarked?: boolean | null
  }

  export type user_article_viewsUncheckedCreateInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    viewed_at?: Date | string | null
    liked?: boolean | null
    bookmarked?: boolean | null
  }

  export type user_article_viewsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    liked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    bookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_article_viewsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    liked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    bookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_article_viewsCreateManyInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    viewed_at?: Date | string | null
    liked?: boolean | null
    bookmarked?: boolean | null
  }

  export type user_article_viewsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    liked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    bookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type user_article_viewsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    liked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    bookmarked?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type public_usersCreateInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsCreateNestedOneWithoutUsersInput
    users: usersCreateNestedOneWithoutUsersInput
    views?: viewsCreateNestedManyWithoutUsersInput
  }

  export type public_usersUncheckedCreateInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsUncheckedCreateNestedOneWithoutUsersInput
    views?: viewsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type public_usersUpdateInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneRequiredWithoutUsersNestedInput
    views?: viewsUpdateManyWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUncheckedUpdateOneWithoutUsersNestedInput
    views?: viewsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type public_usersCreateManyInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
  }

  export type public_usersUpdateManyMutationInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type public_usersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type weekly_forecastsCreateInput = {
    id?: bigint | number
    week_start?: Date | string | null
    generated_at?: Date | string | null
    content?: string | null
  }

  export type weekly_forecastsUncheckedCreateInput = {
    id?: bigint | number
    week_start?: Date | string | null
    generated_at?: Date | string | null
    content?: string | null
  }

  export type weekly_forecastsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    week_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    generated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weekly_forecastsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    week_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    generated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weekly_forecastsCreateManyInput = {
    id?: bigint | number
    week_start?: Date | string | null
    generated_at?: Date | string | null
    content?: string | null
  }

  export type weekly_forecastsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    week_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    generated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type weekly_forecastsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    week_start?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    generated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type article_tagsCreateInput = {
    articles: articlesCreateNestedOneWithoutArticle_tagsInput
    tags: tagsCreateNestedOneWithoutArticle_tagsInput
  }

  export type article_tagsUncheckedCreateInput = {
    article_id: string
    tag_id: bigint | number
  }

  export type article_tagsUpdateInput = {
    articles?: articlesUpdateOneRequiredWithoutArticle_tagsNestedInput
    tags?: tagsUpdateOneRequiredWithoutArticle_tagsNestedInput
  }

  export type article_tagsUncheckedUpdateInput = {
    article_id?: StringFieldUpdateOperationsInput | string
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type article_tagsCreateManyInput = {
    article_id: string
    tag_id: bigint | number
  }

  export type article_tagsUpdateManyMutationInput = {

  }

  export type article_tagsUncheckedUpdateManyInput = {
    article_id?: StringFieldUpdateOperationsInput | string
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type bookmark_foldersCreateInput = {
    id?: bigint | number
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
    users?: public_usersCreateNestedOneWithoutBookmark_foldersInput
    bookmarks?: bookmarksCreateNestedManyWithoutBookmark_foldersInput
  }

  export type bookmark_foldersUncheckedCreateInput = {
    id?: bigint | number
    user_id?: string | null
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutBookmark_foldersInput
  }

  export type bookmark_foldersUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: public_usersUpdateOneWithoutBookmark_foldersNestedInput
    bookmarks?: bookmarksUpdateManyWithoutBookmark_foldersNestedInput
  }

  export type bookmark_foldersUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmarks?: bookmarksUncheckedUpdateManyWithoutBookmark_foldersNestedInput
  }

  export type bookmark_foldersCreateManyInput = {
    id?: bigint | number
    user_id?: string | null
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
  }

  export type bookmark_foldersUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmark_foldersUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksCreateInput = {
    id?: bigint | number
    bookmarked_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutBookmarksInput
    bookmark_folders?: bookmark_foldersCreateNestedOneWithoutBookmarksInput
    users?: public_usersCreateNestedOneWithoutBookmarksInput
  }

  export type bookmarksUncheckedCreateInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    folder_id?: bigint | number | null
    bookmarked_at?: Date | string | null
  }

  export type bookmarksUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutBookmarksNestedInput
    bookmark_folders?: bookmark_foldersUpdateOneWithoutBookmarksNestedInput
    users?: public_usersUpdateOneWithoutBookmarksNestedInput
  }

  export type bookmarksUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    folder_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksCreateManyInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    folder_id?: bigint | number | null
    bookmarked_at?: Date | string | null
  }

  export type bookmarksUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    folder_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geo_eventsCreateInput = {
    id?: string
    lat?: number | null
    lng?: number | null
    zoom_level?: number | null
    label?: string | null
    created_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutGeo_eventsInput
  }

  export type geo_eventsUncheckedCreateInput = {
    id?: string
    article_id?: string | null
    lat?: number | null
    lng?: number | null
    zoom_level?: number | null
    label?: string | null
    created_at?: Date | string | null
  }

  export type geo_eventsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutGeo_eventsNestedInput
  }

  export type geo_eventsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geo_eventsCreateManyInput = {
    id?: string
    article_id?: string | null
    lat?: number | null
    lng?: number | null
    zoom_level?: number | null
    label?: string | null
    created_at?: Date | string | null
  }

  export type geo_eventsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geo_eventsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesCreateInput = {
    id?: bigint | number
    liked_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutLikesInput
    users?: public_usersCreateNestedOneWithoutLikesInput
  }

  export type likesUncheckedCreateInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    liked_at?: Date | string | null
  }

  export type likesUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutLikesNestedInput
    users?: public_usersUpdateOneWithoutLikesNestedInput
  }

  export type likesUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesCreateManyInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    liked_at?: Date | string | null
  }

  export type likesUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type tagsCreateInput = {
    id?: bigint | number
    name?: string | null
    article_tags?: article_tagsCreateNestedManyWithoutTagsInput
  }

  export type tagsUncheckedCreateInput = {
    id?: bigint | number
    name?: string | null
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutTagsInput
  }

  export type tagsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    article_tags?: article_tagsUpdateManyWithoutTagsNestedInput
  }

  export type tagsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    article_tags?: article_tagsUncheckedUpdateManyWithoutTagsNestedInput
  }

  export type tagsCreateManyInput = {
    id?: bigint | number
    name?: string | null
  }

  export type tagsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tagsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type viewsCreateInput = {
    id?: bigint | number
    viewed_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutViewsInput
    users?: public_usersCreateNestedOneWithoutViewsInput
  }

  export type viewsUncheckedCreateInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    viewed_at?: Date | string | null
  }

  export type viewsUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutViewsNestedInput
    users?: public_usersUpdateOneWithoutViewsNestedInput
  }

  export type viewsUncheckedUpdateInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type viewsCreateManyInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    viewed_at?: Date | string | null
  }

  export type viewsUpdateManyMutationInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type viewsUncheckedUpdateManyInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type audit_log_entriesCreateInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUncheckedCreateInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesCreateManyInput = {
    instance_id?: string | null
    id: string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    ip_address?: string
  }

  export type audit_log_entriesUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type audit_log_entriesUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    payload?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
  }

  export type flow_stateCreateInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutFlow_stateInput
  }

  export type flow_stateUncheckedCreateInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutFlow_stateInput
  }

  export type flow_stateUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUpdateManyWithoutFlow_stateNestedInput
  }

  export type flow_stateUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutFlow_stateNestedInput
  }

  export type flow_stateCreateManyInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
  }

  export type flow_stateUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type flow_stateUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type identitiesCreateInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
    users: usersCreateNestedOneWithoutIdentitiesInput
  }

  export type identitiesUncheckedCreateInput = {
    provider_id: string
    user_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUpdateInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    users?: usersUpdateOneRequiredWithoutIdentitiesNestedInput
  }

  export type identitiesUncheckedUpdateInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesCreateManyInput = {
    provider_id: string
    user_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUpdateManyMutationInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateManyInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type instancesCreateInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUncheckedCreateInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesCreateManyInput = {
    id: string
    uuid?: string | null
    raw_base_config?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type instancesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type instancesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    uuid?: NullableStringFieldUpdateOperationsInput | string | null
    raw_base_config?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mfa_amr_claimsCreateInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
    sessions: sessionsCreateNestedOneWithoutMfa_amr_claimsInput
  }

  export type mfa_amr_claimsUncheckedCreateInput = {
    session_id: string
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUpdateInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
    sessions?: sessionsUpdateOneRequiredWithoutMfa_amr_claimsNestedInput
  }

  export type mfa_amr_claimsUncheckedUpdateInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsCreateManyInput = {
    session_id: string
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUpdateManyMutationInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateManyInput = {
    session_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_challengesCreateInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
    mfa_factors: mfa_factorsCreateNestedOneWithoutMfa_challengesInput
  }

  export type mfa_challengesUncheckedCreateInput = {
    id: string
    factor_id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
    mfa_factors?: mfa_factorsUpdateOneRequiredWithoutMfa_challengesNestedInput
  }

  export type mfa_challengesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    factor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesCreateManyInput = {
    id: string
    factor_id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    factor_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_factorsCreateInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesCreateNestedManyWithoutMfa_factorsInput
    users: usersCreateNestedOneWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUpdateManyWithoutMfa_factorsNestedInput
    users?: usersUpdateOneRequiredWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsCreateManyInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
  }

  export type mfa_factorsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mfa_factorsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type one_time_tokensCreateInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
    users: usersCreateNestedOneWithoutOne_time_tokensInput
  }

  export type one_time_tokensUncheckedCreateInput = {
    id: string
    user_id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    users?: usersUpdateOneRequiredWithoutOne_time_tokensNestedInput
  }

  export type one_time_tokensUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensCreateManyInput = {
    id: string
    user_id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type refresh_tokensCreateInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    sessions?: sessionsCreateNestedOneWithoutRefresh_tokensInput
  }

  export type refresh_tokensUncheckedCreateInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    session_id?: string | null
  }

  export type refresh_tokensUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    sessions?: sessionsUpdateOneWithoutRefresh_tokensNestedInput
  }

  export type refresh_tokensUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensCreateManyInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
    session_id?: string | null
  }

  export type refresh_tokensUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
    session_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
    sso_providers: sso_providersCreateNestedOneWithoutSaml_providersInput
  }

  export type saml_providersUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_providersNestedInput
  }

  export type saml_providersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateManyInput = {
    id: string
    sso_provider_id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesCreateInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state?: flow_stateCreateNestedOneWithoutSaml_relay_statesInput
    sso_providers: sso_providersCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state?: flow_stateUpdateOneWithoutSaml_relay_statesNestedInput
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesCreateManyInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type schema_migrationsCreateInput = {
    version: string
  }

  export type schema_migrationsUncheckedCreateInput = {
    version: string
  }

  export type schema_migrationsUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsUncheckedUpdateInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsCreateManyInput = {
    version: string
  }

  export type schema_migrationsUpdateManyMutationInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type schema_migrationsUncheckedUpdateManyInput = {
    version?: StringFieldUpdateOperationsInput | string
  }

  export type sessionsCreateInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsCreateManyInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
  }

  export type sessionsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sessionsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_domainsCreateInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSso_domainsInput
  }

  export type sso_domainsUncheckedCreateInput = {
    id: string
    sso_provider_id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSso_domainsNestedInput
  }

  export type sso_domainsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsCreateManyInput = {
    id: string
    sso_provider_id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersCreateInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersCreateManyInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_providersUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersCreateInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    users?: public_usersCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    users?: public_usersUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    users?: public_usersUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    users?: public_usersUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersCreateManyInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
  }

  export type usersUpdateManyMutationInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
  }

  export type usersUncheckedUpdateManyInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
  }

  export type public_sessionsCreateInput = {
    token?: string | null
    expires?: Date | string | null
    users: public_usersCreateNestedOneWithoutSessionsInput
  }

  export type public_sessionsUncheckedCreateInput = {
    user_id: string
    token?: string | null
    expires?: Date | string | null
  }

  export type public_sessionsUpdateInput = {
    token?: NullableStringFieldUpdateOperationsInput | string | null
    expires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: public_usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type public_sessionsUncheckedUpdateInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    expires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type public_sessionsCreateManyInput = {
    user_id: string
    token?: string | null
    expires?: Date | string | null
  }

  export type public_sessionsUpdateManyMutationInput = {
    token?: NullableStringFieldUpdateOperationsInput | string | null
    expires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type public_sessionsUncheckedUpdateManyInput = {
    user_id?: StringFieldUpdateOperationsInput | string
    token?: NullableStringFieldUpdateOperationsInput | string | null
    expires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type book_articlesCreateInput = {
    order: number
    added_at?: Date | string
    id?: string
    article_id: string
    books: booksCreateNestedOneWithoutBook_articlesInput
  }

  export type book_articlesUncheckedCreateInput = {
    order: number
    added_at?: Date | string
    id?: string
    book_id: string
    article_id: string
  }

  export type book_articlesUpdateInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
    books?: booksUpdateOneRequiredWithoutBook_articlesNestedInput
  }

  export type book_articlesUncheckedUpdateInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    book_id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type book_articlesCreateManyInput = {
    order: number
    added_at?: Date | string
    id?: string
    book_id: string
    article_id: string
  }

  export type book_articlesUpdateManyMutationInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type book_articlesUncheckedUpdateManyInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    book_id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type booksCreateInput = {
    title: string
    description: string
    cover_image_url?: string | null
    is_public?: boolean
    created_at?: Date | string
    updated_at: Date | string
    id?: string
    user_id: string
    book_articles?: book_articlesCreateNestedManyWithoutBooksInput
  }

  export type booksUncheckedCreateInput = {
    title: string
    description: string
    cover_image_url?: string | null
    is_public?: boolean
    created_at?: Date | string
    updated_at: Date | string
    id?: string
    user_id: string
    book_articles?: book_articlesUncheckedCreateNestedManyWithoutBooksInput
  }

  export type booksUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cover_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    book_articles?: book_articlesUpdateManyWithoutBooksNestedInput
  }

  export type booksUncheckedUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cover_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    book_articles?: book_articlesUncheckedUpdateManyWithoutBooksNestedInput
  }

  export type booksCreateManyInput = {
    title: string
    description: string
    cover_image_url?: string | null
    is_public?: boolean
    created_at?: Date | string
    updated_at: Date | string
    id?: string
    user_id: string
  }

  export type booksUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cover_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type booksUncheckedUpdateManyInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cover_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type spatial_ref_sysCreateInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUncheckedCreateInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUpdateInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysUncheckedUpdateInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysCreateManyInput = {
    srid: number
    auth_name?: string | null
    auth_srid?: number | null
    srtext?: string | null
    proj4text?: string | null
  }

  export type spatial_ref_sysUpdateManyMutationInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type spatial_ref_sysUncheckedUpdateManyInput = {
    srid?: IntFieldUpdateOperationsInput | number
    auth_name?: NullableStringFieldUpdateOperationsInput | string | null
    auth_srid?: NullableIntFieldUpdateOperationsInput | number | null
    srtext?: NullableStringFieldUpdateOperationsInput | string | null
    proj4text?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type BigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type ArticlesScalarRelationFilter = {
    is?: articlesWhereInput
    isNot?: articlesWhereInput
  }

  export type EntitiesScalarRelationFilter = {
    is?: entitiesWhereInput
    isNot?: entitiesWhereInput
  }

  export type article_entitiesArticle_idEntity_idCompoundUniqueInput = {
    article_id: string
    entity_id: bigint | number
  }

  export type article_entitiesCountOrderByAggregateInput = {
    article_id?: SortOrder
    entity_id?: SortOrder
  }

  export type article_entitiesAvgOrderByAggregateInput = {
    entity_id?: SortOrder
  }

  export type article_entitiesMaxOrderByAggregateInput = {
    article_id?: SortOrder
    entity_id?: SortOrder
  }

  export type article_entitiesMinOrderByAggregateInput = {
    article_id?: SortOrder
    entity_id?: SortOrder
  }

  export type article_entitiesSumOrderByAggregateInput = {
    entity_id?: SortOrder
  }

  export type UuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type BigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type FloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type Enumsentiment_typeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.sentiment_type | Enumsentiment_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumsentiment_typeNullableFilter<$PrismaModel> | $Enums.sentiment_type | null
  }

  export type Article_entitiesListRelationFilter = {
    every?: article_entitiesWhereInput
    some?: article_entitiesWhereInput
    none?: article_entitiesWhereInput
  }

  export type Article_tagsListRelationFilter = {
    every?: article_tagsWhereInput
    some?: article_tagsWhereInput
    none?: article_tagsWhereInput
  }

  export type BookmarksListRelationFilter = {
    every?: bookmarksWhereInput
    some?: bookmarksWhereInput
    none?: bookmarksWhereInput
  }

  export type Geo_eventsListRelationFilter = {
    every?: geo_eventsWhereInput
    some?: geo_eventsWhereInput
    none?: geo_eventsWhereInput
  }

  export type LikesListRelationFilter = {
    every?: likesWhereInput
    some?: likesWhereInput
    none?: likesWhereInput
  }

  export type ViewsListRelationFilter = {
    every?: viewsWhereInput
    some?: viewsWhereInput
    none?: viewsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type article_entitiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type article_tagsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type bookmarksOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type geo_eventsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type likesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type viewsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type articlesCountOrderByAggregateInput = {
    id?: SortOrder
    source?: SortOrder
    title?: SortOrder
    url?: SortOrder
    image_url?: SortOrder
    published_at?: SortOrder
    category?: SortOrder
    author?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    location_name?: SortOrder
    sentiment?: SortOrder
    significance?: SortOrder
    created_at?: SortOrder
    future_implications?: SortOrder
  }

  export type articlesAvgOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type articlesMaxOrderByAggregateInput = {
    id?: SortOrder
    source?: SortOrder
    title?: SortOrder
    url?: SortOrder
    image_url?: SortOrder
    published_at?: SortOrder
    category?: SortOrder
    author?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    location_name?: SortOrder
    sentiment?: SortOrder
    significance?: SortOrder
    created_at?: SortOrder
    future_implications?: SortOrder
  }

  export type articlesMinOrderByAggregateInput = {
    id?: SortOrder
    source?: SortOrder
    title?: SortOrder
    url?: SortOrder
    image_url?: SortOrder
    published_at?: SortOrder
    category?: SortOrder
    author?: SortOrder
    content?: SortOrder
    summary?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    location_name?: SortOrder
    sentiment?: SortOrder
    significance?: SortOrder
    created_at?: SortOrder
    future_implications?: SortOrder
  }

  export type articlesSumOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type FloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type Enumsentiment_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.sentiment_type | Enumsentiment_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumsentiment_typeNullableWithAggregatesFilter<$PrismaModel> | $Enums.sentiment_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumsentiment_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumsentiment_typeNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type entitiesCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    description?: SortOrder
    wiki_url?: SortOrder
    created_at?: SortOrder
  }

  export type entitiesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type entitiesMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    description?: SortOrder
    wiki_url?: SortOrder
    created_at?: SortOrder
  }

  export type entitiesMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    description?: SortOrder
    wiki_url?: SortOrder
    created_at?: SortOrder
  }

  export type entitiesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type UuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type user_article_viewsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    viewed_at?: SortOrder
    liked?: SortOrder
    bookmarked?: SortOrder
  }

  export type user_article_viewsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type user_article_viewsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    viewed_at?: SortOrder
    liked?: SortOrder
    bookmarked?: SortOrder
  }

  export type user_article_viewsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    viewed_at?: SortOrder
    liked?: SortOrder
    bookmarked?: SortOrder
  }

  export type user_article_viewsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type UuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    mode?: QueryMode
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type JsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type Bookmark_foldersListRelationFilter = {
    every?: bookmark_foldersWhereInput
    some?: bookmark_foldersWhereInput
    none?: bookmark_foldersWhereInput
  }

  export type Public_sessionsNullableScalarRelationFilter = {
    is?: public_sessionsWhereInput | null
    isNot?: public_sessionsWhereInput | null
  }

  export type UsersScalarRelationFilter = {
    is?: usersWhereInput
    isNot?: usersWhereInput
  }

  export type bookmark_foldersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type public_usersCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    preferences?: SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
  }

  export type public_usersMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
  }

  export type public_usersMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    email?: SortOrder
    password?: SortOrder
    created_at?: SortOrder
    last_active?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type weekly_forecastsCountOrderByAggregateInput = {
    id?: SortOrder
    week_start?: SortOrder
    generated_at?: SortOrder
    content?: SortOrder
  }

  export type weekly_forecastsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type weekly_forecastsMaxOrderByAggregateInput = {
    id?: SortOrder
    week_start?: SortOrder
    generated_at?: SortOrder
    content?: SortOrder
  }

  export type weekly_forecastsMinOrderByAggregateInput = {
    id?: SortOrder
    week_start?: SortOrder
    generated_at?: SortOrder
    content?: SortOrder
  }

  export type weekly_forecastsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type TagsScalarRelationFilter = {
    is?: tagsWhereInput
    isNot?: tagsWhereInput
  }

  export type article_tagsArticle_idTag_idCompoundUniqueInput = {
    article_id: string
    tag_id: bigint | number
  }

  export type article_tagsCountOrderByAggregateInput = {
    article_id?: SortOrder
    tag_id?: SortOrder
  }

  export type article_tagsAvgOrderByAggregateInput = {
    tag_id?: SortOrder
  }

  export type article_tagsMaxOrderByAggregateInput = {
    article_id?: SortOrder
    tag_id?: SortOrder
  }

  export type article_tagsMinOrderByAggregateInput = {
    article_id?: SortOrder
    tag_id?: SortOrder
  }

  export type article_tagsSumOrderByAggregateInput = {
    tag_id?: SortOrder
  }

  export type Public_usersNullableScalarRelationFilter = {
    is?: public_usersWhereInput | null
    isNot?: public_usersWhereInput | null
  }

  export type bookmark_foldersUser_idNameCompoundUniqueInput = {
    user_id: string
    name: string
  }

  export type bookmark_foldersCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    is_standard?: SortOrder
    created_at?: SortOrder
  }

  export type bookmark_foldersAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type bookmark_foldersMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    is_standard?: SortOrder
    created_at?: SortOrder
  }

  export type bookmark_foldersMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    name?: SortOrder
    is_standard?: SortOrder
    created_at?: SortOrder
  }

  export type bookmark_foldersSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type BigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type ArticlesNullableScalarRelationFilter = {
    is?: articlesWhereInput | null
    isNot?: articlesWhereInput | null
  }

  export type Bookmark_foldersNullableScalarRelationFilter = {
    is?: bookmark_foldersWhereInput | null
    isNot?: bookmark_foldersWhereInput | null
  }

  export type bookmarksUser_idArticle_idCompoundUniqueInput = {
    user_id: string
    article_id: string
  }

  export type bookmarksCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    folder_id?: SortOrder
    bookmarked_at?: SortOrder
  }

  export type bookmarksAvgOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
  }

  export type bookmarksMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    folder_id?: SortOrder
    bookmarked_at?: SortOrder
  }

  export type bookmarksMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    folder_id?: SortOrder
    bookmarked_at?: SortOrder
  }

  export type bookmarksSumOrderByAggregateInput = {
    id?: SortOrder
    folder_id?: SortOrder
  }

  export type BigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type geo_eventsCountOrderByAggregateInput = {
    id?: SortOrder
    article_id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    zoom_level?: SortOrder
    label?: SortOrder
    created_at?: SortOrder
  }

  export type geo_eventsAvgOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
    zoom_level?: SortOrder
  }

  export type geo_eventsMaxOrderByAggregateInput = {
    id?: SortOrder
    article_id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    zoom_level?: SortOrder
    label?: SortOrder
    created_at?: SortOrder
  }

  export type geo_eventsMinOrderByAggregateInput = {
    id?: SortOrder
    article_id?: SortOrder
    lat?: SortOrder
    lng?: SortOrder
    zoom_level?: SortOrder
    label?: SortOrder
    created_at?: SortOrder
  }

  export type geo_eventsSumOrderByAggregateInput = {
    lat?: SortOrder
    lng?: SortOrder
    zoom_level?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type likesUser_idArticle_idCompoundUniqueInput = {
    user_id: string
    article_id: string
  }

  export type likesCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    liked_at?: SortOrder
  }

  export type likesAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type likesMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    liked_at?: SortOrder
  }

  export type likesMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    liked_at?: SortOrder
  }

  export type likesSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tagsCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type tagsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type tagsMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type tagsMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
  }

  export type tagsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type viewsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    viewed_at?: SortOrder
  }

  export type viewsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type viewsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    viewed_at?: SortOrder
  }

  export type viewsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    article_id?: SortOrder
    viewed_at?: SortOrder
  }

  export type viewsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type audit_log_entriesCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    payload?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type audit_log_entriesMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    created_at?: SortOrder
    ip_address?: SortOrder
  }

  export type Enumcode_challenge_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodFilter<$PrismaModel> | $Enums.code_challenge_method
  }

  export type Saml_relay_statesListRelationFilter = {
    every?: saml_relay_statesWhereInput
    some?: saml_relay_statesWhereInput
    none?: saml_relay_statesWhereInput
  }

  export type saml_relay_statesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type flow_stateCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrder
  }

  export type flow_stateMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrder
  }

  export type flow_stateMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    auth_code?: SortOrder
    code_challenge_method?: SortOrder
    code_challenge?: SortOrder
    provider_type?: SortOrder
    provider_access_token?: SortOrder
    provider_refresh_token?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    auth_code_issued_at?: SortOrder
  }

  export type Enumcode_challenge_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel> | $Enums.code_challenge_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
    _max?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
  }
  export type JsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type identitiesProvider_idProviderCompoundUniqueInput = {
    provider_id: string
    provider: string
  }

  export type identitiesCountOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    identity_data?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }

  export type identitiesMaxOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }

  export type identitiesMinOrderByAggregateInput = {
    provider_id?: SortOrder
    user_id?: SortOrder
    provider?: SortOrder
    last_sign_in_at?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    email?: SortOrder
    id?: SortOrder
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type instancesCountOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type instancesMaxOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type instancesMinOrderByAggregateInput = {
    id?: SortOrder
    uuid?: SortOrder
    raw_base_config?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type SessionsScalarRelationFilter = {
    is?: sessionsWhereInput
    isNot?: sessionsWhereInput
  }

  export type mfa_amr_claimsSession_idAuthentication_methodCompoundUniqueInput = {
    session_id: string
    authentication_method: string
  }

  export type mfa_amr_claimsCountOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type mfa_amr_claimsMaxOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type mfa_amr_claimsMinOrderByAggregateInput = {
    session_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    authentication_method?: SortOrder
    id?: SortOrder
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Mfa_factorsScalarRelationFilter = {
    is?: mfa_factorsWhereInput
    isNot?: mfa_factorsWhereInput
  }

  export type mfa_challengesCountOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrder
    web_authn_session_data?: SortOrder
  }

  export type mfa_challengesMaxOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrder
  }

  export type mfa_challengesMinOrderByAggregateInput = {
    id?: SortOrder
    factor_id?: SortOrder
    created_at?: SortOrder
    verified_at?: SortOrder
    ip_address?: SortOrder
    otp_code?: SortOrder
  }

  export type Enumfactor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeFilter<$PrismaModel> | $Enums.factor_type
  }

  export type Enumfactor_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusFilter<$PrismaModel> | $Enums.factor_status
  }

  export type Mfa_challengesListRelationFilter = {
    every?: mfa_challengesWhereInput
    some?: mfa_challengesWhereInput
    none?: mfa_challengesWhereInput
  }

  export type mfa_challengesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mfa_factorsUser_idPhoneCompoundUniqueInput = {
    user_id: string
    phone: string
  }

  export type mfa_factorsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
    phone?: SortOrder
    last_challenged_at?: SortOrder
    web_authn_credential?: SortOrder
    web_authn_aaguid?: SortOrder
  }

  export type mfa_factorsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
    phone?: SortOrder
    last_challenged_at?: SortOrder
    web_authn_aaguid?: SortOrder
  }

  export type mfa_factorsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    friendly_name?: SortOrder
    factor_type?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    secret?: SortOrder
    phone?: SortOrder
    last_challenged_at?: SortOrder
    web_authn_aaguid?: SortOrder
  }

  export type Enumfactor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel> | $Enums.factor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_typeFilter<$PrismaModel>
    _max?: NestedEnumfactor_typeFilter<$PrismaModel>
  }

  export type Enumfactor_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel> | $Enums.factor_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_statusFilter<$PrismaModel>
    _max?: NestedEnumfactor_statusFilter<$PrismaModel>
  }

  export type Enumone_time_token_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeFilter<$PrismaModel> | $Enums.one_time_token_type
  }

  export type one_time_tokensUser_idToken_typeCompoundUniqueInput = {
    user_id: string
    token_type: $Enums.one_time_token_type
  }

  export type one_time_tokensCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type one_time_tokensMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type one_time_tokensMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    token_type?: SortOrder
    token_hash?: SortOrder
    relates_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type Enumone_time_token_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeWithAggregatesFilter<$PrismaModel> | $Enums.one_time_token_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumone_time_token_typeFilter<$PrismaModel>
    _max?: NestedEnumone_time_token_typeFilter<$PrismaModel>
  }

  export type SessionsNullableScalarRelationFilter = {
    is?: sessionsWhereInput | null
    isNot?: sessionsWhereInput | null
  }

  export type refresh_tokensCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type refresh_tokensMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    token?: SortOrder
    user_id?: SortOrder
    revoked?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    parent?: SortOrder
    session_id?: SortOrder
  }

  export type refresh_tokensSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Sso_providersScalarRelationFilter = {
    is?: sso_providersWhereInput
    isNot?: sso_providersWhereInput
  }

  export type saml_providersCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    attribute_mapping?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name_id_format?: SortOrder
  }

  export type saml_providersMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name_id_format?: SortOrder
  }

  export type saml_providersMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    entity_id?: SortOrder
    metadata_xml?: SortOrder
    metadata_url?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    name_id_format?: SortOrder
  }

  export type Flow_stateNullableScalarRelationFilter = {
    is?: flow_stateWhereInput | null
    isNot?: flow_stateWhereInput | null
  }

  export type saml_relay_statesCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type saml_relay_statesMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type saml_relay_statesMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    request_id?: SortOrder
    for_email?: SortOrder
    redirect_to?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    flow_state_id?: SortOrder
  }

  export type schema_migrationsCountOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMaxOrderByAggregateInput = {
    version?: SortOrder
  }

  export type schema_migrationsMinOrderByAggregateInput = {
    version?: SortOrder
  }

  export type Enumaal_levelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableFilter<$PrismaModel> | $Enums.aal_level | null
  }

  export type Mfa_amr_claimsListRelationFilter = {
    every?: mfa_amr_claimsWhereInput
    some?: mfa_amr_claimsWhereInput
    none?: mfa_amr_claimsWhereInput
  }

  export type Refresh_tokensListRelationFilter = {
    every?: refresh_tokensWhereInput
    some?: refresh_tokensWhereInput
    none?: refresh_tokensWhereInput
  }

  export type mfa_amr_claimsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type refresh_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sessionsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type sessionsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type sessionsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    factor_id?: SortOrder
    aal?: SortOrder
    not_after?: SortOrder
    refreshed_at?: SortOrder
    user_agent?: SortOrder
    ip?: SortOrder
    tag?: SortOrder
  }

  export type Enumaal_levelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel> | $Enums.aal_level | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumaal_levelNullableFilter<$PrismaModel>
    _max?: NestedEnumaal_levelNullableFilter<$PrismaModel>
  }

  export type sso_domainsCountOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_domainsMaxOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_domainsMinOrderByAggregateInput = {
    id?: SortOrder
    sso_provider_id?: SortOrder
    domain?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type Saml_providersListRelationFilter = {
    every?: saml_providersWhereInput
    some?: saml_providersWhereInput
    none?: saml_providersWhereInput
  }

  export type Sso_domainsListRelationFilter = {
    every?: sso_domainsWhereInput
    some?: sso_domainsWhereInput
    none?: sso_domainsWhereInput
  }

  export type saml_providersOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_domainsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sso_providersCountOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_providersMaxOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type sso_providersMinOrderByAggregateInput = {
    id?: SortOrder
    resource_id?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IdentitiesListRelationFilter = {
    every?: identitiesWhereInput
    some?: identitiesWhereInput
    none?: identitiesWhereInput
  }

  export type Mfa_factorsListRelationFilter = {
    every?: mfa_factorsWhereInput
    some?: mfa_factorsWhereInput
    none?: mfa_factorsWhereInput
  }

  export type One_time_tokensListRelationFilter = {
    every?: one_time_tokensWhereInput
    some?: one_time_tokensWhereInput
    none?: one_time_tokensWhereInput
  }

  export type SessionsListRelationFilter = {
    every?: sessionsWhereInput
    some?: sessionsWhereInput
    none?: sessionsWhereInput
  }

  export type identitiesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type mfa_factorsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type one_time_tokensOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type sessionsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type usersCountOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    raw_app_meta_data?: SortOrder
    raw_user_meta_data?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
    is_anonymous?: SortOrder
  }

  export type usersAvgOrderByAggregateInput = {
    email_change_confirm_status?: SortOrder
  }

  export type usersMaxOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
    is_anonymous?: SortOrder
  }

  export type usersMinOrderByAggregateInput = {
    instance_id?: SortOrder
    id?: SortOrder
    aud?: SortOrder
    role?: SortOrder
    email?: SortOrder
    encrypted_password?: SortOrder
    email_confirmed_at?: SortOrder
    invited_at?: SortOrder
    confirmation_token?: SortOrder
    confirmation_sent_at?: SortOrder
    recovery_token?: SortOrder
    recovery_sent_at?: SortOrder
    email_change_token_new?: SortOrder
    email_change?: SortOrder
    email_change_sent_at?: SortOrder
    last_sign_in_at?: SortOrder
    is_super_admin?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    phone?: SortOrder
    phone_confirmed_at?: SortOrder
    phone_change?: SortOrder
    phone_change_token?: SortOrder
    phone_change_sent_at?: SortOrder
    confirmed_at?: SortOrder
    email_change_token_current?: SortOrder
    email_change_confirm_status?: SortOrder
    banned_until?: SortOrder
    reauthentication_token?: SortOrder
    reauthentication_sent_at?: SortOrder
    is_sso_user?: SortOrder
    deleted_at?: SortOrder
    is_anonymous?: SortOrder
  }

  export type usersSumOrderByAggregateInput = {
    email_change_confirm_status?: SortOrder
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type Public_usersScalarRelationFilter = {
    is?: public_usersWhereInput
    isNot?: public_usersWhereInput
  }

  export type public_sessionsCountOrderByAggregateInput = {
    user_id?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type public_sessionsMaxOrderByAggregateInput = {
    user_id?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type public_sessionsMinOrderByAggregateInput = {
    user_id?: SortOrder
    token?: SortOrder
    expires?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type BooksScalarRelationFilter = {
    is?: booksWhereInput
    isNot?: booksWhereInput
  }

  export type book_articlesBook_idArticle_idCompoundUniqueInput = {
    book_id: string
    article_id: string
  }

  export type book_articlesCountOrderByAggregateInput = {
    order?: SortOrder
    added_at?: SortOrder
    id?: SortOrder
    book_id?: SortOrder
    article_id?: SortOrder
  }

  export type book_articlesAvgOrderByAggregateInput = {
    order?: SortOrder
  }

  export type book_articlesMaxOrderByAggregateInput = {
    order?: SortOrder
    added_at?: SortOrder
    id?: SortOrder
    book_id?: SortOrder
    article_id?: SortOrder
  }

  export type book_articlesMinOrderByAggregateInput = {
    order?: SortOrder
    added_at?: SortOrder
    id?: SortOrder
    book_id?: SortOrder
    article_id?: SortOrder
  }

  export type book_articlesSumOrderByAggregateInput = {
    order?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type Book_articlesListRelationFilter = {
    every?: book_articlesWhereInput
    some?: book_articlesWhereInput
    none?: book_articlesWhereInput
  }

  export type book_articlesOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type booksCountOrderByAggregateInput = {
    title?: SortOrder
    description?: SortOrder
    cover_image_url?: SortOrder
    is_public?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
  }

  export type booksMaxOrderByAggregateInput = {
    title?: SortOrder
    description?: SortOrder
    cover_image_url?: SortOrder
    is_public?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
  }

  export type booksMinOrderByAggregateInput = {
    title?: SortOrder
    description?: SortOrder
    cover_image_url?: SortOrder
    is_public?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    id?: SortOrder
    user_id?: SortOrder
  }

  export type spatial_ref_sysCountOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysAvgOrderByAggregateInput = {
    srid?: SortOrder
    auth_srid?: SortOrder
  }

  export type spatial_ref_sysMaxOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysMinOrderByAggregateInput = {
    srid?: SortOrder
    auth_name?: SortOrder
    auth_srid?: SortOrder
    srtext?: SortOrder
    proj4text?: SortOrder
  }

  export type spatial_ref_sysSumOrderByAggregateInput = {
    srid?: SortOrder
    auth_srid?: SortOrder
  }

  export type articlesCreateNestedOneWithoutArticle_entitiesInput = {
    create?: XOR<articlesCreateWithoutArticle_entitiesInput, articlesUncheckedCreateWithoutArticle_entitiesInput>
    connectOrCreate?: articlesCreateOrConnectWithoutArticle_entitiesInput
    connect?: articlesWhereUniqueInput
  }

  export type entitiesCreateNestedOneWithoutArticle_entitiesInput = {
    create?: XOR<entitiesCreateWithoutArticle_entitiesInput, entitiesUncheckedCreateWithoutArticle_entitiesInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutArticle_entitiesInput
    connect?: entitiesWhereUniqueInput
  }

  export type articlesUpdateOneRequiredWithoutArticle_entitiesNestedInput = {
    create?: XOR<articlesCreateWithoutArticle_entitiesInput, articlesUncheckedCreateWithoutArticle_entitiesInput>
    connectOrCreate?: articlesCreateOrConnectWithoutArticle_entitiesInput
    upsert?: articlesUpsertWithoutArticle_entitiesInput
    connect?: articlesWhereUniqueInput
    update?: XOR<XOR<articlesUpdateToOneWithWhereWithoutArticle_entitiesInput, articlesUpdateWithoutArticle_entitiesInput>, articlesUncheckedUpdateWithoutArticle_entitiesInput>
  }

  export type entitiesUpdateOneRequiredWithoutArticle_entitiesNestedInput = {
    create?: XOR<entitiesCreateWithoutArticle_entitiesInput, entitiesUncheckedCreateWithoutArticle_entitiesInput>
    connectOrCreate?: entitiesCreateOrConnectWithoutArticle_entitiesInput
    upsert?: entitiesUpsertWithoutArticle_entitiesInput
    connect?: entitiesWhereUniqueInput
    update?: XOR<XOR<entitiesUpdateToOneWithWhereWithoutArticle_entitiesInput, entitiesUpdateWithoutArticle_entitiesInput>, entitiesUncheckedUpdateWithoutArticle_entitiesInput>
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type BigIntFieldUpdateOperationsInput = {
    set?: bigint | number
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type article_entitiesCreateNestedManyWithoutArticlesInput = {
    create?: XOR<article_entitiesCreateWithoutArticlesInput, article_entitiesUncheckedCreateWithoutArticlesInput> | article_entitiesCreateWithoutArticlesInput[] | article_entitiesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutArticlesInput | article_entitiesCreateOrConnectWithoutArticlesInput[]
    createMany?: article_entitiesCreateManyArticlesInputEnvelope
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
  }

  export type article_tagsCreateNestedManyWithoutArticlesInput = {
    create?: XOR<article_tagsCreateWithoutArticlesInput, article_tagsUncheckedCreateWithoutArticlesInput> | article_tagsCreateWithoutArticlesInput[] | article_tagsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutArticlesInput | article_tagsCreateOrConnectWithoutArticlesInput[]
    createMany?: article_tagsCreateManyArticlesInputEnvelope
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
  }

  export type bookmarksCreateNestedManyWithoutArticlesInput = {
    create?: XOR<bookmarksCreateWithoutArticlesInput, bookmarksUncheckedCreateWithoutArticlesInput> | bookmarksCreateWithoutArticlesInput[] | bookmarksUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutArticlesInput | bookmarksCreateOrConnectWithoutArticlesInput[]
    createMany?: bookmarksCreateManyArticlesInputEnvelope
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
  }

  export type geo_eventsCreateNestedManyWithoutArticlesInput = {
    create?: XOR<geo_eventsCreateWithoutArticlesInput, geo_eventsUncheckedCreateWithoutArticlesInput> | geo_eventsCreateWithoutArticlesInput[] | geo_eventsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: geo_eventsCreateOrConnectWithoutArticlesInput | geo_eventsCreateOrConnectWithoutArticlesInput[]
    createMany?: geo_eventsCreateManyArticlesInputEnvelope
    connect?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
  }

  export type likesCreateNestedManyWithoutArticlesInput = {
    create?: XOR<likesCreateWithoutArticlesInput, likesUncheckedCreateWithoutArticlesInput> | likesCreateWithoutArticlesInput[] | likesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: likesCreateOrConnectWithoutArticlesInput | likesCreateOrConnectWithoutArticlesInput[]
    createMany?: likesCreateManyArticlesInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type viewsCreateNestedManyWithoutArticlesInput = {
    create?: XOR<viewsCreateWithoutArticlesInput, viewsUncheckedCreateWithoutArticlesInput> | viewsCreateWithoutArticlesInput[] | viewsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutArticlesInput | viewsCreateOrConnectWithoutArticlesInput[]
    createMany?: viewsCreateManyArticlesInputEnvelope
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
  }

  export type article_entitiesUncheckedCreateNestedManyWithoutArticlesInput = {
    create?: XOR<article_entitiesCreateWithoutArticlesInput, article_entitiesUncheckedCreateWithoutArticlesInput> | article_entitiesCreateWithoutArticlesInput[] | article_entitiesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutArticlesInput | article_entitiesCreateOrConnectWithoutArticlesInput[]
    createMany?: article_entitiesCreateManyArticlesInputEnvelope
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
  }

  export type article_tagsUncheckedCreateNestedManyWithoutArticlesInput = {
    create?: XOR<article_tagsCreateWithoutArticlesInput, article_tagsUncheckedCreateWithoutArticlesInput> | article_tagsCreateWithoutArticlesInput[] | article_tagsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutArticlesInput | article_tagsCreateOrConnectWithoutArticlesInput[]
    createMany?: article_tagsCreateManyArticlesInputEnvelope
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
  }

  export type bookmarksUncheckedCreateNestedManyWithoutArticlesInput = {
    create?: XOR<bookmarksCreateWithoutArticlesInput, bookmarksUncheckedCreateWithoutArticlesInput> | bookmarksCreateWithoutArticlesInput[] | bookmarksUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutArticlesInput | bookmarksCreateOrConnectWithoutArticlesInput[]
    createMany?: bookmarksCreateManyArticlesInputEnvelope
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
  }

  export type geo_eventsUncheckedCreateNestedManyWithoutArticlesInput = {
    create?: XOR<geo_eventsCreateWithoutArticlesInput, geo_eventsUncheckedCreateWithoutArticlesInput> | geo_eventsCreateWithoutArticlesInput[] | geo_eventsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: geo_eventsCreateOrConnectWithoutArticlesInput | geo_eventsCreateOrConnectWithoutArticlesInput[]
    createMany?: geo_eventsCreateManyArticlesInputEnvelope
    connect?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
  }

  export type likesUncheckedCreateNestedManyWithoutArticlesInput = {
    create?: XOR<likesCreateWithoutArticlesInput, likesUncheckedCreateWithoutArticlesInput> | likesCreateWithoutArticlesInput[] | likesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: likesCreateOrConnectWithoutArticlesInput | likesCreateOrConnectWithoutArticlesInput[]
    createMany?: likesCreateManyArticlesInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type viewsUncheckedCreateNestedManyWithoutArticlesInput = {
    create?: XOR<viewsCreateWithoutArticlesInput, viewsUncheckedCreateWithoutArticlesInput> | viewsCreateWithoutArticlesInput[] | viewsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutArticlesInput | viewsCreateOrConnectWithoutArticlesInput[]
    createMany?: viewsCreateManyArticlesInputEnvelope
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type NullableFloatFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableEnumsentiment_typeFieldUpdateOperationsInput = {
    set?: $Enums.sentiment_type | null
  }

  export type article_entitiesUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<article_entitiesCreateWithoutArticlesInput, article_entitiesUncheckedCreateWithoutArticlesInput> | article_entitiesCreateWithoutArticlesInput[] | article_entitiesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutArticlesInput | article_entitiesCreateOrConnectWithoutArticlesInput[]
    upsert?: article_entitiesUpsertWithWhereUniqueWithoutArticlesInput | article_entitiesUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: article_entitiesCreateManyArticlesInputEnvelope
    set?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    disconnect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    delete?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    update?: article_entitiesUpdateWithWhereUniqueWithoutArticlesInput | article_entitiesUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: article_entitiesUpdateManyWithWhereWithoutArticlesInput | article_entitiesUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: article_entitiesScalarWhereInput | article_entitiesScalarWhereInput[]
  }

  export type article_tagsUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<article_tagsCreateWithoutArticlesInput, article_tagsUncheckedCreateWithoutArticlesInput> | article_tagsCreateWithoutArticlesInput[] | article_tagsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutArticlesInput | article_tagsCreateOrConnectWithoutArticlesInput[]
    upsert?: article_tagsUpsertWithWhereUniqueWithoutArticlesInput | article_tagsUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: article_tagsCreateManyArticlesInputEnvelope
    set?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    disconnect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    delete?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    update?: article_tagsUpdateWithWhereUniqueWithoutArticlesInput | article_tagsUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: article_tagsUpdateManyWithWhereWithoutArticlesInput | article_tagsUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: article_tagsScalarWhereInput | article_tagsScalarWhereInput[]
  }

  export type bookmarksUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<bookmarksCreateWithoutArticlesInput, bookmarksUncheckedCreateWithoutArticlesInput> | bookmarksCreateWithoutArticlesInput[] | bookmarksUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutArticlesInput | bookmarksCreateOrConnectWithoutArticlesInput[]
    upsert?: bookmarksUpsertWithWhereUniqueWithoutArticlesInput | bookmarksUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: bookmarksCreateManyArticlesInputEnvelope
    set?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    disconnect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    delete?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    update?: bookmarksUpdateWithWhereUniqueWithoutArticlesInput | bookmarksUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: bookmarksUpdateManyWithWhereWithoutArticlesInput | bookmarksUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
  }

  export type geo_eventsUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<geo_eventsCreateWithoutArticlesInput, geo_eventsUncheckedCreateWithoutArticlesInput> | geo_eventsCreateWithoutArticlesInput[] | geo_eventsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: geo_eventsCreateOrConnectWithoutArticlesInput | geo_eventsCreateOrConnectWithoutArticlesInput[]
    upsert?: geo_eventsUpsertWithWhereUniqueWithoutArticlesInput | geo_eventsUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: geo_eventsCreateManyArticlesInputEnvelope
    set?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    disconnect?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    delete?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    connect?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    update?: geo_eventsUpdateWithWhereUniqueWithoutArticlesInput | geo_eventsUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: geo_eventsUpdateManyWithWhereWithoutArticlesInput | geo_eventsUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: geo_eventsScalarWhereInput | geo_eventsScalarWhereInput[]
  }

  export type likesUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<likesCreateWithoutArticlesInput, likesUncheckedCreateWithoutArticlesInput> | likesCreateWithoutArticlesInput[] | likesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: likesCreateOrConnectWithoutArticlesInput | likesCreateOrConnectWithoutArticlesInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutArticlesInput | likesUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: likesCreateManyArticlesInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutArticlesInput | likesUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: likesUpdateManyWithWhereWithoutArticlesInput | likesUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type viewsUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<viewsCreateWithoutArticlesInput, viewsUncheckedCreateWithoutArticlesInput> | viewsCreateWithoutArticlesInput[] | viewsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutArticlesInput | viewsCreateOrConnectWithoutArticlesInput[]
    upsert?: viewsUpsertWithWhereUniqueWithoutArticlesInput | viewsUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: viewsCreateManyArticlesInputEnvelope
    set?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    disconnect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    delete?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    update?: viewsUpdateWithWhereUniqueWithoutArticlesInput | viewsUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: viewsUpdateManyWithWhereWithoutArticlesInput | viewsUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: viewsScalarWhereInput | viewsScalarWhereInput[]
  }

  export type article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<article_entitiesCreateWithoutArticlesInput, article_entitiesUncheckedCreateWithoutArticlesInput> | article_entitiesCreateWithoutArticlesInput[] | article_entitiesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutArticlesInput | article_entitiesCreateOrConnectWithoutArticlesInput[]
    upsert?: article_entitiesUpsertWithWhereUniqueWithoutArticlesInput | article_entitiesUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: article_entitiesCreateManyArticlesInputEnvelope
    set?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    disconnect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    delete?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    update?: article_entitiesUpdateWithWhereUniqueWithoutArticlesInput | article_entitiesUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: article_entitiesUpdateManyWithWhereWithoutArticlesInput | article_entitiesUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: article_entitiesScalarWhereInput | article_entitiesScalarWhereInput[]
  }

  export type article_tagsUncheckedUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<article_tagsCreateWithoutArticlesInput, article_tagsUncheckedCreateWithoutArticlesInput> | article_tagsCreateWithoutArticlesInput[] | article_tagsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutArticlesInput | article_tagsCreateOrConnectWithoutArticlesInput[]
    upsert?: article_tagsUpsertWithWhereUniqueWithoutArticlesInput | article_tagsUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: article_tagsCreateManyArticlesInputEnvelope
    set?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    disconnect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    delete?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    update?: article_tagsUpdateWithWhereUniqueWithoutArticlesInput | article_tagsUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: article_tagsUpdateManyWithWhereWithoutArticlesInput | article_tagsUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: article_tagsScalarWhereInput | article_tagsScalarWhereInput[]
  }

  export type bookmarksUncheckedUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<bookmarksCreateWithoutArticlesInput, bookmarksUncheckedCreateWithoutArticlesInput> | bookmarksCreateWithoutArticlesInput[] | bookmarksUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutArticlesInput | bookmarksCreateOrConnectWithoutArticlesInput[]
    upsert?: bookmarksUpsertWithWhereUniqueWithoutArticlesInput | bookmarksUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: bookmarksCreateManyArticlesInputEnvelope
    set?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    disconnect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    delete?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    update?: bookmarksUpdateWithWhereUniqueWithoutArticlesInput | bookmarksUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: bookmarksUpdateManyWithWhereWithoutArticlesInput | bookmarksUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
  }

  export type geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<geo_eventsCreateWithoutArticlesInput, geo_eventsUncheckedCreateWithoutArticlesInput> | geo_eventsCreateWithoutArticlesInput[] | geo_eventsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: geo_eventsCreateOrConnectWithoutArticlesInput | geo_eventsCreateOrConnectWithoutArticlesInput[]
    upsert?: geo_eventsUpsertWithWhereUniqueWithoutArticlesInput | geo_eventsUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: geo_eventsCreateManyArticlesInputEnvelope
    set?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    disconnect?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    delete?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    connect?: geo_eventsWhereUniqueInput | geo_eventsWhereUniqueInput[]
    update?: geo_eventsUpdateWithWhereUniqueWithoutArticlesInput | geo_eventsUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: geo_eventsUpdateManyWithWhereWithoutArticlesInput | geo_eventsUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: geo_eventsScalarWhereInput | geo_eventsScalarWhereInput[]
  }

  export type likesUncheckedUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<likesCreateWithoutArticlesInput, likesUncheckedCreateWithoutArticlesInput> | likesCreateWithoutArticlesInput[] | likesUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: likesCreateOrConnectWithoutArticlesInput | likesCreateOrConnectWithoutArticlesInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutArticlesInput | likesUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: likesCreateManyArticlesInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutArticlesInput | likesUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: likesUpdateManyWithWhereWithoutArticlesInput | likesUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type viewsUncheckedUpdateManyWithoutArticlesNestedInput = {
    create?: XOR<viewsCreateWithoutArticlesInput, viewsUncheckedCreateWithoutArticlesInput> | viewsCreateWithoutArticlesInput[] | viewsUncheckedCreateWithoutArticlesInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutArticlesInput | viewsCreateOrConnectWithoutArticlesInput[]
    upsert?: viewsUpsertWithWhereUniqueWithoutArticlesInput | viewsUpsertWithWhereUniqueWithoutArticlesInput[]
    createMany?: viewsCreateManyArticlesInputEnvelope
    set?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    disconnect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    delete?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    update?: viewsUpdateWithWhereUniqueWithoutArticlesInput | viewsUpdateWithWhereUniqueWithoutArticlesInput[]
    updateMany?: viewsUpdateManyWithWhereWithoutArticlesInput | viewsUpdateManyWithWhereWithoutArticlesInput[]
    deleteMany?: viewsScalarWhereInput | viewsScalarWhereInput[]
  }

  export type article_entitiesCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<article_entitiesCreateWithoutEntitiesInput, article_entitiesUncheckedCreateWithoutEntitiesInput> | article_entitiesCreateWithoutEntitiesInput[] | article_entitiesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutEntitiesInput | article_entitiesCreateOrConnectWithoutEntitiesInput[]
    createMany?: article_entitiesCreateManyEntitiesInputEnvelope
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
  }

  export type article_entitiesUncheckedCreateNestedManyWithoutEntitiesInput = {
    create?: XOR<article_entitiesCreateWithoutEntitiesInput, article_entitiesUncheckedCreateWithoutEntitiesInput> | article_entitiesCreateWithoutEntitiesInput[] | article_entitiesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutEntitiesInput | article_entitiesCreateOrConnectWithoutEntitiesInput[]
    createMany?: article_entitiesCreateManyEntitiesInputEnvelope
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
  }

  export type article_entitiesUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<article_entitiesCreateWithoutEntitiesInput, article_entitiesUncheckedCreateWithoutEntitiesInput> | article_entitiesCreateWithoutEntitiesInput[] | article_entitiesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutEntitiesInput | article_entitiesCreateOrConnectWithoutEntitiesInput[]
    upsert?: article_entitiesUpsertWithWhereUniqueWithoutEntitiesInput | article_entitiesUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: article_entitiesCreateManyEntitiesInputEnvelope
    set?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    disconnect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    delete?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    update?: article_entitiesUpdateWithWhereUniqueWithoutEntitiesInput | article_entitiesUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: article_entitiesUpdateManyWithWhereWithoutEntitiesInput | article_entitiesUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: article_entitiesScalarWhereInput | article_entitiesScalarWhereInput[]
  }

  export type article_entitiesUncheckedUpdateManyWithoutEntitiesNestedInput = {
    create?: XOR<article_entitiesCreateWithoutEntitiesInput, article_entitiesUncheckedCreateWithoutEntitiesInput> | article_entitiesCreateWithoutEntitiesInput[] | article_entitiesUncheckedCreateWithoutEntitiesInput[]
    connectOrCreate?: article_entitiesCreateOrConnectWithoutEntitiesInput | article_entitiesCreateOrConnectWithoutEntitiesInput[]
    upsert?: article_entitiesUpsertWithWhereUniqueWithoutEntitiesInput | article_entitiesUpsertWithWhereUniqueWithoutEntitiesInput[]
    createMany?: article_entitiesCreateManyEntitiesInputEnvelope
    set?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    disconnect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    delete?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    connect?: article_entitiesWhereUniqueInput | article_entitiesWhereUniqueInput[]
    update?: article_entitiesUpdateWithWhereUniqueWithoutEntitiesInput | article_entitiesUpdateWithWhereUniqueWithoutEntitiesInput[]
    updateMany?: article_entitiesUpdateManyWithWhereWithoutEntitiesInput | article_entitiesUpdateManyWithWhereWithoutEntitiesInput[]
    deleteMany?: article_entitiesScalarWhereInput | article_entitiesScalarWhereInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type bookmark_foldersCreateNestedManyWithoutUsersInput = {
    create?: XOR<bookmark_foldersCreateWithoutUsersInput, bookmark_foldersUncheckedCreateWithoutUsersInput> | bookmark_foldersCreateWithoutUsersInput[] | bookmark_foldersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmark_foldersCreateOrConnectWithoutUsersInput | bookmark_foldersCreateOrConnectWithoutUsersInput[]
    createMany?: bookmark_foldersCreateManyUsersInputEnvelope
    connect?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
  }

  export type bookmarksCreateNestedManyWithoutUsersInput = {
    create?: XOR<bookmarksCreateWithoutUsersInput, bookmarksUncheckedCreateWithoutUsersInput> | bookmarksCreateWithoutUsersInput[] | bookmarksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutUsersInput | bookmarksCreateOrConnectWithoutUsersInput[]
    createMany?: bookmarksCreateManyUsersInputEnvelope
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
  }

  export type likesCreateNestedManyWithoutUsersInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type public_sessionsCreateNestedOneWithoutUsersInput = {
    create?: XOR<public_sessionsCreateWithoutUsersInput, public_sessionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_sessionsCreateOrConnectWithoutUsersInput
    connect?: public_sessionsWhereUniqueInput
  }

  export type usersCreateNestedOneWithoutUsersInput = {
    create?: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUsersInput
    connect?: usersWhereUniqueInput
  }

  export type viewsCreateNestedManyWithoutUsersInput = {
    create?: XOR<viewsCreateWithoutUsersInput, viewsUncheckedCreateWithoutUsersInput> | viewsCreateWithoutUsersInput[] | viewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutUsersInput | viewsCreateOrConnectWithoutUsersInput[]
    createMany?: viewsCreateManyUsersInputEnvelope
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
  }

  export type bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<bookmark_foldersCreateWithoutUsersInput, bookmark_foldersUncheckedCreateWithoutUsersInput> | bookmark_foldersCreateWithoutUsersInput[] | bookmark_foldersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmark_foldersCreateOrConnectWithoutUsersInput | bookmark_foldersCreateOrConnectWithoutUsersInput[]
    createMany?: bookmark_foldersCreateManyUsersInputEnvelope
    connect?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
  }

  export type bookmarksUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<bookmarksCreateWithoutUsersInput, bookmarksUncheckedCreateWithoutUsersInput> | bookmarksCreateWithoutUsersInput[] | bookmarksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutUsersInput | bookmarksCreateOrConnectWithoutUsersInput[]
    createMany?: bookmarksCreateManyUsersInputEnvelope
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
  }

  export type likesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
  }

  export type public_sessionsUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<public_sessionsCreateWithoutUsersInput, public_sessionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_sessionsCreateOrConnectWithoutUsersInput
    connect?: public_sessionsWhereUniqueInput
  }

  export type viewsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<viewsCreateWithoutUsersInput, viewsUncheckedCreateWithoutUsersInput> | viewsCreateWithoutUsersInput[] | viewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutUsersInput | viewsCreateOrConnectWithoutUsersInput[]
    createMany?: viewsCreateManyUsersInputEnvelope
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
  }

  export type bookmark_foldersUpdateManyWithoutUsersNestedInput = {
    create?: XOR<bookmark_foldersCreateWithoutUsersInput, bookmark_foldersUncheckedCreateWithoutUsersInput> | bookmark_foldersCreateWithoutUsersInput[] | bookmark_foldersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmark_foldersCreateOrConnectWithoutUsersInput | bookmark_foldersCreateOrConnectWithoutUsersInput[]
    upsert?: bookmark_foldersUpsertWithWhereUniqueWithoutUsersInput | bookmark_foldersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: bookmark_foldersCreateManyUsersInputEnvelope
    set?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    disconnect?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    delete?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    connect?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    update?: bookmark_foldersUpdateWithWhereUniqueWithoutUsersInput | bookmark_foldersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: bookmark_foldersUpdateManyWithWhereWithoutUsersInput | bookmark_foldersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: bookmark_foldersScalarWhereInput | bookmark_foldersScalarWhereInput[]
  }

  export type bookmarksUpdateManyWithoutUsersNestedInput = {
    create?: XOR<bookmarksCreateWithoutUsersInput, bookmarksUncheckedCreateWithoutUsersInput> | bookmarksCreateWithoutUsersInput[] | bookmarksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutUsersInput | bookmarksCreateOrConnectWithoutUsersInput[]
    upsert?: bookmarksUpsertWithWhereUniqueWithoutUsersInput | bookmarksUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: bookmarksCreateManyUsersInputEnvelope
    set?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    disconnect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    delete?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    update?: bookmarksUpdateWithWhereUniqueWithoutUsersInput | bookmarksUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: bookmarksUpdateManyWithWhereWithoutUsersInput | bookmarksUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
  }

  export type likesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutUsersInput | likesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutUsersInput | likesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: likesUpdateManyWithWhereWithoutUsersInput | likesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type public_sessionsUpdateOneWithoutUsersNestedInput = {
    create?: XOR<public_sessionsCreateWithoutUsersInput, public_sessionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_sessionsCreateOrConnectWithoutUsersInput
    upsert?: public_sessionsUpsertWithoutUsersInput
    disconnect?: public_sessionsWhereInput | boolean
    delete?: public_sessionsWhereInput | boolean
    connect?: public_sessionsWhereUniqueInput
    update?: XOR<XOR<public_sessionsUpdateToOneWithWhereWithoutUsersInput, public_sessionsUpdateWithoutUsersInput>, public_sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type usersUpdateOneRequiredWithoutUsersNestedInput = {
    create?: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput>
    connectOrCreate?: usersCreateOrConnectWithoutUsersInput
    upsert?: usersUpsertWithoutUsersInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutUsersInput, usersUpdateWithoutUsersInput>, usersUncheckedUpdateWithoutUsersInput>
  }

  export type viewsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<viewsCreateWithoutUsersInput, viewsUncheckedCreateWithoutUsersInput> | viewsCreateWithoutUsersInput[] | viewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutUsersInput | viewsCreateOrConnectWithoutUsersInput[]
    upsert?: viewsUpsertWithWhereUniqueWithoutUsersInput | viewsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: viewsCreateManyUsersInputEnvelope
    set?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    disconnect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    delete?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    update?: viewsUpdateWithWhereUniqueWithoutUsersInput | viewsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: viewsUpdateManyWithWhereWithoutUsersInput | viewsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: viewsScalarWhereInput | viewsScalarWhereInput[]
  }

  export type bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<bookmark_foldersCreateWithoutUsersInput, bookmark_foldersUncheckedCreateWithoutUsersInput> | bookmark_foldersCreateWithoutUsersInput[] | bookmark_foldersUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmark_foldersCreateOrConnectWithoutUsersInput | bookmark_foldersCreateOrConnectWithoutUsersInput[]
    upsert?: bookmark_foldersUpsertWithWhereUniqueWithoutUsersInput | bookmark_foldersUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: bookmark_foldersCreateManyUsersInputEnvelope
    set?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    disconnect?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    delete?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    connect?: bookmark_foldersWhereUniqueInput | bookmark_foldersWhereUniqueInput[]
    update?: bookmark_foldersUpdateWithWhereUniqueWithoutUsersInput | bookmark_foldersUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: bookmark_foldersUpdateManyWithWhereWithoutUsersInput | bookmark_foldersUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: bookmark_foldersScalarWhereInput | bookmark_foldersScalarWhereInput[]
  }

  export type bookmarksUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<bookmarksCreateWithoutUsersInput, bookmarksUncheckedCreateWithoutUsersInput> | bookmarksCreateWithoutUsersInput[] | bookmarksUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutUsersInput | bookmarksCreateOrConnectWithoutUsersInput[]
    upsert?: bookmarksUpsertWithWhereUniqueWithoutUsersInput | bookmarksUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: bookmarksCreateManyUsersInputEnvelope
    set?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    disconnect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    delete?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    update?: bookmarksUpdateWithWhereUniqueWithoutUsersInput | bookmarksUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: bookmarksUpdateManyWithWhereWithoutUsersInput | bookmarksUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
  }

  export type likesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput> | likesCreateWithoutUsersInput[] | likesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: likesCreateOrConnectWithoutUsersInput | likesCreateOrConnectWithoutUsersInput[]
    upsert?: likesUpsertWithWhereUniqueWithoutUsersInput | likesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: likesCreateManyUsersInputEnvelope
    set?: likesWhereUniqueInput | likesWhereUniqueInput[]
    disconnect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    delete?: likesWhereUniqueInput | likesWhereUniqueInput[]
    connect?: likesWhereUniqueInput | likesWhereUniqueInput[]
    update?: likesUpdateWithWhereUniqueWithoutUsersInput | likesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: likesUpdateManyWithWhereWithoutUsersInput | likesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: likesScalarWhereInput | likesScalarWhereInput[]
  }

  export type public_sessionsUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<public_sessionsCreateWithoutUsersInput, public_sessionsUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_sessionsCreateOrConnectWithoutUsersInput
    upsert?: public_sessionsUpsertWithoutUsersInput
    disconnect?: public_sessionsWhereInput | boolean
    delete?: public_sessionsWhereInput | boolean
    connect?: public_sessionsWhereUniqueInput
    update?: XOR<XOR<public_sessionsUpdateToOneWithWhereWithoutUsersInput, public_sessionsUpdateWithoutUsersInput>, public_sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type viewsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<viewsCreateWithoutUsersInput, viewsUncheckedCreateWithoutUsersInput> | viewsCreateWithoutUsersInput[] | viewsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: viewsCreateOrConnectWithoutUsersInput | viewsCreateOrConnectWithoutUsersInput[]
    upsert?: viewsUpsertWithWhereUniqueWithoutUsersInput | viewsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: viewsCreateManyUsersInputEnvelope
    set?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    disconnect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    delete?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    connect?: viewsWhereUniqueInput | viewsWhereUniqueInput[]
    update?: viewsUpdateWithWhereUniqueWithoutUsersInput | viewsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: viewsUpdateManyWithWhereWithoutUsersInput | viewsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: viewsScalarWhereInput | viewsScalarWhereInput[]
  }

  export type articlesCreateNestedOneWithoutArticle_tagsInput = {
    create?: XOR<articlesCreateWithoutArticle_tagsInput, articlesUncheckedCreateWithoutArticle_tagsInput>
    connectOrCreate?: articlesCreateOrConnectWithoutArticle_tagsInput
    connect?: articlesWhereUniqueInput
  }

  export type tagsCreateNestedOneWithoutArticle_tagsInput = {
    create?: XOR<tagsCreateWithoutArticle_tagsInput, tagsUncheckedCreateWithoutArticle_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutArticle_tagsInput
    connect?: tagsWhereUniqueInput
  }

  export type articlesUpdateOneRequiredWithoutArticle_tagsNestedInput = {
    create?: XOR<articlesCreateWithoutArticle_tagsInput, articlesUncheckedCreateWithoutArticle_tagsInput>
    connectOrCreate?: articlesCreateOrConnectWithoutArticle_tagsInput
    upsert?: articlesUpsertWithoutArticle_tagsInput
    connect?: articlesWhereUniqueInput
    update?: XOR<XOR<articlesUpdateToOneWithWhereWithoutArticle_tagsInput, articlesUpdateWithoutArticle_tagsInput>, articlesUncheckedUpdateWithoutArticle_tagsInput>
  }

  export type tagsUpdateOneRequiredWithoutArticle_tagsNestedInput = {
    create?: XOR<tagsCreateWithoutArticle_tagsInput, tagsUncheckedCreateWithoutArticle_tagsInput>
    connectOrCreate?: tagsCreateOrConnectWithoutArticle_tagsInput
    upsert?: tagsUpsertWithoutArticle_tagsInput
    connect?: tagsWhereUniqueInput
    update?: XOR<XOR<tagsUpdateToOneWithWhereWithoutArticle_tagsInput, tagsUpdateWithoutArticle_tagsInput>, tagsUncheckedUpdateWithoutArticle_tagsInput>
  }

  export type public_usersCreateNestedOneWithoutBookmark_foldersInput = {
    create?: XOR<public_usersCreateWithoutBookmark_foldersInput, public_usersUncheckedCreateWithoutBookmark_foldersInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutBookmark_foldersInput
    connect?: public_usersWhereUniqueInput
  }

  export type bookmarksCreateNestedManyWithoutBookmark_foldersInput = {
    create?: XOR<bookmarksCreateWithoutBookmark_foldersInput, bookmarksUncheckedCreateWithoutBookmark_foldersInput> | bookmarksCreateWithoutBookmark_foldersInput[] | bookmarksUncheckedCreateWithoutBookmark_foldersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutBookmark_foldersInput | bookmarksCreateOrConnectWithoutBookmark_foldersInput[]
    createMany?: bookmarksCreateManyBookmark_foldersInputEnvelope
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
  }

  export type bookmarksUncheckedCreateNestedManyWithoutBookmark_foldersInput = {
    create?: XOR<bookmarksCreateWithoutBookmark_foldersInput, bookmarksUncheckedCreateWithoutBookmark_foldersInput> | bookmarksCreateWithoutBookmark_foldersInput[] | bookmarksUncheckedCreateWithoutBookmark_foldersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutBookmark_foldersInput | bookmarksCreateOrConnectWithoutBookmark_foldersInput[]
    createMany?: bookmarksCreateManyBookmark_foldersInputEnvelope
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
  }

  export type public_usersUpdateOneWithoutBookmark_foldersNestedInput = {
    create?: XOR<public_usersCreateWithoutBookmark_foldersInput, public_usersUncheckedCreateWithoutBookmark_foldersInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutBookmark_foldersInput
    upsert?: public_usersUpsertWithoutBookmark_foldersInput
    disconnect?: public_usersWhereInput | boolean
    delete?: public_usersWhereInput | boolean
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutBookmark_foldersInput, public_usersUpdateWithoutBookmark_foldersInput>, public_usersUncheckedUpdateWithoutBookmark_foldersInput>
  }

  export type bookmarksUpdateManyWithoutBookmark_foldersNestedInput = {
    create?: XOR<bookmarksCreateWithoutBookmark_foldersInput, bookmarksUncheckedCreateWithoutBookmark_foldersInput> | bookmarksCreateWithoutBookmark_foldersInput[] | bookmarksUncheckedCreateWithoutBookmark_foldersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutBookmark_foldersInput | bookmarksCreateOrConnectWithoutBookmark_foldersInput[]
    upsert?: bookmarksUpsertWithWhereUniqueWithoutBookmark_foldersInput | bookmarksUpsertWithWhereUniqueWithoutBookmark_foldersInput[]
    createMany?: bookmarksCreateManyBookmark_foldersInputEnvelope
    set?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    disconnect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    delete?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    update?: bookmarksUpdateWithWhereUniqueWithoutBookmark_foldersInput | bookmarksUpdateWithWhereUniqueWithoutBookmark_foldersInput[]
    updateMany?: bookmarksUpdateManyWithWhereWithoutBookmark_foldersInput | bookmarksUpdateManyWithWhereWithoutBookmark_foldersInput[]
    deleteMany?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
  }

  export type bookmarksUncheckedUpdateManyWithoutBookmark_foldersNestedInput = {
    create?: XOR<bookmarksCreateWithoutBookmark_foldersInput, bookmarksUncheckedCreateWithoutBookmark_foldersInput> | bookmarksCreateWithoutBookmark_foldersInput[] | bookmarksUncheckedCreateWithoutBookmark_foldersInput[]
    connectOrCreate?: bookmarksCreateOrConnectWithoutBookmark_foldersInput | bookmarksCreateOrConnectWithoutBookmark_foldersInput[]
    upsert?: bookmarksUpsertWithWhereUniqueWithoutBookmark_foldersInput | bookmarksUpsertWithWhereUniqueWithoutBookmark_foldersInput[]
    createMany?: bookmarksCreateManyBookmark_foldersInputEnvelope
    set?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    disconnect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    delete?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    connect?: bookmarksWhereUniqueInput | bookmarksWhereUniqueInput[]
    update?: bookmarksUpdateWithWhereUniqueWithoutBookmark_foldersInput | bookmarksUpdateWithWhereUniqueWithoutBookmark_foldersInput[]
    updateMany?: bookmarksUpdateManyWithWhereWithoutBookmark_foldersInput | bookmarksUpdateManyWithWhereWithoutBookmark_foldersInput[]
    deleteMany?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
  }

  export type articlesCreateNestedOneWithoutBookmarksInput = {
    create?: XOR<articlesCreateWithoutBookmarksInput, articlesUncheckedCreateWithoutBookmarksInput>
    connectOrCreate?: articlesCreateOrConnectWithoutBookmarksInput
    connect?: articlesWhereUniqueInput
  }

  export type bookmark_foldersCreateNestedOneWithoutBookmarksInput = {
    create?: XOR<bookmark_foldersCreateWithoutBookmarksInput, bookmark_foldersUncheckedCreateWithoutBookmarksInput>
    connectOrCreate?: bookmark_foldersCreateOrConnectWithoutBookmarksInput
    connect?: bookmark_foldersWhereUniqueInput
  }

  export type public_usersCreateNestedOneWithoutBookmarksInput = {
    create?: XOR<public_usersCreateWithoutBookmarksInput, public_usersUncheckedCreateWithoutBookmarksInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutBookmarksInput
    connect?: public_usersWhereUniqueInput
  }

  export type articlesUpdateOneWithoutBookmarksNestedInput = {
    create?: XOR<articlesCreateWithoutBookmarksInput, articlesUncheckedCreateWithoutBookmarksInput>
    connectOrCreate?: articlesCreateOrConnectWithoutBookmarksInput
    upsert?: articlesUpsertWithoutBookmarksInput
    disconnect?: articlesWhereInput | boolean
    delete?: articlesWhereInput | boolean
    connect?: articlesWhereUniqueInput
    update?: XOR<XOR<articlesUpdateToOneWithWhereWithoutBookmarksInput, articlesUpdateWithoutBookmarksInput>, articlesUncheckedUpdateWithoutBookmarksInput>
  }

  export type bookmark_foldersUpdateOneWithoutBookmarksNestedInput = {
    create?: XOR<bookmark_foldersCreateWithoutBookmarksInput, bookmark_foldersUncheckedCreateWithoutBookmarksInput>
    connectOrCreate?: bookmark_foldersCreateOrConnectWithoutBookmarksInput
    upsert?: bookmark_foldersUpsertWithoutBookmarksInput
    disconnect?: bookmark_foldersWhereInput | boolean
    delete?: bookmark_foldersWhereInput | boolean
    connect?: bookmark_foldersWhereUniqueInput
    update?: XOR<XOR<bookmark_foldersUpdateToOneWithWhereWithoutBookmarksInput, bookmark_foldersUpdateWithoutBookmarksInput>, bookmark_foldersUncheckedUpdateWithoutBookmarksInput>
  }

  export type public_usersUpdateOneWithoutBookmarksNestedInput = {
    create?: XOR<public_usersCreateWithoutBookmarksInput, public_usersUncheckedCreateWithoutBookmarksInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutBookmarksInput
    upsert?: public_usersUpsertWithoutBookmarksInput
    disconnect?: public_usersWhereInput | boolean
    delete?: public_usersWhereInput | boolean
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutBookmarksInput, public_usersUpdateWithoutBookmarksInput>, public_usersUncheckedUpdateWithoutBookmarksInput>
  }

  export type NullableBigIntFieldUpdateOperationsInput = {
    set?: bigint | number | null
    increment?: bigint | number
    decrement?: bigint | number
    multiply?: bigint | number
    divide?: bigint | number
  }

  export type articlesCreateNestedOneWithoutGeo_eventsInput = {
    create?: XOR<articlesCreateWithoutGeo_eventsInput, articlesUncheckedCreateWithoutGeo_eventsInput>
    connectOrCreate?: articlesCreateOrConnectWithoutGeo_eventsInput
    connect?: articlesWhereUniqueInput
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type articlesUpdateOneWithoutGeo_eventsNestedInput = {
    create?: XOR<articlesCreateWithoutGeo_eventsInput, articlesUncheckedCreateWithoutGeo_eventsInput>
    connectOrCreate?: articlesCreateOrConnectWithoutGeo_eventsInput
    upsert?: articlesUpsertWithoutGeo_eventsInput
    disconnect?: articlesWhereInput | boolean
    delete?: articlesWhereInput | boolean
    connect?: articlesWhereUniqueInput
    update?: XOR<XOR<articlesUpdateToOneWithWhereWithoutGeo_eventsInput, articlesUpdateWithoutGeo_eventsInput>, articlesUncheckedUpdateWithoutGeo_eventsInput>
  }

  export type articlesCreateNestedOneWithoutLikesInput = {
    create?: XOR<articlesCreateWithoutLikesInput, articlesUncheckedCreateWithoutLikesInput>
    connectOrCreate?: articlesCreateOrConnectWithoutLikesInput
    connect?: articlesWhereUniqueInput
  }

  export type public_usersCreateNestedOneWithoutLikesInput = {
    create?: XOR<public_usersCreateWithoutLikesInput, public_usersUncheckedCreateWithoutLikesInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutLikesInput
    connect?: public_usersWhereUniqueInput
  }

  export type articlesUpdateOneWithoutLikesNestedInput = {
    create?: XOR<articlesCreateWithoutLikesInput, articlesUncheckedCreateWithoutLikesInput>
    connectOrCreate?: articlesCreateOrConnectWithoutLikesInput
    upsert?: articlesUpsertWithoutLikesInput
    disconnect?: articlesWhereInput | boolean
    delete?: articlesWhereInput | boolean
    connect?: articlesWhereUniqueInput
    update?: XOR<XOR<articlesUpdateToOneWithWhereWithoutLikesInput, articlesUpdateWithoutLikesInput>, articlesUncheckedUpdateWithoutLikesInput>
  }

  export type public_usersUpdateOneWithoutLikesNestedInput = {
    create?: XOR<public_usersCreateWithoutLikesInput, public_usersUncheckedCreateWithoutLikesInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutLikesInput
    upsert?: public_usersUpsertWithoutLikesInput
    disconnect?: public_usersWhereInput | boolean
    delete?: public_usersWhereInput | boolean
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutLikesInput, public_usersUpdateWithoutLikesInput>, public_usersUncheckedUpdateWithoutLikesInput>
  }

  export type article_tagsCreateNestedManyWithoutTagsInput = {
    create?: XOR<article_tagsCreateWithoutTagsInput, article_tagsUncheckedCreateWithoutTagsInput> | article_tagsCreateWithoutTagsInput[] | article_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutTagsInput | article_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: article_tagsCreateManyTagsInputEnvelope
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
  }

  export type article_tagsUncheckedCreateNestedManyWithoutTagsInput = {
    create?: XOR<article_tagsCreateWithoutTagsInput, article_tagsUncheckedCreateWithoutTagsInput> | article_tagsCreateWithoutTagsInput[] | article_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutTagsInput | article_tagsCreateOrConnectWithoutTagsInput[]
    createMany?: article_tagsCreateManyTagsInputEnvelope
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
  }

  export type article_tagsUpdateManyWithoutTagsNestedInput = {
    create?: XOR<article_tagsCreateWithoutTagsInput, article_tagsUncheckedCreateWithoutTagsInput> | article_tagsCreateWithoutTagsInput[] | article_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutTagsInput | article_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: article_tagsUpsertWithWhereUniqueWithoutTagsInput | article_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: article_tagsCreateManyTagsInputEnvelope
    set?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    disconnect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    delete?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    update?: article_tagsUpdateWithWhereUniqueWithoutTagsInput | article_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: article_tagsUpdateManyWithWhereWithoutTagsInput | article_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: article_tagsScalarWhereInput | article_tagsScalarWhereInput[]
  }

  export type article_tagsUncheckedUpdateManyWithoutTagsNestedInput = {
    create?: XOR<article_tagsCreateWithoutTagsInput, article_tagsUncheckedCreateWithoutTagsInput> | article_tagsCreateWithoutTagsInput[] | article_tagsUncheckedCreateWithoutTagsInput[]
    connectOrCreate?: article_tagsCreateOrConnectWithoutTagsInput | article_tagsCreateOrConnectWithoutTagsInput[]
    upsert?: article_tagsUpsertWithWhereUniqueWithoutTagsInput | article_tagsUpsertWithWhereUniqueWithoutTagsInput[]
    createMany?: article_tagsCreateManyTagsInputEnvelope
    set?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    disconnect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    delete?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    connect?: article_tagsWhereUniqueInput | article_tagsWhereUniqueInput[]
    update?: article_tagsUpdateWithWhereUniqueWithoutTagsInput | article_tagsUpdateWithWhereUniqueWithoutTagsInput[]
    updateMany?: article_tagsUpdateManyWithWhereWithoutTagsInput | article_tagsUpdateManyWithWhereWithoutTagsInput[]
    deleteMany?: article_tagsScalarWhereInput | article_tagsScalarWhereInput[]
  }

  export type articlesCreateNestedOneWithoutViewsInput = {
    create?: XOR<articlesCreateWithoutViewsInput, articlesUncheckedCreateWithoutViewsInput>
    connectOrCreate?: articlesCreateOrConnectWithoutViewsInput
    connect?: articlesWhereUniqueInput
  }

  export type public_usersCreateNestedOneWithoutViewsInput = {
    create?: XOR<public_usersCreateWithoutViewsInput, public_usersUncheckedCreateWithoutViewsInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutViewsInput
    connect?: public_usersWhereUniqueInput
  }

  export type articlesUpdateOneWithoutViewsNestedInput = {
    create?: XOR<articlesCreateWithoutViewsInput, articlesUncheckedCreateWithoutViewsInput>
    connectOrCreate?: articlesCreateOrConnectWithoutViewsInput
    upsert?: articlesUpsertWithoutViewsInput
    disconnect?: articlesWhereInput | boolean
    delete?: articlesWhereInput | boolean
    connect?: articlesWhereUniqueInput
    update?: XOR<XOR<articlesUpdateToOneWithWhereWithoutViewsInput, articlesUpdateWithoutViewsInput>, articlesUncheckedUpdateWithoutViewsInput>
  }

  export type public_usersUpdateOneWithoutViewsNestedInput = {
    create?: XOR<public_usersCreateWithoutViewsInput, public_usersUncheckedCreateWithoutViewsInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutViewsInput
    upsert?: public_usersUpsertWithoutViewsInput
    disconnect?: public_usersWhereInput | boolean
    delete?: public_usersWhereInput | boolean
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutViewsInput, public_usersUpdateWithoutViewsInput>, public_usersUncheckedUpdateWithoutViewsInput>
  }

  export type saml_relay_statesCreateNestedManyWithoutFlow_stateInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type saml_relay_statesUncheckedCreateNestedManyWithoutFlow_stateInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type Enumcode_challenge_methodFieldUpdateOperationsInput = {
    set?: $Enums.code_challenge_method
  }

  export type saml_relay_statesUpdateManyWithoutFlow_stateNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput | saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutFlow_stateNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput> | saml_relay_statesCreateWithoutFlow_stateInput[] | saml_relay_statesUncheckedCreateWithoutFlow_stateInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutFlow_stateInput | saml_relay_statesCreateOrConnectWithoutFlow_stateInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput[]
    createMany?: saml_relay_statesCreateManyFlow_stateInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput | saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput | saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutIdentitiesInput = {
    create?: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    connectOrCreate?: usersCreateOrConnectWithoutIdentitiesInput
    connect?: usersWhereUniqueInput
  }

  export type usersUpdateOneRequiredWithoutIdentitiesNestedInput = {
    create?: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    connectOrCreate?: usersCreateOrConnectWithoutIdentitiesInput
    upsert?: usersUpsertWithoutIdentitiesInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutIdentitiesInput, usersUpdateWithoutIdentitiesInput>, usersUncheckedUpdateWithoutIdentitiesInput>
  }

  export type sessionsCreateNestedOneWithoutMfa_amr_claimsInput = {
    create?: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutMfa_amr_claimsInput
    connect?: sessionsWhereUniqueInput
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type sessionsUpdateOneRequiredWithoutMfa_amr_claimsNestedInput = {
    create?: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutMfa_amr_claimsInput
    upsert?: sessionsUpsertWithoutMfa_amr_claimsInput
    connect?: sessionsWhereUniqueInput
    update?: XOR<XOR<sessionsUpdateToOneWithWhereWithoutMfa_amr_claimsInput, sessionsUpdateWithoutMfa_amr_claimsInput>, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
  }

  export type mfa_factorsCreateNestedOneWithoutMfa_challengesInput = {
    create?: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutMfa_challengesInput
    connect?: mfa_factorsWhereUniqueInput
  }

  export type mfa_factorsUpdateOneRequiredWithoutMfa_challengesNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutMfa_challengesInput
    upsert?: mfa_factorsUpsertWithoutMfa_challengesInput
    connect?: mfa_factorsWhereUniqueInput
    update?: XOR<XOR<mfa_factorsUpdateToOneWithWhereWithoutMfa_challengesInput, mfa_factorsUpdateWithoutMfa_challengesInput>, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
  }

  export type mfa_challengesCreateNestedManyWithoutMfa_factorsInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutMfa_factorsInput = {
    create?: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    connectOrCreate?: usersCreateOrConnectWithoutMfa_factorsInput
    connect?: usersWhereUniqueInput
  }

  export type mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
  }

  export type Enumfactor_typeFieldUpdateOperationsInput = {
    set?: $Enums.factor_type
  }

  export type Enumfactor_statusFieldUpdateOperationsInput = {
    set?: $Enums.factor_status
  }

  export type mfa_challengesUpdateManyWithoutMfa_factorsNestedInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    upsert?: mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    set?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    disconnect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    delete?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    update?: mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput[]
    updateMany?: mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput | mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput[]
    deleteMany?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutMfa_factorsNestedInput = {
    create?: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    connectOrCreate?: usersCreateOrConnectWithoutMfa_factorsInput
    upsert?: usersUpsertWithoutMfa_factorsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutMfa_factorsInput, usersUpdateWithoutMfa_factorsInput>, usersUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput = {
    create?: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput> | mfa_challengesCreateWithoutMfa_factorsInput[] | mfa_challengesUncheckedCreateWithoutMfa_factorsInput[]
    connectOrCreate?: mfa_challengesCreateOrConnectWithoutMfa_factorsInput | mfa_challengesCreateOrConnectWithoutMfa_factorsInput[]
    upsert?: mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput[]
    createMany?: mfa_challengesCreateManyMfa_factorsInputEnvelope
    set?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    disconnect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    delete?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    connect?: mfa_challengesWhereUniqueInput | mfa_challengesWhereUniqueInput[]
    update?: mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput | mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput[]
    updateMany?: mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput | mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput[]
    deleteMany?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
  }

  export type usersCreateNestedOneWithoutOne_time_tokensInput = {
    create?: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutOne_time_tokensInput
    connect?: usersWhereUniqueInput
  }

  export type Enumone_time_token_typeFieldUpdateOperationsInput = {
    set?: $Enums.one_time_token_type
  }

  export type usersUpdateOneRequiredWithoutOne_time_tokensNestedInput = {
    create?: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
    connectOrCreate?: usersCreateOrConnectWithoutOne_time_tokensInput
    upsert?: usersUpsertWithoutOne_time_tokensInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutOne_time_tokensInput, usersUpdateWithoutOne_time_tokensInput>, usersUncheckedUpdateWithoutOne_time_tokensInput>
  }

  export type sessionsCreateNestedOneWithoutRefresh_tokensInput = {
    create?: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutRefresh_tokensInput
    connect?: sessionsWhereUniqueInput
  }

  export type sessionsUpdateOneWithoutRefresh_tokensNestedInput = {
    create?: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: sessionsCreateOrConnectWithoutRefresh_tokensInput
    upsert?: sessionsUpsertWithoutRefresh_tokensInput
    disconnect?: sessionsWhereInput | boolean
    delete?: sessionsWhereInput | boolean
    connect?: sessionsWhereUniqueInput
    update?: XOR<XOR<sessionsUpdateToOneWithWhereWithoutRefresh_tokensInput, sessionsUpdateWithoutRefresh_tokensInput>, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type sso_providersCreateNestedOneWithoutSaml_providersInput = {
    create?: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_providersInput
    connect?: sso_providersWhereUniqueInput
  }

  export type sso_providersUpdateOneRequiredWithoutSaml_providersNestedInput = {
    create?: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_providersInput
    upsert?: sso_providersUpsertWithoutSaml_providersInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSaml_providersInput, sso_providersUpdateWithoutSaml_providersInput>, sso_providersUncheckedUpdateWithoutSaml_providersInput>
  }

  export type flow_stateCreateNestedOneWithoutSaml_relay_statesInput = {
    create?: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: flow_stateCreateOrConnectWithoutSaml_relay_statesInput
    connect?: flow_stateWhereUniqueInput
  }

  export type sso_providersCreateNestedOneWithoutSaml_relay_statesInput = {
    create?: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_relay_statesInput
    connect?: sso_providersWhereUniqueInput
  }

  export type flow_stateUpdateOneWithoutSaml_relay_statesNestedInput = {
    create?: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: flow_stateCreateOrConnectWithoutSaml_relay_statesInput
    upsert?: flow_stateUpsertWithoutSaml_relay_statesInput
    disconnect?: flow_stateWhereInput | boolean
    delete?: flow_stateWhereInput | boolean
    connect?: flow_stateWhereUniqueInput
    update?: XOR<XOR<flow_stateUpdateToOneWithWhereWithoutSaml_relay_statesInput, flow_stateUpdateWithoutSaml_relay_statesInput>, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput = {
    create?: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSaml_relay_statesInput
    upsert?: sso_providersUpsertWithoutSaml_relay_statesInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSaml_relay_statesInput, sso_providersUpdateWithoutSaml_relay_statesInput>, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type mfa_amr_claimsCreateNestedManyWithoutSessionsInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
  }

  export type refresh_tokensCreateNestedManyWithoutSessionsInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type usersCreateNestedOneWithoutSessionsInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    connect?: usersWhereUniqueInput
  }

  export type mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
  }

  export type refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
  }

  export type NullableEnumaal_levelFieldUpdateOperationsInput = {
    set?: $Enums.aal_level | null
  }

  export type mfa_amr_claimsUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    upsert?: mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    set?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    disconnect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    delete?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    update?: mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput | mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
  }

  export type refresh_tokensUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput | refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput | refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutSessionsInput | refresh_tokensUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type usersUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: usersCreateOrConnectWithoutSessionsInput
    upsert?: usersUpsertWithoutSessionsInput
    connect?: usersWhereUniqueInput
    update?: XOR<XOR<usersUpdateToOneWithWhereWithoutSessionsInput, usersUpdateWithoutSessionsInput>, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput> | mfa_amr_claimsCreateWithoutSessionsInput[] | mfa_amr_claimsUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: mfa_amr_claimsCreateOrConnectWithoutSessionsInput | mfa_amr_claimsCreateOrConnectWithoutSessionsInput[]
    upsert?: mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: mfa_amr_claimsCreateManySessionsInputEnvelope
    set?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    disconnect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    delete?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    connect?: mfa_amr_claimsWhereUniqueInput | mfa_amr_claimsWhereUniqueInput[]
    update?: mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput | mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput | mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
  }

  export type refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput = {
    create?: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput> | refresh_tokensCreateWithoutSessionsInput[] | refresh_tokensUncheckedCreateWithoutSessionsInput[]
    connectOrCreate?: refresh_tokensCreateOrConnectWithoutSessionsInput | refresh_tokensCreateOrConnectWithoutSessionsInput[]
    upsert?: refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput | refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput[]
    createMany?: refresh_tokensCreateManySessionsInputEnvelope
    set?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    disconnect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    delete?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    connect?: refresh_tokensWhereUniqueInput | refresh_tokensWhereUniqueInput[]
    update?: refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput | refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput[]
    updateMany?: refresh_tokensUpdateManyWithWhereWithoutSessionsInput | refresh_tokensUpdateManyWithWhereWithoutSessionsInput[]
    deleteMany?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
  }

  export type sso_providersCreateNestedOneWithoutSso_domainsInput = {
    create?: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSso_domainsInput
    connect?: sso_providersWhereUniqueInput
  }

  export type sso_providersUpdateOneRequiredWithoutSso_domainsNestedInput = {
    create?: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    connectOrCreate?: sso_providersCreateOrConnectWithoutSso_domainsInput
    upsert?: sso_providersUpsertWithoutSso_domainsInput
    connect?: sso_providersWhereUniqueInput
    update?: XOR<XOR<sso_providersUpdateToOneWithWhereWithoutSso_domainsInput, sso_providersUpdateWithoutSso_domainsInput>, sso_providersUncheckedUpdateWithoutSso_domainsInput>
  }

  export type saml_providersCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
  }

  export type saml_relay_statesCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type sso_domainsCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
  }

  export type saml_providersUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
  }

  export type saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
  }

  export type sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
  }

  export type saml_providersUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_providersUpsertWithWhereUniqueWithoutSso_providersInput | saml_providersUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    set?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    disconnect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    delete?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    update?: saml_providersUpdateWithWhereUniqueWithoutSso_providersInput | saml_providersUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_providersUpdateManyWithWhereWithoutSso_providersInput | saml_providersUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
  }

  export type saml_relay_statesUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput | saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type sso_domainsUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    upsert?: sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput | sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    set?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    disconnect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    delete?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    update?: sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput | sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: sso_domainsUpdateManyWithWhereWithoutSso_providersInput | sso_domainsUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
  }

  export type saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput> | saml_providersCreateWithoutSso_providersInput[] | saml_providersUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_providersCreateOrConnectWithoutSso_providersInput | saml_providersCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_providersUpsertWithWhereUniqueWithoutSso_providersInput | saml_providersUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_providersCreateManySso_providersInputEnvelope
    set?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    disconnect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    delete?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    connect?: saml_providersWhereUniqueInput | saml_providersWhereUniqueInput[]
    update?: saml_providersUpdateWithWhereUniqueWithoutSso_providersInput | saml_providersUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_providersUpdateManyWithWhereWithoutSso_providersInput | saml_providersUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput> | saml_relay_statesCreateWithoutSso_providersInput[] | saml_relay_statesUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: saml_relay_statesCreateOrConnectWithoutSso_providersInput | saml_relay_statesCreateOrConnectWithoutSso_providersInput[]
    upsert?: saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: saml_relay_statesCreateManySso_providersInputEnvelope
    set?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    disconnect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    delete?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    connect?: saml_relay_statesWhereUniqueInput | saml_relay_statesWhereUniqueInput[]
    update?: saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput | saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput | saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
  }

  export type sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput = {
    create?: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput> | sso_domainsCreateWithoutSso_providersInput[] | sso_domainsUncheckedCreateWithoutSso_providersInput[]
    connectOrCreate?: sso_domainsCreateOrConnectWithoutSso_providersInput | sso_domainsCreateOrConnectWithoutSso_providersInput[]
    upsert?: sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput | sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput[]
    createMany?: sso_domainsCreateManySso_providersInputEnvelope
    set?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    disconnect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    delete?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    connect?: sso_domainsWhereUniqueInput | sso_domainsWhereUniqueInput[]
    update?: sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput | sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput[]
    updateMany?: sso_domainsUpdateManyWithWhereWithoutSso_providersInput | sso_domainsUpdateManyWithWhereWithoutSso_providersInput[]
    deleteMany?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
  }

  export type identitiesCreateNestedManyWithoutUsersInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
  }

  export type mfa_factorsCreateNestedManyWithoutUsersInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
  }

  export type one_time_tokensCreateNestedManyWithoutUsersInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
  }

  export type sessionsCreateNestedManyWithoutUsersInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
  }

  export type public_usersCreateNestedOneWithoutUsersInput = {
    create?: XOR<public_usersCreateWithoutUsersInput, public_usersUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutUsersInput
    connect?: public_usersWhereUniqueInput
  }

  export type identitiesUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
  }

  export type mfa_factorsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
  }

  export type one_time_tokensUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
  }

  export type sessionsUncheckedCreateNestedManyWithoutUsersInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
  }

  export type public_usersUncheckedCreateNestedOneWithoutUsersInput = {
    create?: XOR<public_usersCreateWithoutUsersInput, public_usersUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutUsersInput
    connect?: public_usersWhereUniqueInput
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type identitiesUpdateManyWithoutUsersNestedInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    upsert?: identitiesUpsertWithWhereUniqueWithoutUsersInput | identitiesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    set?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    disconnect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    delete?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    update?: identitiesUpdateWithWhereUniqueWithoutUsersInput | identitiesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: identitiesUpdateManyWithWhereWithoutUsersInput | identitiesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
  }

  export type mfa_factorsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    upsert?: mfa_factorsUpsertWithWhereUniqueWithoutUsersInput | mfa_factorsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    set?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    disconnect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    delete?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    update?: mfa_factorsUpdateWithWhereUniqueWithoutUsersInput | mfa_factorsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mfa_factorsUpdateManyWithWhereWithoutUsersInput | mfa_factorsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
  }

  export type one_time_tokensUpdateManyWithoutUsersNestedInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: one_time_tokensUpsertWithWhereUniqueWithoutUsersInput | one_time_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    set?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    disconnect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    delete?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    update?: one_time_tokensUpdateWithWhereUniqueWithoutUsersInput | one_time_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: one_time_tokensUpdateManyWithWhereWithoutUsersInput | one_time_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
  }

  export type sessionsUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: sessionsUpsertWithWhereUniqueWithoutUsersInput | sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    disconnect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    delete?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    update?: sessionsUpdateWithWhereUniqueWithoutUsersInput | sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sessionsUpdateManyWithWhereWithoutUsersInput | sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
  }

  export type public_usersUpdateOneWithoutUsersNestedInput = {
    create?: XOR<public_usersCreateWithoutUsersInput, public_usersUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutUsersInput
    upsert?: public_usersUpsertWithoutUsersInput
    disconnect?: public_usersWhereInput | boolean
    delete?: public_usersWhereInput | boolean
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutUsersInput, public_usersUpdateWithoutUsersInput>, public_usersUncheckedUpdateWithoutUsersInput>
  }

  export type identitiesUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput> | identitiesCreateWithoutUsersInput[] | identitiesUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: identitiesCreateOrConnectWithoutUsersInput | identitiesCreateOrConnectWithoutUsersInput[]
    upsert?: identitiesUpsertWithWhereUniqueWithoutUsersInput | identitiesUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: identitiesCreateManyUsersInputEnvelope
    set?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    disconnect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    delete?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    connect?: identitiesWhereUniqueInput | identitiesWhereUniqueInput[]
    update?: identitiesUpdateWithWhereUniqueWithoutUsersInput | identitiesUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: identitiesUpdateManyWithWhereWithoutUsersInput | identitiesUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
  }

  export type mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput> | mfa_factorsCreateWithoutUsersInput[] | mfa_factorsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: mfa_factorsCreateOrConnectWithoutUsersInput | mfa_factorsCreateOrConnectWithoutUsersInput[]
    upsert?: mfa_factorsUpsertWithWhereUniqueWithoutUsersInput | mfa_factorsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: mfa_factorsCreateManyUsersInputEnvelope
    set?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    disconnect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    delete?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    connect?: mfa_factorsWhereUniqueInput | mfa_factorsWhereUniqueInput[]
    update?: mfa_factorsUpdateWithWhereUniqueWithoutUsersInput | mfa_factorsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: mfa_factorsUpdateManyWithWhereWithoutUsersInput | mfa_factorsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
  }

  export type one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput> | one_time_tokensCreateWithoutUsersInput[] | one_time_tokensUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: one_time_tokensCreateOrConnectWithoutUsersInput | one_time_tokensCreateOrConnectWithoutUsersInput[]
    upsert?: one_time_tokensUpsertWithWhereUniqueWithoutUsersInput | one_time_tokensUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: one_time_tokensCreateManyUsersInputEnvelope
    set?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    disconnect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    delete?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    connect?: one_time_tokensWhereUniqueInput | one_time_tokensWhereUniqueInput[]
    update?: one_time_tokensUpdateWithWhereUniqueWithoutUsersInput | one_time_tokensUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: one_time_tokensUpdateManyWithWhereWithoutUsersInput | one_time_tokensUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
  }

  export type sessionsUncheckedUpdateManyWithoutUsersNestedInput = {
    create?: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput> | sessionsCreateWithoutUsersInput[] | sessionsUncheckedCreateWithoutUsersInput[]
    connectOrCreate?: sessionsCreateOrConnectWithoutUsersInput | sessionsCreateOrConnectWithoutUsersInput[]
    upsert?: sessionsUpsertWithWhereUniqueWithoutUsersInput | sessionsUpsertWithWhereUniqueWithoutUsersInput[]
    createMany?: sessionsCreateManyUsersInputEnvelope
    set?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    disconnect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    delete?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    connect?: sessionsWhereUniqueInput | sessionsWhereUniqueInput[]
    update?: sessionsUpdateWithWhereUniqueWithoutUsersInput | sessionsUpdateWithWhereUniqueWithoutUsersInput[]
    updateMany?: sessionsUpdateManyWithWhereWithoutUsersInput | sessionsUpdateManyWithWhereWithoutUsersInput[]
    deleteMany?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
  }

  export type public_usersUncheckedUpdateOneWithoutUsersNestedInput = {
    create?: XOR<public_usersCreateWithoutUsersInput, public_usersUncheckedCreateWithoutUsersInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutUsersInput
    upsert?: public_usersUpsertWithoutUsersInput
    disconnect?: public_usersWhereInput | boolean
    delete?: public_usersWhereInput | boolean
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutUsersInput, public_usersUpdateWithoutUsersInput>, public_usersUncheckedUpdateWithoutUsersInput>
  }

  export type public_usersCreateNestedOneWithoutSessionsInput = {
    create?: XOR<public_usersCreateWithoutSessionsInput, public_usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutSessionsInput
    connect?: public_usersWhereUniqueInput
  }

  export type public_usersUpdateOneRequiredWithoutSessionsNestedInput = {
    create?: XOR<public_usersCreateWithoutSessionsInput, public_usersUncheckedCreateWithoutSessionsInput>
    connectOrCreate?: public_usersCreateOrConnectWithoutSessionsInput
    upsert?: public_usersUpsertWithoutSessionsInput
    connect?: public_usersWhereUniqueInput
    update?: XOR<XOR<public_usersUpdateToOneWithWhereWithoutSessionsInput, public_usersUpdateWithoutSessionsInput>, public_usersUncheckedUpdateWithoutSessionsInput>
  }

  export type booksCreateNestedOneWithoutBook_articlesInput = {
    create?: XOR<booksCreateWithoutBook_articlesInput, booksUncheckedCreateWithoutBook_articlesInput>
    connectOrCreate?: booksCreateOrConnectWithoutBook_articlesInput
    connect?: booksWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type booksUpdateOneRequiredWithoutBook_articlesNestedInput = {
    create?: XOR<booksCreateWithoutBook_articlesInput, booksUncheckedCreateWithoutBook_articlesInput>
    connectOrCreate?: booksCreateOrConnectWithoutBook_articlesInput
    upsert?: booksUpsertWithoutBook_articlesInput
    connect?: booksWhereUniqueInput
    update?: XOR<XOR<booksUpdateToOneWithWhereWithoutBook_articlesInput, booksUpdateWithoutBook_articlesInput>, booksUncheckedUpdateWithoutBook_articlesInput>
  }

  export type book_articlesCreateNestedManyWithoutBooksInput = {
    create?: XOR<book_articlesCreateWithoutBooksInput, book_articlesUncheckedCreateWithoutBooksInput> | book_articlesCreateWithoutBooksInput[] | book_articlesUncheckedCreateWithoutBooksInput[]
    connectOrCreate?: book_articlesCreateOrConnectWithoutBooksInput | book_articlesCreateOrConnectWithoutBooksInput[]
    createMany?: book_articlesCreateManyBooksInputEnvelope
    connect?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
  }

  export type book_articlesUncheckedCreateNestedManyWithoutBooksInput = {
    create?: XOR<book_articlesCreateWithoutBooksInput, book_articlesUncheckedCreateWithoutBooksInput> | book_articlesCreateWithoutBooksInput[] | book_articlesUncheckedCreateWithoutBooksInput[]
    connectOrCreate?: book_articlesCreateOrConnectWithoutBooksInput | book_articlesCreateOrConnectWithoutBooksInput[]
    createMany?: book_articlesCreateManyBooksInputEnvelope
    connect?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
  }

  export type book_articlesUpdateManyWithoutBooksNestedInput = {
    create?: XOR<book_articlesCreateWithoutBooksInput, book_articlesUncheckedCreateWithoutBooksInput> | book_articlesCreateWithoutBooksInput[] | book_articlesUncheckedCreateWithoutBooksInput[]
    connectOrCreate?: book_articlesCreateOrConnectWithoutBooksInput | book_articlesCreateOrConnectWithoutBooksInput[]
    upsert?: book_articlesUpsertWithWhereUniqueWithoutBooksInput | book_articlesUpsertWithWhereUniqueWithoutBooksInput[]
    createMany?: book_articlesCreateManyBooksInputEnvelope
    set?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    disconnect?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    delete?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    connect?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    update?: book_articlesUpdateWithWhereUniqueWithoutBooksInput | book_articlesUpdateWithWhereUniqueWithoutBooksInput[]
    updateMany?: book_articlesUpdateManyWithWhereWithoutBooksInput | book_articlesUpdateManyWithWhereWithoutBooksInput[]
    deleteMany?: book_articlesScalarWhereInput | book_articlesScalarWhereInput[]
  }

  export type book_articlesUncheckedUpdateManyWithoutBooksNestedInput = {
    create?: XOR<book_articlesCreateWithoutBooksInput, book_articlesUncheckedCreateWithoutBooksInput> | book_articlesCreateWithoutBooksInput[] | book_articlesUncheckedCreateWithoutBooksInput[]
    connectOrCreate?: book_articlesCreateOrConnectWithoutBooksInput | book_articlesCreateOrConnectWithoutBooksInput[]
    upsert?: book_articlesUpsertWithWhereUniqueWithoutBooksInput | book_articlesUpsertWithWhereUniqueWithoutBooksInput[]
    createMany?: book_articlesCreateManyBooksInputEnvelope
    set?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    disconnect?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    delete?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    connect?: book_articlesWhereUniqueInput | book_articlesWhereUniqueInput[]
    update?: book_articlesUpdateWithWhereUniqueWithoutBooksInput | book_articlesUpdateWithWhereUniqueWithoutBooksInput[]
    updateMany?: book_articlesUpdateManyWithWhereWithoutBooksInput | book_articlesUpdateManyWithWhereWithoutBooksInput[]
    deleteMany?: book_articlesScalarWhereInput | book_articlesScalarWhereInput[]
  }

  export type NestedUuidFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidFilter<$PrismaModel> | string
  }

  export type NestedBigIntFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntFilter<$PrismaModel> | bigint | number
  }

  export type NestedUuidWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedBigIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel>
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntWithAggregatesFilter<$PrismaModel> | bigint | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedBigIntFilter<$PrismaModel>
    _min?: NestedBigIntFilter<$PrismaModel>
    _max?: NestedBigIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[] | ListFloatFieldRefInput<$PrismaModel>
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel>
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedEnumsentiment_typeNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.sentiment_type | Enumsentiment_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumsentiment_typeNullableFilter<$PrismaModel> | $Enums.sentiment_type | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel> | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListFloatFieldRefInput<$PrismaModel> | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedFloatNullableFilter<$PrismaModel>
    _min?: NestedFloatNullableFilter<$PrismaModel>
    _max?: NestedFloatNullableFilter<$PrismaModel>
  }

  export type NestedEnumsentiment_typeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.sentiment_type | Enumsentiment_typeFieldRefInput<$PrismaModel> | null
    in?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.sentiment_type[] | ListEnumsentiment_typeFieldRefInput<$PrismaModel> | null
    not?: NestedEnumsentiment_typeNullableWithAggregatesFilter<$PrismaModel> | $Enums.sentiment_type | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumsentiment_typeNullableFilter<$PrismaModel>
    _max?: NestedEnumsentiment_typeNullableFilter<$PrismaModel>
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[] | ListStringFieldRefInput<$PrismaModel>
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel>
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedUuidNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedUuidNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    notIn?: string[] | ListStringFieldRefInput<$PrismaModel> | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedUuidNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedBigIntNullableFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableFilter<$PrismaModel> | bigint | number | null
  }

  export type NestedBigIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: bigint | number | BigIntFieldRefInput<$PrismaModel> | null
    in?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    notIn?: bigint[] | number[] | ListBigIntFieldRefInput<$PrismaModel> | null
    lt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    lte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gt?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    gte?: bigint | number | BigIntFieldRefInput<$PrismaModel>
    not?: NestedBigIntNullableWithAggregatesFilter<$PrismaModel> | bigint | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedBigIntNullableFilter<$PrismaModel>
    _min?: NestedBigIntNullableFilter<$PrismaModel>
    _max?: NestedBigIntNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel> | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedEnumcode_challenge_methodFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodFilter<$PrismaModel> | $Enums.code_challenge_method
  }

  export type NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.code_challenge_method | Enumcode_challenge_methodFieldRefInput<$PrismaModel>
    in?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    notIn?: $Enums.code_challenge_method[] | ListEnumcode_challenge_methodFieldRefInput<$PrismaModel>
    not?: NestedEnumcode_challenge_methodWithAggregatesFilter<$PrismaModel> | $Enums.code_challenge_method
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
    _max?: NestedEnumcode_challenge_methodFilter<$PrismaModel>
  }
  export type NestedJsonFilter<$PrismaModel = never> =
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string[]
    mode?: QueryMode | EnumQueryModeFieldRefInput<$PrismaModel>
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    lte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gt?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    gte?: InputJsonValue | JsonFieldRefInput<$PrismaModel>
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    notIn?: Date[] | string[] | ListDateTimeFieldRefInput<$PrismaModel>
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedEnumfactor_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeFilter<$PrismaModel> | $Enums.factor_type
  }

  export type NestedEnumfactor_statusFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusFilter<$PrismaModel> | $Enums.factor_status
  }

  export type NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_type | Enumfactor_typeFieldRefInput<$PrismaModel>
    in?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_type[] | ListEnumfactor_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_typeWithAggregatesFilter<$PrismaModel> | $Enums.factor_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_typeFilter<$PrismaModel>
    _max?: NestedEnumfactor_typeFilter<$PrismaModel>
  }

  export type NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.factor_status | Enumfactor_statusFieldRefInput<$PrismaModel>
    in?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    notIn?: $Enums.factor_status[] | ListEnumfactor_statusFieldRefInput<$PrismaModel>
    not?: NestedEnumfactor_statusWithAggregatesFilter<$PrismaModel> | $Enums.factor_status
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumfactor_statusFilter<$PrismaModel>
    _max?: NestedEnumfactor_statusFilter<$PrismaModel>
  }

  export type NestedEnumone_time_token_typeFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeFilter<$PrismaModel> | $Enums.one_time_token_type
  }

  export type NestedEnumone_time_token_typeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.one_time_token_type | Enumone_time_token_typeFieldRefInput<$PrismaModel>
    in?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    notIn?: $Enums.one_time_token_type[] | ListEnumone_time_token_typeFieldRefInput<$PrismaModel>
    not?: NestedEnumone_time_token_typeWithAggregatesFilter<$PrismaModel> | $Enums.one_time_token_type
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumone_time_token_typeFilter<$PrismaModel>
    _max?: NestedEnumone_time_token_typeFilter<$PrismaModel>
  }

  export type NestedEnumaal_levelNullableFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableFilter<$PrismaModel> | $Enums.aal_level | null
  }

  export type NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.aal_level | Enumaal_levelFieldRefInput<$PrismaModel> | null
    in?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    notIn?: $Enums.aal_level[] | ListEnumaal_levelFieldRefInput<$PrismaModel> | null
    not?: NestedEnumaal_levelNullableWithAggregatesFilter<$PrismaModel> | $Enums.aal_level | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedEnumaal_levelNullableFilter<$PrismaModel>
    _max?: NestedEnumaal_levelNullableFilter<$PrismaModel>
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[] | ListIntFieldRefInput<$PrismaModel>
    notIn?: number[] | ListIntFieldRefInput<$PrismaModel>
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type articlesCreateWithoutArticle_entitiesInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_tags?: article_tagsCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsCreateNestedManyWithoutArticlesInput
    likes?: likesCreateNestedManyWithoutArticlesInput
    views?: viewsCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateWithoutArticle_entitiesInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsUncheckedCreateNestedManyWithoutArticlesInput
    likes?: likesUncheckedCreateNestedManyWithoutArticlesInput
    views?: viewsUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesCreateOrConnectWithoutArticle_entitiesInput = {
    where: articlesWhereUniqueInput
    create: XOR<articlesCreateWithoutArticle_entitiesInput, articlesUncheckedCreateWithoutArticle_entitiesInput>
  }

  export type entitiesCreateWithoutArticle_entitiesInput = {
    id?: bigint | number
    name: string
    type: string
    description?: string | null
    wiki_url?: string | null
    created_at?: Date | string | null
  }

  export type entitiesUncheckedCreateWithoutArticle_entitiesInput = {
    id?: bigint | number
    name: string
    type: string
    description?: string | null
    wiki_url?: string | null
    created_at?: Date | string | null
  }

  export type entitiesCreateOrConnectWithoutArticle_entitiesInput = {
    where: entitiesWhereUniqueInput
    create: XOR<entitiesCreateWithoutArticle_entitiesInput, entitiesUncheckedCreateWithoutArticle_entitiesInput>
  }

  export type articlesUpsertWithoutArticle_entitiesInput = {
    update: XOR<articlesUpdateWithoutArticle_entitiesInput, articlesUncheckedUpdateWithoutArticle_entitiesInput>
    create: XOR<articlesCreateWithoutArticle_entitiesInput, articlesUncheckedCreateWithoutArticle_entitiesInput>
    where?: articlesWhereInput
  }

  export type articlesUpdateToOneWithWhereWithoutArticle_entitiesInput = {
    where?: articlesWhereInput
    data: XOR<articlesUpdateWithoutArticle_entitiesInput, articlesUncheckedUpdateWithoutArticle_entitiesInput>
  }

  export type articlesUpdateWithoutArticle_entitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_tags?: article_tagsUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUpdateManyWithoutArticlesNestedInput
    likes?: likesUpdateManyWithoutArticlesNestedInput
    views?: viewsUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateWithoutArticle_entitiesInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_tags?: article_tagsUncheckedUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput
    likes?: likesUncheckedUpdateManyWithoutArticlesNestedInput
    views?: viewsUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type entitiesUpsertWithoutArticle_entitiesInput = {
    update: XOR<entitiesUpdateWithoutArticle_entitiesInput, entitiesUncheckedUpdateWithoutArticle_entitiesInput>
    create: XOR<entitiesCreateWithoutArticle_entitiesInput, entitiesUncheckedCreateWithoutArticle_entitiesInput>
    where?: entitiesWhereInput
  }

  export type entitiesUpdateToOneWithWhereWithoutArticle_entitiesInput = {
    where?: entitiesWhereInput
    data: XOR<entitiesUpdateWithoutArticle_entitiesInput, entitiesUncheckedUpdateWithoutArticle_entitiesInput>
  }

  export type entitiesUpdateWithoutArticle_entitiesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    wiki_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type entitiesUncheckedUpdateWithoutArticle_entitiesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    wiki_url?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type article_entitiesCreateWithoutArticlesInput = {
    entities: entitiesCreateNestedOneWithoutArticle_entitiesInput
  }

  export type article_entitiesUncheckedCreateWithoutArticlesInput = {
    entity_id: bigint | number
  }

  export type article_entitiesCreateOrConnectWithoutArticlesInput = {
    where: article_entitiesWhereUniqueInput
    create: XOR<article_entitiesCreateWithoutArticlesInput, article_entitiesUncheckedCreateWithoutArticlesInput>
  }

  export type article_entitiesCreateManyArticlesInputEnvelope = {
    data: article_entitiesCreateManyArticlesInput | article_entitiesCreateManyArticlesInput[]
    skipDuplicates?: boolean
  }

  export type article_tagsCreateWithoutArticlesInput = {
    tags: tagsCreateNestedOneWithoutArticle_tagsInput
  }

  export type article_tagsUncheckedCreateWithoutArticlesInput = {
    tag_id: bigint | number
  }

  export type article_tagsCreateOrConnectWithoutArticlesInput = {
    where: article_tagsWhereUniqueInput
    create: XOR<article_tagsCreateWithoutArticlesInput, article_tagsUncheckedCreateWithoutArticlesInput>
  }

  export type article_tagsCreateManyArticlesInputEnvelope = {
    data: article_tagsCreateManyArticlesInput | article_tagsCreateManyArticlesInput[]
    skipDuplicates?: boolean
  }

  export type bookmarksCreateWithoutArticlesInput = {
    id?: bigint | number
    bookmarked_at?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedOneWithoutBookmarksInput
    users?: public_usersCreateNestedOneWithoutBookmarksInput
  }

  export type bookmarksUncheckedCreateWithoutArticlesInput = {
    id?: bigint | number
    user_id?: string | null
    folder_id?: bigint | number | null
    bookmarked_at?: Date | string | null
  }

  export type bookmarksCreateOrConnectWithoutArticlesInput = {
    where: bookmarksWhereUniqueInput
    create: XOR<bookmarksCreateWithoutArticlesInput, bookmarksUncheckedCreateWithoutArticlesInput>
  }

  export type bookmarksCreateManyArticlesInputEnvelope = {
    data: bookmarksCreateManyArticlesInput | bookmarksCreateManyArticlesInput[]
    skipDuplicates?: boolean
  }

  export type geo_eventsCreateWithoutArticlesInput = {
    id?: string
    lat?: number | null
    lng?: number | null
    zoom_level?: number | null
    label?: string | null
    created_at?: Date | string | null
  }

  export type geo_eventsUncheckedCreateWithoutArticlesInput = {
    id?: string
    lat?: number | null
    lng?: number | null
    zoom_level?: number | null
    label?: string | null
    created_at?: Date | string | null
  }

  export type geo_eventsCreateOrConnectWithoutArticlesInput = {
    where: geo_eventsWhereUniqueInput
    create: XOR<geo_eventsCreateWithoutArticlesInput, geo_eventsUncheckedCreateWithoutArticlesInput>
  }

  export type geo_eventsCreateManyArticlesInputEnvelope = {
    data: geo_eventsCreateManyArticlesInput | geo_eventsCreateManyArticlesInput[]
    skipDuplicates?: boolean
  }

  export type likesCreateWithoutArticlesInput = {
    id?: bigint | number
    liked_at?: Date | string | null
    users?: public_usersCreateNestedOneWithoutLikesInput
  }

  export type likesUncheckedCreateWithoutArticlesInput = {
    id?: bigint | number
    user_id?: string | null
    liked_at?: Date | string | null
  }

  export type likesCreateOrConnectWithoutArticlesInput = {
    where: likesWhereUniqueInput
    create: XOR<likesCreateWithoutArticlesInput, likesUncheckedCreateWithoutArticlesInput>
  }

  export type likesCreateManyArticlesInputEnvelope = {
    data: likesCreateManyArticlesInput | likesCreateManyArticlesInput[]
    skipDuplicates?: boolean
  }

  export type viewsCreateWithoutArticlesInput = {
    id?: bigint | number
    viewed_at?: Date | string | null
    users?: public_usersCreateNestedOneWithoutViewsInput
  }

  export type viewsUncheckedCreateWithoutArticlesInput = {
    id?: bigint | number
    user_id?: string | null
    viewed_at?: Date | string | null
  }

  export type viewsCreateOrConnectWithoutArticlesInput = {
    where: viewsWhereUniqueInput
    create: XOR<viewsCreateWithoutArticlesInput, viewsUncheckedCreateWithoutArticlesInput>
  }

  export type viewsCreateManyArticlesInputEnvelope = {
    data: viewsCreateManyArticlesInput | viewsCreateManyArticlesInput[]
    skipDuplicates?: boolean
  }

  export type article_entitiesUpsertWithWhereUniqueWithoutArticlesInput = {
    where: article_entitiesWhereUniqueInput
    update: XOR<article_entitiesUpdateWithoutArticlesInput, article_entitiesUncheckedUpdateWithoutArticlesInput>
    create: XOR<article_entitiesCreateWithoutArticlesInput, article_entitiesUncheckedCreateWithoutArticlesInput>
  }

  export type article_entitiesUpdateWithWhereUniqueWithoutArticlesInput = {
    where: article_entitiesWhereUniqueInput
    data: XOR<article_entitiesUpdateWithoutArticlesInput, article_entitiesUncheckedUpdateWithoutArticlesInput>
  }

  export type article_entitiesUpdateManyWithWhereWithoutArticlesInput = {
    where: article_entitiesScalarWhereInput
    data: XOR<article_entitiesUpdateManyMutationInput, article_entitiesUncheckedUpdateManyWithoutArticlesInput>
  }

  export type article_entitiesScalarWhereInput = {
    AND?: article_entitiesScalarWhereInput | article_entitiesScalarWhereInput[]
    OR?: article_entitiesScalarWhereInput[]
    NOT?: article_entitiesScalarWhereInput | article_entitiesScalarWhereInput[]
    article_id?: UuidFilter<"article_entities"> | string
    entity_id?: BigIntFilter<"article_entities"> | bigint | number
  }

  export type article_tagsUpsertWithWhereUniqueWithoutArticlesInput = {
    where: article_tagsWhereUniqueInput
    update: XOR<article_tagsUpdateWithoutArticlesInput, article_tagsUncheckedUpdateWithoutArticlesInput>
    create: XOR<article_tagsCreateWithoutArticlesInput, article_tagsUncheckedCreateWithoutArticlesInput>
  }

  export type article_tagsUpdateWithWhereUniqueWithoutArticlesInput = {
    where: article_tagsWhereUniqueInput
    data: XOR<article_tagsUpdateWithoutArticlesInput, article_tagsUncheckedUpdateWithoutArticlesInput>
  }

  export type article_tagsUpdateManyWithWhereWithoutArticlesInput = {
    where: article_tagsScalarWhereInput
    data: XOR<article_tagsUpdateManyMutationInput, article_tagsUncheckedUpdateManyWithoutArticlesInput>
  }

  export type article_tagsScalarWhereInput = {
    AND?: article_tagsScalarWhereInput | article_tagsScalarWhereInput[]
    OR?: article_tagsScalarWhereInput[]
    NOT?: article_tagsScalarWhereInput | article_tagsScalarWhereInput[]
    article_id?: UuidFilter<"article_tags"> | string
    tag_id?: BigIntFilter<"article_tags"> | bigint | number
  }

  export type bookmarksUpsertWithWhereUniqueWithoutArticlesInput = {
    where: bookmarksWhereUniqueInput
    update: XOR<bookmarksUpdateWithoutArticlesInput, bookmarksUncheckedUpdateWithoutArticlesInput>
    create: XOR<bookmarksCreateWithoutArticlesInput, bookmarksUncheckedCreateWithoutArticlesInput>
  }

  export type bookmarksUpdateWithWhereUniqueWithoutArticlesInput = {
    where: bookmarksWhereUniqueInput
    data: XOR<bookmarksUpdateWithoutArticlesInput, bookmarksUncheckedUpdateWithoutArticlesInput>
  }

  export type bookmarksUpdateManyWithWhereWithoutArticlesInput = {
    where: bookmarksScalarWhereInput
    data: XOR<bookmarksUpdateManyMutationInput, bookmarksUncheckedUpdateManyWithoutArticlesInput>
  }

  export type bookmarksScalarWhereInput = {
    AND?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
    OR?: bookmarksScalarWhereInput[]
    NOT?: bookmarksScalarWhereInput | bookmarksScalarWhereInput[]
    id?: BigIntFilter<"bookmarks"> | bigint | number
    user_id?: UuidNullableFilter<"bookmarks"> | string | null
    article_id?: UuidNullableFilter<"bookmarks"> | string | null
    folder_id?: BigIntNullableFilter<"bookmarks"> | bigint | number | null
    bookmarked_at?: DateTimeNullableFilter<"bookmarks"> | Date | string | null
  }

  export type geo_eventsUpsertWithWhereUniqueWithoutArticlesInput = {
    where: geo_eventsWhereUniqueInput
    update: XOR<geo_eventsUpdateWithoutArticlesInput, geo_eventsUncheckedUpdateWithoutArticlesInput>
    create: XOR<geo_eventsCreateWithoutArticlesInput, geo_eventsUncheckedCreateWithoutArticlesInput>
  }

  export type geo_eventsUpdateWithWhereUniqueWithoutArticlesInput = {
    where: geo_eventsWhereUniqueInput
    data: XOR<geo_eventsUpdateWithoutArticlesInput, geo_eventsUncheckedUpdateWithoutArticlesInput>
  }

  export type geo_eventsUpdateManyWithWhereWithoutArticlesInput = {
    where: geo_eventsScalarWhereInput
    data: XOR<geo_eventsUpdateManyMutationInput, geo_eventsUncheckedUpdateManyWithoutArticlesInput>
  }

  export type geo_eventsScalarWhereInput = {
    AND?: geo_eventsScalarWhereInput | geo_eventsScalarWhereInput[]
    OR?: geo_eventsScalarWhereInput[]
    NOT?: geo_eventsScalarWhereInput | geo_eventsScalarWhereInput[]
    id?: UuidFilter<"geo_events"> | string
    article_id?: UuidNullableFilter<"geo_events"> | string | null
    lat?: FloatNullableFilter<"geo_events"> | number | null
    lng?: FloatNullableFilter<"geo_events"> | number | null
    zoom_level?: IntNullableFilter<"geo_events"> | number | null
    label?: StringNullableFilter<"geo_events"> | string | null
    created_at?: DateTimeNullableFilter<"geo_events"> | Date | string | null
  }

  export type likesUpsertWithWhereUniqueWithoutArticlesInput = {
    where: likesWhereUniqueInput
    update: XOR<likesUpdateWithoutArticlesInput, likesUncheckedUpdateWithoutArticlesInput>
    create: XOR<likesCreateWithoutArticlesInput, likesUncheckedCreateWithoutArticlesInput>
  }

  export type likesUpdateWithWhereUniqueWithoutArticlesInput = {
    where: likesWhereUniqueInput
    data: XOR<likesUpdateWithoutArticlesInput, likesUncheckedUpdateWithoutArticlesInput>
  }

  export type likesUpdateManyWithWhereWithoutArticlesInput = {
    where: likesScalarWhereInput
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyWithoutArticlesInput>
  }

  export type likesScalarWhereInput = {
    AND?: likesScalarWhereInput | likesScalarWhereInput[]
    OR?: likesScalarWhereInput[]
    NOT?: likesScalarWhereInput | likesScalarWhereInput[]
    id?: BigIntFilter<"likes"> | bigint | number
    user_id?: UuidNullableFilter<"likes"> | string | null
    article_id?: UuidNullableFilter<"likes"> | string | null
    liked_at?: DateTimeNullableFilter<"likes"> | Date | string | null
  }

  export type viewsUpsertWithWhereUniqueWithoutArticlesInput = {
    where: viewsWhereUniqueInput
    update: XOR<viewsUpdateWithoutArticlesInput, viewsUncheckedUpdateWithoutArticlesInput>
    create: XOR<viewsCreateWithoutArticlesInput, viewsUncheckedCreateWithoutArticlesInput>
  }

  export type viewsUpdateWithWhereUniqueWithoutArticlesInput = {
    where: viewsWhereUniqueInput
    data: XOR<viewsUpdateWithoutArticlesInput, viewsUncheckedUpdateWithoutArticlesInput>
  }

  export type viewsUpdateManyWithWhereWithoutArticlesInput = {
    where: viewsScalarWhereInput
    data: XOR<viewsUpdateManyMutationInput, viewsUncheckedUpdateManyWithoutArticlesInput>
  }

  export type viewsScalarWhereInput = {
    AND?: viewsScalarWhereInput | viewsScalarWhereInput[]
    OR?: viewsScalarWhereInput[]
    NOT?: viewsScalarWhereInput | viewsScalarWhereInput[]
    id?: BigIntFilter<"views"> | bigint | number
    user_id?: UuidNullableFilter<"views"> | string | null
    article_id?: UuidNullableFilter<"views"> | string | null
    viewed_at?: DateTimeNullableFilter<"views"> | Date | string | null
  }

  export type article_entitiesCreateWithoutEntitiesInput = {
    articles: articlesCreateNestedOneWithoutArticle_entitiesInput
  }

  export type article_entitiesUncheckedCreateWithoutEntitiesInput = {
    article_id: string
  }

  export type article_entitiesCreateOrConnectWithoutEntitiesInput = {
    where: article_entitiesWhereUniqueInput
    create: XOR<article_entitiesCreateWithoutEntitiesInput, article_entitiesUncheckedCreateWithoutEntitiesInput>
  }

  export type article_entitiesCreateManyEntitiesInputEnvelope = {
    data: article_entitiesCreateManyEntitiesInput | article_entitiesCreateManyEntitiesInput[]
    skipDuplicates?: boolean
  }

  export type article_entitiesUpsertWithWhereUniqueWithoutEntitiesInput = {
    where: article_entitiesWhereUniqueInput
    update: XOR<article_entitiesUpdateWithoutEntitiesInput, article_entitiesUncheckedUpdateWithoutEntitiesInput>
    create: XOR<article_entitiesCreateWithoutEntitiesInput, article_entitiesUncheckedCreateWithoutEntitiesInput>
  }

  export type article_entitiesUpdateWithWhereUniqueWithoutEntitiesInput = {
    where: article_entitiesWhereUniqueInput
    data: XOR<article_entitiesUpdateWithoutEntitiesInput, article_entitiesUncheckedUpdateWithoutEntitiesInput>
  }

  export type article_entitiesUpdateManyWithWhereWithoutEntitiesInput = {
    where: article_entitiesScalarWhereInput
    data: XOR<article_entitiesUpdateManyMutationInput, article_entitiesUncheckedUpdateManyWithoutEntitiesInput>
  }

  export type bookmark_foldersCreateWithoutUsersInput = {
    id?: bigint | number
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
    bookmarks?: bookmarksCreateNestedManyWithoutBookmark_foldersInput
  }

  export type bookmark_foldersUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutBookmark_foldersInput
  }

  export type bookmark_foldersCreateOrConnectWithoutUsersInput = {
    where: bookmark_foldersWhereUniqueInput
    create: XOR<bookmark_foldersCreateWithoutUsersInput, bookmark_foldersUncheckedCreateWithoutUsersInput>
  }

  export type bookmark_foldersCreateManyUsersInputEnvelope = {
    data: bookmark_foldersCreateManyUsersInput | bookmark_foldersCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type bookmarksCreateWithoutUsersInput = {
    id?: bigint | number
    bookmarked_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutBookmarksInput
    bookmark_folders?: bookmark_foldersCreateNestedOneWithoutBookmarksInput
  }

  export type bookmarksUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    article_id?: string | null
    folder_id?: bigint | number | null
    bookmarked_at?: Date | string | null
  }

  export type bookmarksCreateOrConnectWithoutUsersInput = {
    where: bookmarksWhereUniqueInput
    create: XOR<bookmarksCreateWithoutUsersInput, bookmarksUncheckedCreateWithoutUsersInput>
  }

  export type bookmarksCreateManyUsersInputEnvelope = {
    data: bookmarksCreateManyUsersInput | bookmarksCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type likesCreateWithoutUsersInput = {
    id?: bigint | number
    liked_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutLikesInput
  }

  export type likesUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    article_id?: string | null
    liked_at?: Date | string | null
  }

  export type likesCreateOrConnectWithoutUsersInput = {
    where: likesWhereUniqueInput
    create: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput>
  }

  export type likesCreateManyUsersInputEnvelope = {
    data: likesCreateManyUsersInput | likesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type public_sessionsCreateWithoutUsersInput = {
    token?: string | null
    expires?: Date | string | null
  }

  export type public_sessionsUncheckedCreateWithoutUsersInput = {
    token?: string | null
    expires?: Date | string | null
  }

  export type public_sessionsCreateOrConnectWithoutUsersInput = {
    where: public_sessionsWhereUniqueInput
    create: XOR<public_sessionsCreateWithoutUsersInput, public_sessionsUncheckedCreateWithoutUsersInput>
  }

  export type usersCreateWithoutUsersInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutUsersInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutUsersInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput>
  }

  export type viewsCreateWithoutUsersInput = {
    id?: bigint | number
    viewed_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutViewsInput
  }

  export type viewsUncheckedCreateWithoutUsersInput = {
    id?: bigint | number
    article_id?: string | null
    viewed_at?: Date | string | null
  }

  export type viewsCreateOrConnectWithoutUsersInput = {
    where: viewsWhereUniqueInput
    create: XOR<viewsCreateWithoutUsersInput, viewsUncheckedCreateWithoutUsersInput>
  }

  export type viewsCreateManyUsersInputEnvelope = {
    data: viewsCreateManyUsersInput | viewsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type bookmark_foldersUpsertWithWhereUniqueWithoutUsersInput = {
    where: bookmark_foldersWhereUniqueInput
    update: XOR<bookmark_foldersUpdateWithoutUsersInput, bookmark_foldersUncheckedUpdateWithoutUsersInput>
    create: XOR<bookmark_foldersCreateWithoutUsersInput, bookmark_foldersUncheckedCreateWithoutUsersInput>
  }

  export type bookmark_foldersUpdateWithWhereUniqueWithoutUsersInput = {
    where: bookmark_foldersWhereUniqueInput
    data: XOR<bookmark_foldersUpdateWithoutUsersInput, bookmark_foldersUncheckedUpdateWithoutUsersInput>
  }

  export type bookmark_foldersUpdateManyWithWhereWithoutUsersInput = {
    where: bookmark_foldersScalarWhereInput
    data: XOR<bookmark_foldersUpdateManyMutationInput, bookmark_foldersUncheckedUpdateManyWithoutUsersInput>
  }

  export type bookmark_foldersScalarWhereInput = {
    AND?: bookmark_foldersScalarWhereInput | bookmark_foldersScalarWhereInput[]
    OR?: bookmark_foldersScalarWhereInput[]
    NOT?: bookmark_foldersScalarWhereInput | bookmark_foldersScalarWhereInput[]
    id?: BigIntFilter<"bookmark_folders"> | bigint | number
    user_id?: UuidNullableFilter<"bookmark_folders"> | string | null
    name?: StringNullableFilter<"bookmark_folders"> | string | null
    is_standard?: BoolNullableFilter<"bookmark_folders"> | boolean | null
    created_at?: DateTimeNullableFilter<"bookmark_folders"> | Date | string | null
  }

  export type bookmarksUpsertWithWhereUniqueWithoutUsersInput = {
    where: bookmarksWhereUniqueInput
    update: XOR<bookmarksUpdateWithoutUsersInput, bookmarksUncheckedUpdateWithoutUsersInput>
    create: XOR<bookmarksCreateWithoutUsersInput, bookmarksUncheckedCreateWithoutUsersInput>
  }

  export type bookmarksUpdateWithWhereUniqueWithoutUsersInput = {
    where: bookmarksWhereUniqueInput
    data: XOR<bookmarksUpdateWithoutUsersInput, bookmarksUncheckedUpdateWithoutUsersInput>
  }

  export type bookmarksUpdateManyWithWhereWithoutUsersInput = {
    where: bookmarksScalarWhereInput
    data: XOR<bookmarksUpdateManyMutationInput, bookmarksUncheckedUpdateManyWithoutUsersInput>
  }

  export type likesUpsertWithWhereUniqueWithoutUsersInput = {
    where: likesWhereUniqueInput
    update: XOR<likesUpdateWithoutUsersInput, likesUncheckedUpdateWithoutUsersInput>
    create: XOR<likesCreateWithoutUsersInput, likesUncheckedCreateWithoutUsersInput>
  }

  export type likesUpdateWithWhereUniqueWithoutUsersInput = {
    where: likesWhereUniqueInput
    data: XOR<likesUpdateWithoutUsersInput, likesUncheckedUpdateWithoutUsersInput>
  }

  export type likesUpdateManyWithWhereWithoutUsersInput = {
    where: likesScalarWhereInput
    data: XOR<likesUpdateManyMutationInput, likesUncheckedUpdateManyWithoutUsersInput>
  }

  export type public_sessionsUpsertWithoutUsersInput = {
    update: XOR<public_sessionsUpdateWithoutUsersInput, public_sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<public_sessionsCreateWithoutUsersInput, public_sessionsUncheckedCreateWithoutUsersInput>
    where?: public_sessionsWhereInput
  }

  export type public_sessionsUpdateToOneWithWhereWithoutUsersInput = {
    where?: public_sessionsWhereInput
    data: XOR<public_sessionsUpdateWithoutUsersInput, public_sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type public_sessionsUpdateWithoutUsersInput = {
    token?: NullableStringFieldUpdateOperationsInput | string | null
    expires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type public_sessionsUncheckedUpdateWithoutUsersInput = {
    token?: NullableStringFieldUpdateOperationsInput | string | null
    expires?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type usersUpsertWithoutUsersInput = {
    update: XOR<usersUpdateWithoutUsersInput, usersUncheckedUpdateWithoutUsersInput>
    create: XOR<usersCreateWithoutUsersInput, usersUncheckedCreateWithoutUsersInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutUsersInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutUsersInput, usersUncheckedUpdateWithoutUsersInput>
  }

  export type usersUpdateWithoutUsersInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutUsersInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type viewsUpsertWithWhereUniqueWithoutUsersInput = {
    where: viewsWhereUniqueInput
    update: XOR<viewsUpdateWithoutUsersInput, viewsUncheckedUpdateWithoutUsersInput>
    create: XOR<viewsCreateWithoutUsersInput, viewsUncheckedCreateWithoutUsersInput>
  }

  export type viewsUpdateWithWhereUniqueWithoutUsersInput = {
    where: viewsWhereUniqueInput
    data: XOR<viewsUpdateWithoutUsersInput, viewsUncheckedUpdateWithoutUsersInput>
  }

  export type viewsUpdateManyWithWhereWithoutUsersInput = {
    where: viewsScalarWhereInput
    data: XOR<viewsUpdateManyMutationInput, viewsUncheckedUpdateManyWithoutUsersInput>
  }

  export type articlesCreateWithoutArticle_tagsInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsCreateNestedManyWithoutArticlesInput
    likes?: likesCreateNestedManyWithoutArticlesInput
    views?: viewsCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateWithoutArticle_tagsInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsUncheckedCreateNestedManyWithoutArticlesInput
    likes?: likesUncheckedCreateNestedManyWithoutArticlesInput
    views?: viewsUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesCreateOrConnectWithoutArticle_tagsInput = {
    where: articlesWhereUniqueInput
    create: XOR<articlesCreateWithoutArticle_tagsInput, articlesUncheckedCreateWithoutArticle_tagsInput>
  }

  export type tagsCreateWithoutArticle_tagsInput = {
    id?: bigint | number
    name?: string | null
  }

  export type tagsUncheckedCreateWithoutArticle_tagsInput = {
    id?: bigint | number
    name?: string | null
  }

  export type tagsCreateOrConnectWithoutArticle_tagsInput = {
    where: tagsWhereUniqueInput
    create: XOR<tagsCreateWithoutArticle_tagsInput, tagsUncheckedCreateWithoutArticle_tagsInput>
  }

  export type articlesUpsertWithoutArticle_tagsInput = {
    update: XOR<articlesUpdateWithoutArticle_tagsInput, articlesUncheckedUpdateWithoutArticle_tagsInput>
    create: XOR<articlesCreateWithoutArticle_tagsInput, articlesUncheckedCreateWithoutArticle_tagsInput>
    where?: articlesWhereInput
  }

  export type articlesUpdateToOneWithWhereWithoutArticle_tagsInput = {
    where?: articlesWhereInput
    data: XOR<articlesUpdateWithoutArticle_tagsInput, articlesUncheckedUpdateWithoutArticle_tagsInput>
  }

  export type articlesUpdateWithoutArticle_tagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUpdateManyWithoutArticlesNestedInput
    likes?: likesUpdateManyWithoutArticlesNestedInput
    views?: viewsUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateWithoutArticle_tagsInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput
    likes?: likesUncheckedUpdateManyWithoutArticlesNestedInput
    views?: viewsUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type tagsUpsertWithoutArticle_tagsInput = {
    update: XOR<tagsUpdateWithoutArticle_tagsInput, tagsUncheckedUpdateWithoutArticle_tagsInput>
    create: XOR<tagsCreateWithoutArticle_tagsInput, tagsUncheckedCreateWithoutArticle_tagsInput>
    where?: tagsWhereInput
  }

  export type tagsUpdateToOneWithWhereWithoutArticle_tagsInput = {
    where?: tagsWhereInput
    data: XOR<tagsUpdateWithoutArticle_tagsInput, tagsUncheckedUpdateWithoutArticle_tagsInput>
  }

  export type tagsUpdateWithoutArticle_tagsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type tagsUncheckedUpdateWithoutArticle_tagsInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type public_usersCreateWithoutBookmark_foldersInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmarks?: bookmarksCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsCreateNestedOneWithoutUsersInput
    users: usersCreateNestedOneWithoutUsersInput
    views?: viewsCreateNestedManyWithoutUsersInput
  }

  export type public_usersUncheckedCreateWithoutBookmark_foldersInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsUncheckedCreateNestedOneWithoutUsersInput
    views?: viewsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type public_usersCreateOrConnectWithoutBookmark_foldersInput = {
    where: public_usersWhereUniqueInput
    create: XOR<public_usersCreateWithoutBookmark_foldersInput, public_usersUncheckedCreateWithoutBookmark_foldersInput>
  }

  export type bookmarksCreateWithoutBookmark_foldersInput = {
    id?: bigint | number
    bookmarked_at?: Date | string | null
    articles?: articlesCreateNestedOneWithoutBookmarksInput
    users?: public_usersCreateNestedOneWithoutBookmarksInput
  }

  export type bookmarksUncheckedCreateWithoutBookmark_foldersInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    bookmarked_at?: Date | string | null
  }

  export type bookmarksCreateOrConnectWithoutBookmark_foldersInput = {
    where: bookmarksWhereUniqueInput
    create: XOR<bookmarksCreateWithoutBookmark_foldersInput, bookmarksUncheckedCreateWithoutBookmark_foldersInput>
  }

  export type bookmarksCreateManyBookmark_foldersInputEnvelope = {
    data: bookmarksCreateManyBookmark_foldersInput | bookmarksCreateManyBookmark_foldersInput[]
    skipDuplicates?: boolean
  }

  export type public_usersUpsertWithoutBookmark_foldersInput = {
    update: XOR<public_usersUpdateWithoutBookmark_foldersInput, public_usersUncheckedUpdateWithoutBookmark_foldersInput>
    create: XOR<public_usersCreateWithoutBookmark_foldersInput, public_usersUncheckedCreateWithoutBookmark_foldersInput>
    where?: public_usersWhereInput
  }

  export type public_usersUpdateToOneWithWhereWithoutBookmark_foldersInput = {
    where?: public_usersWhereInput
    data: XOR<public_usersUpdateWithoutBookmark_foldersInput, public_usersUncheckedUpdateWithoutBookmark_foldersInput>
  }

  export type public_usersUpdateWithoutBookmark_foldersInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmarks?: bookmarksUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneRequiredWithoutUsersNestedInput
    views?: viewsUpdateManyWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateWithoutBookmark_foldersInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmarks?: bookmarksUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUncheckedUpdateOneWithoutUsersNestedInput
    views?: viewsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type bookmarksUpsertWithWhereUniqueWithoutBookmark_foldersInput = {
    where: bookmarksWhereUniqueInput
    update: XOR<bookmarksUpdateWithoutBookmark_foldersInput, bookmarksUncheckedUpdateWithoutBookmark_foldersInput>
    create: XOR<bookmarksCreateWithoutBookmark_foldersInput, bookmarksUncheckedCreateWithoutBookmark_foldersInput>
  }

  export type bookmarksUpdateWithWhereUniqueWithoutBookmark_foldersInput = {
    where: bookmarksWhereUniqueInput
    data: XOR<bookmarksUpdateWithoutBookmark_foldersInput, bookmarksUncheckedUpdateWithoutBookmark_foldersInput>
  }

  export type bookmarksUpdateManyWithWhereWithoutBookmark_foldersInput = {
    where: bookmarksScalarWhereInput
    data: XOR<bookmarksUpdateManyMutationInput, bookmarksUncheckedUpdateManyWithoutBookmark_foldersInput>
  }

  export type articlesCreateWithoutBookmarksInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsCreateNestedManyWithoutArticlesInput
    likes?: likesCreateNestedManyWithoutArticlesInput
    views?: viewsCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateWithoutBookmarksInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsUncheckedCreateNestedManyWithoutArticlesInput
    likes?: likesUncheckedCreateNestedManyWithoutArticlesInput
    views?: viewsUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesCreateOrConnectWithoutBookmarksInput = {
    where: articlesWhereUniqueInput
    create: XOR<articlesCreateWithoutBookmarksInput, articlesUncheckedCreateWithoutBookmarksInput>
  }

  export type bookmark_foldersCreateWithoutBookmarksInput = {
    id?: bigint | number
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
    users?: public_usersCreateNestedOneWithoutBookmark_foldersInput
  }

  export type bookmark_foldersUncheckedCreateWithoutBookmarksInput = {
    id?: bigint | number
    user_id?: string | null
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
  }

  export type bookmark_foldersCreateOrConnectWithoutBookmarksInput = {
    where: bookmark_foldersWhereUniqueInput
    create: XOR<bookmark_foldersCreateWithoutBookmarksInput, bookmark_foldersUncheckedCreateWithoutBookmarksInput>
  }

  export type public_usersCreateWithoutBookmarksInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsCreateNestedOneWithoutUsersInput
    users: usersCreateNestedOneWithoutUsersInput
    views?: viewsCreateNestedManyWithoutUsersInput
  }

  export type public_usersUncheckedCreateWithoutBookmarksInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsUncheckedCreateNestedOneWithoutUsersInput
    views?: viewsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type public_usersCreateOrConnectWithoutBookmarksInput = {
    where: public_usersWhereUniqueInput
    create: XOR<public_usersCreateWithoutBookmarksInput, public_usersUncheckedCreateWithoutBookmarksInput>
  }

  export type articlesUpsertWithoutBookmarksInput = {
    update: XOR<articlesUpdateWithoutBookmarksInput, articlesUncheckedUpdateWithoutBookmarksInput>
    create: XOR<articlesCreateWithoutBookmarksInput, articlesUncheckedCreateWithoutBookmarksInput>
    where?: articlesWhereInput
  }

  export type articlesUpdateToOneWithWhereWithoutBookmarksInput = {
    where?: articlesWhereInput
    data: XOR<articlesUpdateWithoutBookmarksInput, articlesUncheckedUpdateWithoutBookmarksInput>
  }

  export type articlesUpdateWithoutBookmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUpdateManyWithoutArticlesNestedInput
    likes?: likesUpdateManyWithoutArticlesNestedInput
    views?: viewsUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateWithoutBookmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUncheckedUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput
    likes?: likesUncheckedUpdateManyWithoutArticlesNestedInput
    views?: viewsUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type bookmark_foldersUpsertWithoutBookmarksInput = {
    update: XOR<bookmark_foldersUpdateWithoutBookmarksInput, bookmark_foldersUncheckedUpdateWithoutBookmarksInput>
    create: XOR<bookmark_foldersCreateWithoutBookmarksInput, bookmark_foldersUncheckedCreateWithoutBookmarksInput>
    where?: bookmark_foldersWhereInput
  }

  export type bookmark_foldersUpdateToOneWithWhereWithoutBookmarksInput = {
    where?: bookmark_foldersWhereInput
    data: XOR<bookmark_foldersUpdateWithoutBookmarksInput, bookmark_foldersUncheckedUpdateWithoutBookmarksInput>
  }

  export type bookmark_foldersUpdateWithoutBookmarksInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: public_usersUpdateOneWithoutBookmark_foldersNestedInput
  }

  export type bookmark_foldersUncheckedUpdateWithoutBookmarksInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type public_usersUpsertWithoutBookmarksInput = {
    update: XOR<public_usersUpdateWithoutBookmarksInput, public_usersUncheckedUpdateWithoutBookmarksInput>
    create: XOR<public_usersCreateWithoutBookmarksInput, public_usersUncheckedCreateWithoutBookmarksInput>
    where?: public_usersWhereInput
  }

  export type public_usersUpdateToOneWithWhereWithoutBookmarksInput = {
    where?: public_usersWhereInput
    data: XOR<public_usersUpdateWithoutBookmarksInput, public_usersUncheckedUpdateWithoutBookmarksInput>
  }

  export type public_usersUpdateWithoutBookmarksInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneRequiredWithoutUsersNestedInput
    views?: viewsUpdateManyWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateWithoutBookmarksInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUncheckedUpdateOneWithoutUsersNestedInput
    views?: viewsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type articlesCreateWithoutGeo_eventsInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksCreateNestedManyWithoutArticlesInput
    likes?: likesCreateNestedManyWithoutArticlesInput
    views?: viewsCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateWithoutGeo_eventsInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutArticlesInput
    likes?: likesUncheckedCreateNestedManyWithoutArticlesInput
    views?: viewsUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesCreateOrConnectWithoutGeo_eventsInput = {
    where: articlesWhereUniqueInput
    create: XOR<articlesCreateWithoutGeo_eventsInput, articlesUncheckedCreateWithoutGeo_eventsInput>
  }

  export type articlesUpsertWithoutGeo_eventsInput = {
    update: XOR<articlesUpdateWithoutGeo_eventsInput, articlesUncheckedUpdateWithoutGeo_eventsInput>
    create: XOR<articlesCreateWithoutGeo_eventsInput, articlesUncheckedCreateWithoutGeo_eventsInput>
    where?: articlesWhereInput
  }

  export type articlesUpdateToOneWithWhereWithoutGeo_eventsInput = {
    where?: articlesWhereInput
    data: XOR<articlesUpdateWithoutGeo_eventsInput, articlesUncheckedUpdateWithoutGeo_eventsInput>
  }

  export type articlesUpdateWithoutGeo_eventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUpdateManyWithoutArticlesNestedInput
    likes?: likesUpdateManyWithoutArticlesNestedInput
    views?: viewsUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateWithoutGeo_eventsInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUncheckedUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutArticlesNestedInput
    likes?: likesUncheckedUpdateManyWithoutArticlesNestedInput
    views?: viewsUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type articlesCreateWithoutLikesInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsCreateNestedManyWithoutArticlesInput
    views?: viewsCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateWithoutLikesInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsUncheckedCreateNestedManyWithoutArticlesInput
    views?: viewsUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesCreateOrConnectWithoutLikesInput = {
    where: articlesWhereUniqueInput
    create: XOR<articlesCreateWithoutLikesInput, articlesUncheckedCreateWithoutLikesInput>
  }

  export type public_usersCreateWithoutLikesInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsCreateNestedOneWithoutUsersInput
    users: usersCreateNestedOneWithoutUsersInput
    views?: viewsCreateNestedManyWithoutUsersInput
  }

  export type public_usersUncheckedCreateWithoutLikesInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsUncheckedCreateNestedOneWithoutUsersInput
    views?: viewsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type public_usersCreateOrConnectWithoutLikesInput = {
    where: public_usersWhereUniqueInput
    create: XOR<public_usersCreateWithoutLikesInput, public_usersUncheckedCreateWithoutLikesInput>
  }

  export type articlesUpsertWithoutLikesInput = {
    update: XOR<articlesUpdateWithoutLikesInput, articlesUncheckedUpdateWithoutLikesInput>
    create: XOR<articlesCreateWithoutLikesInput, articlesUncheckedCreateWithoutLikesInput>
    where?: articlesWhereInput
  }

  export type articlesUpdateToOneWithWhereWithoutLikesInput = {
    where?: articlesWhereInput
    data: XOR<articlesUpdateWithoutLikesInput, articlesUncheckedUpdateWithoutLikesInput>
  }

  export type articlesUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUpdateManyWithoutArticlesNestedInput
    views?: viewsUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUncheckedUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput
    views?: viewsUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type public_usersUpsertWithoutLikesInput = {
    update: XOR<public_usersUpdateWithoutLikesInput, public_usersUncheckedUpdateWithoutLikesInput>
    create: XOR<public_usersCreateWithoutLikesInput, public_usersUncheckedCreateWithoutLikesInput>
    where?: public_usersWhereInput
  }

  export type public_usersUpdateToOneWithWhereWithoutLikesInput = {
    where?: public_usersWhereInput
    data: XOR<public_usersUpdateWithoutLikesInput, public_usersUncheckedUpdateWithoutLikesInput>
  }

  export type public_usersUpdateWithoutLikesInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneRequiredWithoutUsersNestedInput
    views?: viewsUpdateManyWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateWithoutLikesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUncheckedUpdateOneWithoutUsersNestedInput
    views?: viewsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type article_tagsCreateWithoutTagsInput = {
    articles: articlesCreateNestedOneWithoutArticle_tagsInput
  }

  export type article_tagsUncheckedCreateWithoutTagsInput = {
    article_id: string
  }

  export type article_tagsCreateOrConnectWithoutTagsInput = {
    where: article_tagsWhereUniqueInput
    create: XOR<article_tagsCreateWithoutTagsInput, article_tagsUncheckedCreateWithoutTagsInput>
  }

  export type article_tagsCreateManyTagsInputEnvelope = {
    data: article_tagsCreateManyTagsInput | article_tagsCreateManyTagsInput[]
    skipDuplicates?: boolean
  }

  export type article_tagsUpsertWithWhereUniqueWithoutTagsInput = {
    where: article_tagsWhereUniqueInput
    update: XOR<article_tagsUpdateWithoutTagsInput, article_tagsUncheckedUpdateWithoutTagsInput>
    create: XOR<article_tagsCreateWithoutTagsInput, article_tagsUncheckedCreateWithoutTagsInput>
  }

  export type article_tagsUpdateWithWhereUniqueWithoutTagsInput = {
    where: article_tagsWhereUniqueInput
    data: XOR<article_tagsUpdateWithoutTagsInput, article_tagsUncheckedUpdateWithoutTagsInput>
  }

  export type article_tagsUpdateManyWithWhereWithoutTagsInput = {
    where: article_tagsScalarWhereInput
    data: XOR<article_tagsUpdateManyMutationInput, article_tagsUncheckedUpdateManyWithoutTagsInput>
  }

  export type articlesCreateWithoutViewsInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsCreateNestedManyWithoutArticlesInput
    likes?: likesCreateNestedManyWithoutArticlesInput
  }

  export type articlesUncheckedCreateWithoutViewsInput = {
    id?: string
    source?: string | null
    title?: string | null
    url?: string | null
    image_url?: string | null
    published_at?: Date | string | null
    category?: string | null
    author?: string | null
    content?: string | null
    summary?: string | null
    lat?: number | null
    lng?: number | null
    location_name?: string | null
    sentiment?: $Enums.sentiment_type | null
    significance?: string | null
    created_at?: Date | string | null
    future_implications?: string | null
    article_entities?: article_entitiesUncheckedCreateNestedManyWithoutArticlesInput
    article_tags?: article_tagsUncheckedCreateNestedManyWithoutArticlesInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutArticlesInput
    geo_events?: geo_eventsUncheckedCreateNestedManyWithoutArticlesInput
    likes?: likesUncheckedCreateNestedManyWithoutArticlesInput
  }

  export type articlesCreateOrConnectWithoutViewsInput = {
    where: articlesWhereUniqueInput
    create: XOR<articlesCreateWithoutViewsInput, articlesUncheckedCreateWithoutViewsInput>
  }

  export type public_usersCreateWithoutViewsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsCreateNestedOneWithoutUsersInput
    users: usersCreateNestedOneWithoutUsersInput
  }

  export type public_usersUncheckedCreateWithoutViewsInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsUncheckedCreateNestedOneWithoutUsersInput
  }

  export type public_usersCreateOrConnectWithoutViewsInput = {
    where: public_usersWhereUniqueInput
    create: XOR<public_usersCreateWithoutViewsInput, public_usersUncheckedCreateWithoutViewsInput>
  }

  export type articlesUpsertWithoutViewsInput = {
    update: XOR<articlesUpdateWithoutViewsInput, articlesUncheckedUpdateWithoutViewsInput>
    create: XOR<articlesCreateWithoutViewsInput, articlesUncheckedCreateWithoutViewsInput>
    where?: articlesWhereInput
  }

  export type articlesUpdateToOneWithWhereWithoutViewsInput = {
    where?: articlesWhereInput
    data: XOR<articlesUpdateWithoutViewsInput, articlesUncheckedUpdateWithoutViewsInput>
  }

  export type articlesUpdateWithoutViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUpdateManyWithoutArticlesNestedInput
    likes?: likesUpdateManyWithoutArticlesNestedInput
  }

  export type articlesUncheckedUpdateWithoutViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    source?: NullableStringFieldUpdateOperationsInput | string | null
    title?: NullableStringFieldUpdateOperationsInput | string | null
    url?: NullableStringFieldUpdateOperationsInput | string | null
    image_url?: NullableStringFieldUpdateOperationsInput | string | null
    published_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    category?: NullableStringFieldUpdateOperationsInput | string | null
    author?: NullableStringFieldUpdateOperationsInput | string | null
    content?: NullableStringFieldUpdateOperationsInput | string | null
    summary?: NullableStringFieldUpdateOperationsInput | string | null
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    location_name?: NullableStringFieldUpdateOperationsInput | string | null
    sentiment?: NullableEnumsentiment_typeFieldUpdateOperationsInput | $Enums.sentiment_type | null
    significance?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    future_implications?: NullableStringFieldUpdateOperationsInput | string | null
    article_entities?: article_entitiesUncheckedUpdateManyWithoutArticlesNestedInput
    article_tags?: article_tagsUncheckedUpdateManyWithoutArticlesNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutArticlesNestedInput
    geo_events?: geo_eventsUncheckedUpdateManyWithoutArticlesNestedInput
    likes?: likesUncheckedUpdateManyWithoutArticlesNestedInput
  }

  export type public_usersUpsertWithoutViewsInput = {
    update: XOR<public_usersUpdateWithoutViewsInput, public_usersUncheckedUpdateWithoutViewsInput>
    create: XOR<public_usersCreateWithoutViewsInput, public_usersUncheckedCreateWithoutViewsInput>
    where?: public_usersWhereInput
  }

  export type public_usersUpdateToOneWithWhereWithoutViewsInput = {
    where?: public_usersWhereInput
    data: XOR<public_usersUpdateWithoutViewsInput, public_usersUncheckedUpdateWithoutViewsInput>
  }

  export type public_usersUpdateWithoutViewsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUpdateOneWithoutUsersNestedInput
    users?: usersUpdateOneRequiredWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateWithoutViewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type saml_relay_statesCreateWithoutFlow_stateInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    sso_providers: sso_providersCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateWithoutFlow_stateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesCreateOrConnectWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    create: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput>
  }

  export type saml_relay_statesCreateManyFlow_stateInputEnvelope = {
    data: saml_relay_statesCreateManyFlow_stateInput | saml_relay_statesCreateManyFlow_stateInput[]
    skipDuplicates?: boolean
  }

  export type saml_relay_statesUpsertWithWhereUniqueWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    update: XOR<saml_relay_statesUpdateWithoutFlow_stateInput, saml_relay_statesUncheckedUpdateWithoutFlow_stateInput>
    create: XOR<saml_relay_statesCreateWithoutFlow_stateInput, saml_relay_statesUncheckedCreateWithoutFlow_stateInput>
  }

  export type saml_relay_statesUpdateWithWhereUniqueWithoutFlow_stateInput = {
    where: saml_relay_statesWhereUniqueInput
    data: XOR<saml_relay_statesUpdateWithoutFlow_stateInput, saml_relay_statesUncheckedUpdateWithoutFlow_stateInput>
  }

  export type saml_relay_statesUpdateManyWithWhereWithoutFlow_stateInput = {
    where: saml_relay_statesScalarWhereInput
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyWithoutFlow_stateInput>
  }

  export type saml_relay_statesScalarWhereInput = {
    AND?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
    OR?: saml_relay_statesScalarWhereInput[]
    NOT?: saml_relay_statesScalarWhereInput | saml_relay_statesScalarWhereInput[]
    id?: UuidFilter<"saml_relay_states"> | string
    sso_provider_id?: UuidFilter<"saml_relay_states"> | string
    request_id?: StringFilter<"saml_relay_states"> | string
    for_email?: StringNullableFilter<"saml_relay_states"> | string | null
    redirect_to?: StringNullableFilter<"saml_relay_states"> | string | null
    created_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_relay_states"> | Date | string | null
    flow_state_id?: UuidNullableFilter<"saml_relay_states"> | string | null
  }

  export type usersCreateWithoutIdentitiesInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    users?: public_usersCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutIdentitiesInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    users?: public_usersUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutIdentitiesInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
  }

  export type usersUpsertWithoutIdentitiesInput = {
    update: XOR<usersUpdateWithoutIdentitiesInput, usersUncheckedUpdateWithoutIdentitiesInput>
    create: XOR<usersCreateWithoutIdentitiesInput, usersUncheckedCreateWithoutIdentitiesInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutIdentitiesInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutIdentitiesInput, usersUncheckedUpdateWithoutIdentitiesInput>
  }

  export type usersUpdateWithoutIdentitiesInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    users?: public_usersUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutIdentitiesInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    users?: public_usersUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type sessionsCreateWithoutMfa_amr_claimsInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutMfa_amr_claimsInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutMfa_amr_claimsInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
  }

  export type sessionsUpsertWithoutMfa_amr_claimsInput = {
    update: XOR<sessionsUpdateWithoutMfa_amr_claimsInput, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
    create: XOR<sessionsCreateWithoutMfa_amr_claimsInput, sessionsUncheckedCreateWithoutMfa_amr_claimsInput>
    where?: sessionsWhereInput
  }

  export type sessionsUpdateToOneWithWhereWithoutMfa_amr_claimsInput = {
    where?: sessionsWhereInput
    data: XOR<sessionsUpdateWithoutMfa_amr_claimsInput, sessionsUncheckedUpdateWithoutMfa_amr_claimsInput>
  }

  export type sessionsUpdateWithoutMfa_amr_claimsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutMfa_amr_claimsInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type mfa_factorsCreateWithoutMfa_challengesInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    users: usersCreateNestedOneWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateWithoutMfa_challengesInput = {
    id: string
    user_id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
  }

  export type mfa_factorsCreateOrConnectWithoutMfa_challengesInput = {
    where: mfa_factorsWhereUniqueInput
    create: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
  }

  export type mfa_factorsUpsertWithoutMfa_challengesInput = {
    update: XOR<mfa_factorsUpdateWithoutMfa_challengesInput, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
    create: XOR<mfa_factorsCreateWithoutMfa_challengesInput, mfa_factorsUncheckedCreateWithoutMfa_challengesInput>
    where?: mfa_factorsWhereInput
  }

  export type mfa_factorsUpdateToOneWithWhereWithoutMfa_challengesInput = {
    where?: mfa_factorsWhereInput
    data: XOR<mfa_factorsUpdateWithoutMfa_challengesInput, mfa_factorsUncheckedUpdateWithoutMfa_challengesInput>
  }

  export type mfa_factorsUpdateWithoutMfa_challengesInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    users?: usersUpdateOneRequiredWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateWithoutMfa_challengesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type mfa_challengesCreateWithoutMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedCreateWithoutMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesCreateOrConnectWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    create: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesCreateManyMfa_factorsInputEnvelope = {
    data: mfa_challengesCreateManyMfa_factorsInput | mfa_challengesCreateManyMfa_factorsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutMfa_factorsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    users?: public_usersCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutMfa_factorsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    users?: public_usersUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutMfa_factorsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpsertWithWhereUniqueWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    update: XOR<mfa_challengesUpdateWithoutMfa_factorsInput, mfa_challengesUncheckedUpdateWithoutMfa_factorsInput>
    create: XOR<mfa_challengesCreateWithoutMfa_factorsInput, mfa_challengesUncheckedCreateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpdateWithWhereUniqueWithoutMfa_factorsInput = {
    where: mfa_challengesWhereUniqueInput
    data: XOR<mfa_challengesUpdateWithoutMfa_factorsInput, mfa_challengesUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type mfa_challengesUpdateManyWithWhereWithoutMfa_factorsInput = {
    where: mfa_challengesScalarWhereInput
    data: XOR<mfa_challengesUpdateManyMutationInput, mfa_challengesUncheckedUpdateManyWithoutMfa_factorsInput>
  }

  export type mfa_challengesScalarWhereInput = {
    AND?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
    OR?: mfa_challengesScalarWhereInput[]
    NOT?: mfa_challengesScalarWhereInput | mfa_challengesScalarWhereInput[]
    id?: UuidFilter<"mfa_challenges"> | string
    factor_id?: UuidFilter<"mfa_challenges"> | string
    created_at?: DateTimeFilter<"mfa_challenges"> | Date | string
    verified_at?: DateTimeNullableFilter<"mfa_challenges"> | Date | string | null
    ip_address?: StringFilter<"mfa_challenges"> | string
    otp_code?: StringNullableFilter<"mfa_challenges"> | string | null
    web_authn_session_data?: JsonNullableFilter<"mfa_challenges">
  }

  export type usersUpsertWithoutMfa_factorsInput = {
    update: XOR<usersUpdateWithoutMfa_factorsInput, usersUncheckedUpdateWithoutMfa_factorsInput>
    create: XOR<usersCreateWithoutMfa_factorsInput, usersUncheckedCreateWithoutMfa_factorsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutMfa_factorsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutMfa_factorsInput, usersUncheckedUpdateWithoutMfa_factorsInput>
  }

  export type usersUpdateWithoutMfa_factorsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    users?: public_usersUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutMfa_factorsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    users?: public_usersUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type usersCreateWithoutOne_time_tokensInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    sessions?: sessionsCreateNestedManyWithoutUsersInput
    users?: public_usersCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutOne_time_tokensInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    sessions?: sessionsUncheckedCreateNestedManyWithoutUsersInput
    users?: public_usersUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutOne_time_tokensInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
  }

  export type usersUpsertWithoutOne_time_tokensInput = {
    update: XOR<usersUpdateWithoutOne_time_tokensInput, usersUncheckedUpdateWithoutOne_time_tokensInput>
    create: XOR<usersCreateWithoutOne_time_tokensInput, usersUncheckedCreateWithoutOne_time_tokensInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutOne_time_tokensInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutOne_time_tokensInput, usersUncheckedUpdateWithoutOne_time_tokensInput>
  }

  export type usersUpdateWithoutOne_time_tokensInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUpdateManyWithoutUsersNestedInput
    users?: public_usersUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutOne_time_tokensInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: sessionsUncheckedUpdateManyWithoutUsersNestedInput
    users?: public_usersUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type sessionsCreateWithoutRefresh_tokensInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    users: usersCreateNestedOneWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutRefresh_tokensInput = {
    id: string
    user_id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutRefresh_tokensInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
  }

  export type sessionsUpsertWithoutRefresh_tokensInput = {
    update: XOR<sessionsUpdateWithoutRefresh_tokensInput, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
    create: XOR<sessionsCreateWithoutRefresh_tokensInput, sessionsUncheckedCreateWithoutRefresh_tokensInput>
    where?: sessionsWhereInput
  }

  export type sessionsUpdateToOneWithWhereWithoutRefresh_tokensInput = {
    where?: sessionsWhereInput
    data: XOR<sessionsUpdateWithoutRefresh_tokensInput, sessionsUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type sessionsUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    users?: usersUpdateOneRequiredWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sso_providersCreateWithoutSaml_providersInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSaml_providersInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSaml_providersInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
  }

  export type sso_providersUpsertWithoutSaml_providersInput = {
    update: XOR<sso_providersUpdateWithoutSaml_providersInput, sso_providersUncheckedUpdateWithoutSaml_providersInput>
    create: XOR<sso_providersCreateWithoutSaml_providersInput, sso_providersUncheckedCreateWithoutSaml_providersInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSaml_providersInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSaml_providersInput, sso_providersUncheckedUpdateWithoutSaml_providersInput>
  }

  export type sso_providersUpdateWithoutSaml_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSaml_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type flow_stateCreateWithoutSaml_relay_statesInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
  }

  export type flow_stateUncheckedCreateWithoutSaml_relay_statesInput = {
    id: string
    user_id?: string | null
    auth_code: string
    code_challenge_method: $Enums.code_challenge_method
    code_challenge: string
    provider_type: string
    provider_access_token?: string | null
    provider_refresh_token?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    authentication_method: string
    auth_code_issued_at?: Date | string | null
  }

  export type flow_stateCreateOrConnectWithoutSaml_relay_statesInput = {
    where: flow_stateWhereUniqueInput
    create: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
  }

  export type sso_providersCreateWithoutSaml_relay_statesInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSaml_relay_statesInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    sso_domains?: sso_domainsUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSaml_relay_statesInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
  }

  export type flow_stateUpsertWithoutSaml_relay_statesInput = {
    update: XOR<flow_stateUpdateWithoutSaml_relay_statesInput, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
    create: XOR<flow_stateCreateWithoutSaml_relay_statesInput, flow_stateUncheckedCreateWithoutSaml_relay_statesInput>
    where?: flow_stateWhereInput
  }

  export type flow_stateUpdateToOneWithWhereWithoutSaml_relay_statesInput = {
    where?: flow_stateWhereInput
    data: XOR<flow_stateUpdateWithoutSaml_relay_statesInput, flow_stateUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type flow_stateUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type flow_stateUncheckedUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    auth_code?: StringFieldUpdateOperationsInput | string
    code_challenge_method?: Enumcode_challenge_methodFieldUpdateOperationsInput | $Enums.code_challenge_method
    code_challenge?: StringFieldUpdateOperationsInput | string
    provider_type?: StringFieldUpdateOperationsInput | string
    provider_access_token?: NullableStringFieldUpdateOperationsInput | string | null
    provider_refresh_token?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    authentication_method?: StringFieldUpdateOperationsInput | string
    auth_code_issued_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_providersUpsertWithoutSaml_relay_statesInput = {
    update: XOR<sso_providersUpdateWithoutSaml_relay_statesInput, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
    create: XOR<sso_providersCreateWithoutSaml_relay_statesInput, sso_providersUncheckedCreateWithoutSaml_relay_statesInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSaml_relay_statesInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSaml_relay_statesInput, sso_providersUncheckedUpdateWithoutSaml_relay_statesInput>
  }

  export type sso_providersUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSaml_relay_statesInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    sso_domains?: sso_domainsUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type mfa_amr_claimsCreateWithoutSessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsUncheckedCreateWithoutSessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type mfa_amr_claimsCreateOrConnectWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    create: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsCreateManySessionsInputEnvelope = {
    data: mfa_amr_claimsCreateManySessionsInput | mfa_amr_claimsCreateManySessionsInput[]
    skipDuplicates?: boolean
  }

  export type refresh_tokensCreateWithoutSessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type refresh_tokensUncheckedCreateWithoutSessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type refresh_tokensCreateOrConnectWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    create: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput>
  }

  export type refresh_tokensCreateManySessionsInputEnvelope = {
    data: refresh_tokensCreateManySessionsInput | refresh_tokensCreateManySessionsInput[]
    skipDuplicates?: boolean
  }

  export type usersCreateWithoutSessionsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensCreateNestedManyWithoutUsersInput
    users?: public_usersCreateNestedOneWithoutUsersInput
  }

  export type usersUncheckedCreateWithoutSessionsInput = {
    instance_id?: string | null
    id: string
    aud?: string | null
    role?: string | null
    email?: string | null
    encrypted_password?: string | null
    email_confirmed_at?: Date | string | null
    invited_at?: Date | string | null
    confirmation_token?: string | null
    confirmation_sent_at?: Date | string | null
    recovery_token?: string | null
    recovery_sent_at?: Date | string | null
    email_change_token_new?: string | null
    email_change?: string | null
    email_change_sent_at?: Date | string | null
    last_sign_in_at?: Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    phone?: string | null
    phone_confirmed_at?: Date | string | null
    phone_change?: string | null
    phone_change_token?: string | null
    phone_change_sent_at?: Date | string | null
    confirmed_at?: Date | string | null
    email_change_token_current?: string | null
    email_change_confirm_status?: number | null
    banned_until?: Date | string | null
    reauthentication_token?: string | null
    reauthentication_sent_at?: Date | string | null
    is_sso_user?: boolean
    deleted_at?: Date | string | null
    is_anonymous?: boolean
    identities?: identitiesUncheckedCreateNestedManyWithoutUsersInput
    mfa_factors?: mfa_factorsUncheckedCreateNestedManyWithoutUsersInput
    one_time_tokens?: one_time_tokensUncheckedCreateNestedManyWithoutUsersInput
    users?: public_usersUncheckedCreateNestedOneWithoutUsersInput
  }

  export type usersCreateOrConnectWithoutSessionsInput = {
    where: usersWhereUniqueInput
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpsertWithWhereUniqueWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    update: XOR<mfa_amr_claimsUpdateWithoutSessionsInput, mfa_amr_claimsUncheckedUpdateWithoutSessionsInput>
    create: XOR<mfa_amr_claimsCreateWithoutSessionsInput, mfa_amr_claimsUncheckedCreateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpdateWithWhereUniqueWithoutSessionsInput = {
    where: mfa_amr_claimsWhereUniqueInput
    data: XOR<mfa_amr_claimsUpdateWithoutSessionsInput, mfa_amr_claimsUncheckedUpdateWithoutSessionsInput>
  }

  export type mfa_amr_claimsUpdateManyWithWhereWithoutSessionsInput = {
    where: mfa_amr_claimsScalarWhereInput
    data: XOR<mfa_amr_claimsUpdateManyMutationInput, mfa_amr_claimsUncheckedUpdateManyWithoutSessionsInput>
  }

  export type mfa_amr_claimsScalarWhereInput = {
    AND?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
    OR?: mfa_amr_claimsScalarWhereInput[]
    NOT?: mfa_amr_claimsScalarWhereInput | mfa_amr_claimsScalarWhereInput[]
    session_id?: UuidFilter<"mfa_amr_claims"> | string
    created_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    updated_at?: DateTimeFilter<"mfa_amr_claims"> | Date | string
    authentication_method?: StringFilter<"mfa_amr_claims"> | string
    id?: UuidFilter<"mfa_amr_claims"> | string
  }

  export type refresh_tokensUpsertWithWhereUniqueWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    update: XOR<refresh_tokensUpdateWithoutSessionsInput, refresh_tokensUncheckedUpdateWithoutSessionsInput>
    create: XOR<refresh_tokensCreateWithoutSessionsInput, refresh_tokensUncheckedCreateWithoutSessionsInput>
  }

  export type refresh_tokensUpdateWithWhereUniqueWithoutSessionsInput = {
    where: refresh_tokensWhereUniqueInput
    data: XOR<refresh_tokensUpdateWithoutSessionsInput, refresh_tokensUncheckedUpdateWithoutSessionsInput>
  }

  export type refresh_tokensUpdateManyWithWhereWithoutSessionsInput = {
    where: refresh_tokensScalarWhereInput
    data: XOR<refresh_tokensUpdateManyMutationInput, refresh_tokensUncheckedUpdateManyWithoutSessionsInput>
  }

  export type refresh_tokensScalarWhereInput = {
    AND?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    OR?: refresh_tokensScalarWhereInput[]
    NOT?: refresh_tokensScalarWhereInput | refresh_tokensScalarWhereInput[]
    instance_id?: UuidNullableFilter<"refresh_tokens"> | string | null
    id?: BigIntFilter<"refresh_tokens"> | bigint | number
    token?: StringNullableFilter<"refresh_tokens"> | string | null
    user_id?: StringNullableFilter<"refresh_tokens"> | string | null
    revoked?: BoolNullableFilter<"refresh_tokens"> | boolean | null
    created_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"refresh_tokens"> | Date | string | null
    parent?: StringNullableFilter<"refresh_tokens"> | string | null
    session_id?: UuidNullableFilter<"refresh_tokens"> | string | null
  }

  export type usersUpsertWithoutSessionsInput = {
    update: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
    create: XOR<usersCreateWithoutSessionsInput, usersUncheckedCreateWithoutSessionsInput>
    where?: usersWhereInput
  }

  export type usersUpdateToOneWithWhereWithoutSessionsInput = {
    where?: usersWhereInput
    data: XOR<usersUpdateWithoutSessionsInput, usersUncheckedUpdateWithoutSessionsInput>
  }

  export type usersUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUpdateManyWithoutUsersNestedInput
    users?: public_usersUpdateOneWithoutUsersNestedInput
  }

  export type usersUncheckedUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
    aud?: NullableStringFieldUpdateOperationsInput | string | null
    role?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    encrypted_password?: NullableStringFieldUpdateOperationsInput | string | null
    email_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    invited_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmation_token?: NullableStringFieldUpdateOperationsInput | string | null
    confirmation_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    recovery_token?: NullableStringFieldUpdateOperationsInput | string | null
    recovery_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_new?: NullableStringFieldUpdateOperationsInput | string | null
    email_change?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    raw_app_meta_data?: NullableJsonNullValueInput | InputJsonValue
    raw_user_meta_data?: NullableJsonNullValueInput | InputJsonValue
    is_super_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    phone_confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    phone_change?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_token?: NullableStringFieldUpdateOperationsInput | string | null
    phone_change_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    confirmed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email_change_token_current?: NullableStringFieldUpdateOperationsInput | string | null
    email_change_confirm_status?: NullableIntFieldUpdateOperationsInput | number | null
    banned_until?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    reauthentication_token?: NullableStringFieldUpdateOperationsInput | string | null
    reauthentication_sent_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_sso_user?: BoolFieldUpdateOperationsInput | boolean
    deleted_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    is_anonymous?: BoolFieldUpdateOperationsInput | boolean
    identities?: identitiesUncheckedUpdateManyWithoutUsersNestedInput
    mfa_factors?: mfa_factorsUncheckedUpdateManyWithoutUsersNestedInput
    one_time_tokens?: one_time_tokensUncheckedUpdateManyWithoutUsersNestedInput
    users?: public_usersUncheckedUpdateOneWithoutUsersNestedInput
  }

  export type sso_providersCreateWithoutSso_domainsInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersUncheckedCreateWithoutSso_domainsInput = {
    id: string
    resource_id?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    saml_providers?: saml_providersUncheckedCreateNestedManyWithoutSso_providersInput
    saml_relay_states?: saml_relay_statesUncheckedCreateNestedManyWithoutSso_providersInput
  }

  export type sso_providersCreateOrConnectWithoutSso_domainsInput = {
    where: sso_providersWhereUniqueInput
    create: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
  }

  export type sso_providersUpsertWithoutSso_domainsInput = {
    update: XOR<sso_providersUpdateWithoutSso_domainsInput, sso_providersUncheckedUpdateWithoutSso_domainsInput>
    create: XOR<sso_providersCreateWithoutSso_domainsInput, sso_providersUncheckedCreateWithoutSso_domainsInput>
    where?: sso_providersWhereInput
  }

  export type sso_providersUpdateToOneWithWhereWithoutSso_domainsInput = {
    where?: sso_providersWhereInput
    data: XOR<sso_providersUpdateWithoutSso_domainsInput, sso_providersUncheckedUpdateWithoutSso_domainsInput>
  }

  export type sso_providersUpdateWithoutSso_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUpdateManyWithoutSso_providersNestedInput
  }

  export type sso_providersUncheckedUpdateWithoutSso_domainsInput = {
    id?: StringFieldUpdateOperationsInput | string
    resource_id?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saml_providers?: saml_providersUncheckedUpdateManyWithoutSso_providersNestedInput
    saml_relay_states?: saml_relay_statesUncheckedUpdateManyWithoutSso_providersNestedInput
  }

  export type saml_providersCreateWithoutSso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersUncheckedCreateWithoutSso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_providersCreateOrConnectWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    create: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_providersCreateManySso_providersInputEnvelope = {
    data: saml_providersCreateManySso_providersInput | saml_providersCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type saml_relay_statesCreateWithoutSso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state?: flow_stateCreateNestedOneWithoutSaml_relay_statesInput
  }

  export type saml_relay_statesUncheckedCreateWithoutSso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type saml_relay_statesCreateOrConnectWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    create: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_relay_statesCreateManySso_providersInputEnvelope = {
    data: saml_relay_statesCreateManySso_providersInput | saml_relay_statesCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type sso_domainsCreateWithoutSso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsUncheckedCreateWithoutSso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type sso_domainsCreateOrConnectWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    create: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput>
  }

  export type sso_domainsCreateManySso_providersInputEnvelope = {
    data: sso_domainsCreateManySso_providersInput | sso_domainsCreateManySso_providersInput[]
    skipDuplicates?: boolean
  }

  export type saml_providersUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    update: XOR<saml_providersUpdateWithoutSso_providersInput, saml_providersUncheckedUpdateWithoutSso_providersInput>
    create: XOR<saml_providersCreateWithoutSso_providersInput, saml_providersUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_providersUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: saml_providersWhereUniqueInput
    data: XOR<saml_providersUpdateWithoutSso_providersInput, saml_providersUncheckedUpdateWithoutSso_providersInput>
  }

  export type saml_providersUpdateManyWithWhereWithoutSso_providersInput = {
    where: saml_providersScalarWhereInput
    data: XOR<saml_providersUpdateManyMutationInput, saml_providersUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type saml_providersScalarWhereInput = {
    AND?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
    OR?: saml_providersScalarWhereInput[]
    NOT?: saml_providersScalarWhereInput | saml_providersScalarWhereInput[]
    id?: UuidFilter<"saml_providers"> | string
    sso_provider_id?: UuidFilter<"saml_providers"> | string
    entity_id?: StringFilter<"saml_providers"> | string
    metadata_xml?: StringFilter<"saml_providers"> | string
    metadata_url?: StringNullableFilter<"saml_providers"> | string | null
    attribute_mapping?: JsonNullableFilter<"saml_providers">
    created_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"saml_providers"> | Date | string | null
    name_id_format?: StringNullableFilter<"saml_providers"> | string | null
  }

  export type saml_relay_statesUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    update: XOR<saml_relay_statesUpdateWithoutSso_providersInput, saml_relay_statesUncheckedUpdateWithoutSso_providersInput>
    create: XOR<saml_relay_statesCreateWithoutSso_providersInput, saml_relay_statesUncheckedCreateWithoutSso_providersInput>
  }

  export type saml_relay_statesUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: saml_relay_statesWhereUniqueInput
    data: XOR<saml_relay_statesUpdateWithoutSso_providersInput, saml_relay_statesUncheckedUpdateWithoutSso_providersInput>
  }

  export type saml_relay_statesUpdateManyWithWhereWithoutSso_providersInput = {
    where: saml_relay_statesScalarWhereInput
    data: XOR<saml_relay_statesUpdateManyMutationInput, saml_relay_statesUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type sso_domainsUpsertWithWhereUniqueWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    update: XOR<sso_domainsUpdateWithoutSso_providersInput, sso_domainsUncheckedUpdateWithoutSso_providersInput>
    create: XOR<sso_domainsCreateWithoutSso_providersInput, sso_domainsUncheckedCreateWithoutSso_providersInput>
  }

  export type sso_domainsUpdateWithWhereUniqueWithoutSso_providersInput = {
    where: sso_domainsWhereUniqueInput
    data: XOR<sso_domainsUpdateWithoutSso_providersInput, sso_domainsUncheckedUpdateWithoutSso_providersInput>
  }

  export type sso_domainsUpdateManyWithWhereWithoutSso_providersInput = {
    where: sso_domainsScalarWhereInput
    data: XOR<sso_domainsUpdateManyMutationInput, sso_domainsUncheckedUpdateManyWithoutSso_providersInput>
  }

  export type sso_domainsScalarWhereInput = {
    AND?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
    OR?: sso_domainsScalarWhereInput[]
    NOT?: sso_domainsScalarWhereInput | sso_domainsScalarWhereInput[]
    id?: UuidFilter<"sso_domains"> | string
    sso_provider_id?: UuidFilter<"sso_domains"> | string
    domain?: StringFilter<"sso_domains"> | string
    created_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sso_domains"> | Date | string | null
  }

  export type identitiesCreateWithoutUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesUncheckedCreateWithoutUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type identitiesCreateOrConnectWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    create: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput>
  }

  export type identitiesCreateManyUsersInputEnvelope = {
    data: identitiesCreateManyUsersInput | identitiesCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type mfa_factorsCreateWithoutUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsUncheckedCreateWithoutUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
    mfa_challenges?: mfa_challengesUncheckedCreateNestedManyWithoutMfa_factorsInput
  }

  export type mfa_factorsCreateOrConnectWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    create: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput>
  }

  export type mfa_factorsCreateManyUsersInputEnvelope = {
    data: mfa_factorsCreateManyUsersInput | mfa_factorsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type one_time_tokensCreateWithoutUsersInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensUncheckedCreateWithoutUsersInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type one_time_tokensCreateOrConnectWithoutUsersInput = {
    where: one_time_tokensWhereUniqueInput
    create: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput>
  }

  export type one_time_tokensCreateManyUsersInputEnvelope = {
    data: one_time_tokensCreateManyUsersInput | one_time_tokensCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type sessionsCreateWithoutUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensCreateNestedManyWithoutSessionsInput
  }

  export type sessionsUncheckedCreateWithoutUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedCreateNestedManyWithoutSessionsInput
    refresh_tokens?: refresh_tokensUncheckedCreateNestedManyWithoutSessionsInput
  }

  export type sessionsCreateOrConnectWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsCreateManyUsersInputEnvelope = {
    data: sessionsCreateManyUsersInput | sessionsCreateManyUsersInput[]
    skipDuplicates?: boolean
  }

  export type public_usersCreateWithoutUsersInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsCreateNestedOneWithoutUsersInput
    views?: viewsCreateNestedManyWithoutUsersInput
  }

  export type public_usersUncheckedCreateWithoutUsersInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    sessions?: public_sessionsUncheckedCreateNestedOneWithoutUsersInput
    views?: viewsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type public_usersCreateOrConnectWithoutUsersInput = {
    where: public_usersWhereUniqueInput
    create: XOR<public_usersCreateWithoutUsersInput, public_usersUncheckedCreateWithoutUsersInput>
  }

  export type identitiesUpsertWithWhereUniqueWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    update: XOR<identitiesUpdateWithoutUsersInput, identitiesUncheckedUpdateWithoutUsersInput>
    create: XOR<identitiesCreateWithoutUsersInput, identitiesUncheckedCreateWithoutUsersInput>
  }

  export type identitiesUpdateWithWhereUniqueWithoutUsersInput = {
    where: identitiesWhereUniqueInput
    data: XOR<identitiesUpdateWithoutUsersInput, identitiesUncheckedUpdateWithoutUsersInput>
  }

  export type identitiesUpdateManyWithWhereWithoutUsersInput = {
    where: identitiesScalarWhereInput
    data: XOR<identitiesUpdateManyMutationInput, identitiesUncheckedUpdateManyWithoutUsersInput>
  }

  export type identitiesScalarWhereInput = {
    AND?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
    OR?: identitiesScalarWhereInput[]
    NOT?: identitiesScalarWhereInput | identitiesScalarWhereInput[]
    provider_id?: StringFilter<"identities"> | string
    user_id?: UuidFilter<"identities"> | string
    identity_data?: JsonFilter<"identities">
    provider?: StringFilter<"identities"> | string
    last_sign_in_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    created_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"identities"> | Date | string | null
    email?: StringNullableFilter<"identities"> | string | null
    id?: UuidFilter<"identities"> | string
  }

  export type mfa_factorsUpsertWithWhereUniqueWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    update: XOR<mfa_factorsUpdateWithoutUsersInput, mfa_factorsUncheckedUpdateWithoutUsersInput>
    create: XOR<mfa_factorsCreateWithoutUsersInput, mfa_factorsUncheckedCreateWithoutUsersInput>
  }

  export type mfa_factorsUpdateWithWhereUniqueWithoutUsersInput = {
    where: mfa_factorsWhereUniqueInput
    data: XOR<mfa_factorsUpdateWithoutUsersInput, mfa_factorsUncheckedUpdateWithoutUsersInput>
  }

  export type mfa_factorsUpdateManyWithWhereWithoutUsersInput = {
    where: mfa_factorsScalarWhereInput
    data: XOR<mfa_factorsUpdateManyMutationInput, mfa_factorsUncheckedUpdateManyWithoutUsersInput>
  }

  export type mfa_factorsScalarWhereInput = {
    AND?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
    OR?: mfa_factorsScalarWhereInput[]
    NOT?: mfa_factorsScalarWhereInput | mfa_factorsScalarWhereInput[]
    id?: UuidFilter<"mfa_factors"> | string
    user_id?: UuidFilter<"mfa_factors"> | string
    friendly_name?: StringNullableFilter<"mfa_factors"> | string | null
    factor_type?: Enumfactor_typeFilter<"mfa_factors"> | $Enums.factor_type
    status?: Enumfactor_statusFilter<"mfa_factors"> | $Enums.factor_status
    created_at?: DateTimeFilter<"mfa_factors"> | Date | string
    updated_at?: DateTimeFilter<"mfa_factors"> | Date | string
    secret?: StringNullableFilter<"mfa_factors"> | string | null
    phone?: StringNullableFilter<"mfa_factors"> | string | null
    last_challenged_at?: DateTimeNullableFilter<"mfa_factors"> | Date | string | null
    web_authn_credential?: JsonNullableFilter<"mfa_factors">
    web_authn_aaguid?: UuidNullableFilter<"mfa_factors"> | string | null
  }

  export type one_time_tokensUpsertWithWhereUniqueWithoutUsersInput = {
    where: one_time_tokensWhereUniqueInput
    update: XOR<one_time_tokensUpdateWithoutUsersInput, one_time_tokensUncheckedUpdateWithoutUsersInput>
    create: XOR<one_time_tokensCreateWithoutUsersInput, one_time_tokensUncheckedCreateWithoutUsersInput>
  }

  export type one_time_tokensUpdateWithWhereUniqueWithoutUsersInput = {
    where: one_time_tokensWhereUniqueInput
    data: XOR<one_time_tokensUpdateWithoutUsersInput, one_time_tokensUncheckedUpdateWithoutUsersInput>
  }

  export type one_time_tokensUpdateManyWithWhereWithoutUsersInput = {
    where: one_time_tokensScalarWhereInput
    data: XOR<one_time_tokensUpdateManyMutationInput, one_time_tokensUncheckedUpdateManyWithoutUsersInput>
  }

  export type one_time_tokensScalarWhereInput = {
    AND?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
    OR?: one_time_tokensScalarWhereInput[]
    NOT?: one_time_tokensScalarWhereInput | one_time_tokensScalarWhereInput[]
    id?: UuidFilter<"one_time_tokens"> | string
    user_id?: UuidFilter<"one_time_tokens"> | string
    token_type?: Enumone_time_token_typeFilter<"one_time_tokens"> | $Enums.one_time_token_type
    token_hash?: StringFilter<"one_time_tokens"> | string
    relates_to?: StringFilter<"one_time_tokens"> | string
    created_at?: DateTimeFilter<"one_time_tokens"> | Date | string
    updated_at?: DateTimeFilter<"one_time_tokens"> | Date | string
  }

  export type sessionsUpsertWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    update: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
    create: XOR<sessionsCreateWithoutUsersInput, sessionsUncheckedCreateWithoutUsersInput>
  }

  export type sessionsUpdateWithWhereUniqueWithoutUsersInput = {
    where: sessionsWhereUniqueInput
    data: XOR<sessionsUpdateWithoutUsersInput, sessionsUncheckedUpdateWithoutUsersInput>
  }

  export type sessionsUpdateManyWithWhereWithoutUsersInput = {
    where: sessionsScalarWhereInput
    data: XOR<sessionsUpdateManyMutationInput, sessionsUncheckedUpdateManyWithoutUsersInput>
  }

  export type sessionsScalarWhereInput = {
    AND?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
    OR?: sessionsScalarWhereInput[]
    NOT?: sessionsScalarWhereInput | sessionsScalarWhereInput[]
    id?: UuidFilter<"sessions"> | string
    user_id?: UuidFilter<"sessions"> | string
    created_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    updated_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    factor_id?: UuidNullableFilter<"sessions"> | string | null
    aal?: Enumaal_levelNullableFilter<"sessions"> | $Enums.aal_level | null
    not_after?: DateTimeNullableFilter<"sessions"> | Date | string | null
    refreshed_at?: DateTimeNullableFilter<"sessions"> | Date | string | null
    user_agent?: StringNullableFilter<"sessions"> | string | null
    ip?: StringNullableFilter<"sessions"> | string | null
    tag?: StringNullableFilter<"sessions"> | string | null
  }

  export type public_usersUpsertWithoutUsersInput = {
    update: XOR<public_usersUpdateWithoutUsersInput, public_usersUncheckedUpdateWithoutUsersInput>
    create: XOR<public_usersCreateWithoutUsersInput, public_usersUncheckedCreateWithoutUsersInput>
    where?: public_usersWhereInput
  }

  export type public_usersUpdateToOneWithWhereWithoutUsersInput = {
    where?: public_usersWhereInput
    data: XOR<public_usersUpdateWithoutUsersInput, public_usersUncheckedUpdateWithoutUsersInput>
  }

  export type public_usersUpdateWithoutUsersInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUpdateOneWithoutUsersNestedInput
    views?: viewsUpdateManyWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateWithoutUsersInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    sessions?: public_sessionsUncheckedUpdateOneWithoutUsersNestedInput
    views?: viewsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type public_usersCreateWithoutSessionsInput = {
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksCreateNestedManyWithoutUsersInput
    likes?: likesCreateNestedManyWithoutUsersInput
    users: usersCreateNestedOneWithoutUsersInput
    views?: viewsCreateNestedManyWithoutUsersInput
  }

  export type public_usersUncheckedCreateWithoutSessionsInput = {
    id: string
    name?: string | null
    email?: string | null
    password?: string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    last_active?: Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedCreateNestedManyWithoutUsersInput
    bookmarks?: bookmarksUncheckedCreateNestedManyWithoutUsersInput
    likes?: likesUncheckedCreateNestedManyWithoutUsersInput
    views?: viewsUncheckedCreateNestedManyWithoutUsersInput
  }

  export type public_usersCreateOrConnectWithoutSessionsInput = {
    where: public_usersWhereUniqueInput
    create: XOR<public_usersCreateWithoutSessionsInput, public_usersUncheckedCreateWithoutSessionsInput>
  }

  export type public_usersUpsertWithoutSessionsInput = {
    update: XOR<public_usersUpdateWithoutSessionsInput, public_usersUncheckedUpdateWithoutSessionsInput>
    create: XOR<public_usersCreateWithoutSessionsInput, public_usersUncheckedCreateWithoutSessionsInput>
    where?: public_usersWhereInput
  }

  export type public_usersUpdateToOneWithWhereWithoutSessionsInput = {
    where?: public_usersWhereInput
    data: XOR<public_usersUpdateWithoutSessionsInput, public_usersUncheckedUpdateWithoutSessionsInput>
  }

  export type public_usersUpdateWithoutSessionsInput = {
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUpdateManyWithoutUsersNestedInput
    likes?: likesUpdateManyWithoutUsersNestedInput
    users?: usersUpdateOneRequiredWithoutUsersNestedInput
    views?: viewsUpdateManyWithoutUsersNestedInput
  }

  export type public_usersUncheckedUpdateWithoutSessionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: NullableStringFieldUpdateOperationsInput | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    password?: NullableStringFieldUpdateOperationsInput | string | null
    preferences?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    last_active?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUncheckedUpdateManyWithoutUsersNestedInput
    bookmarks?: bookmarksUncheckedUpdateManyWithoutUsersNestedInput
    likes?: likesUncheckedUpdateManyWithoutUsersNestedInput
    views?: viewsUncheckedUpdateManyWithoutUsersNestedInput
  }

  export type booksCreateWithoutBook_articlesInput = {
    title: string
    description: string
    cover_image_url?: string | null
    is_public?: boolean
    created_at?: Date | string
    updated_at: Date | string
    id?: string
    user_id: string
  }

  export type booksUncheckedCreateWithoutBook_articlesInput = {
    title: string
    description: string
    cover_image_url?: string | null
    is_public?: boolean
    created_at?: Date | string
    updated_at: Date | string
    id?: string
    user_id: string
  }

  export type booksCreateOrConnectWithoutBook_articlesInput = {
    where: booksWhereUniqueInput
    create: XOR<booksCreateWithoutBook_articlesInput, booksUncheckedCreateWithoutBook_articlesInput>
  }

  export type booksUpsertWithoutBook_articlesInput = {
    update: XOR<booksUpdateWithoutBook_articlesInput, booksUncheckedUpdateWithoutBook_articlesInput>
    create: XOR<booksCreateWithoutBook_articlesInput, booksUncheckedCreateWithoutBook_articlesInput>
    where?: booksWhereInput
  }

  export type booksUpdateToOneWithWhereWithoutBook_articlesInput = {
    where?: booksWhereInput
    data: XOR<booksUpdateWithoutBook_articlesInput, booksUncheckedUpdateWithoutBook_articlesInput>
  }

  export type booksUpdateWithoutBook_articlesInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cover_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type booksUncheckedUpdateWithoutBook_articlesInput = {
    title?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    cover_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    is_public?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
  }

  export type book_articlesCreateWithoutBooksInput = {
    order: number
    added_at?: Date | string
    id?: string
    article_id: string
  }

  export type book_articlesUncheckedCreateWithoutBooksInput = {
    order: number
    added_at?: Date | string
    id?: string
    article_id: string
  }

  export type book_articlesCreateOrConnectWithoutBooksInput = {
    where: book_articlesWhereUniqueInput
    create: XOR<book_articlesCreateWithoutBooksInput, book_articlesUncheckedCreateWithoutBooksInput>
  }

  export type book_articlesCreateManyBooksInputEnvelope = {
    data: book_articlesCreateManyBooksInput | book_articlesCreateManyBooksInput[]
    skipDuplicates?: boolean
  }

  export type book_articlesUpsertWithWhereUniqueWithoutBooksInput = {
    where: book_articlesWhereUniqueInput
    update: XOR<book_articlesUpdateWithoutBooksInput, book_articlesUncheckedUpdateWithoutBooksInput>
    create: XOR<book_articlesCreateWithoutBooksInput, book_articlesUncheckedCreateWithoutBooksInput>
  }

  export type book_articlesUpdateWithWhereUniqueWithoutBooksInput = {
    where: book_articlesWhereUniqueInput
    data: XOR<book_articlesUpdateWithoutBooksInput, book_articlesUncheckedUpdateWithoutBooksInput>
  }

  export type book_articlesUpdateManyWithWhereWithoutBooksInput = {
    where: book_articlesScalarWhereInput
    data: XOR<book_articlesUpdateManyMutationInput, book_articlesUncheckedUpdateManyWithoutBooksInput>
  }

  export type book_articlesScalarWhereInput = {
    AND?: book_articlesScalarWhereInput | book_articlesScalarWhereInput[]
    OR?: book_articlesScalarWhereInput[]
    NOT?: book_articlesScalarWhereInput | book_articlesScalarWhereInput[]
    order?: IntFilter<"book_articles"> | number
    added_at?: DateTimeFilter<"book_articles"> | Date | string
    id?: UuidFilter<"book_articles"> | string
    book_id?: UuidFilter<"book_articles"> | string
    article_id?: UuidFilter<"book_articles"> | string
  }

  export type article_entitiesCreateManyArticlesInput = {
    entity_id: bigint | number
  }

  export type article_tagsCreateManyArticlesInput = {
    tag_id: bigint | number
  }

  export type bookmarksCreateManyArticlesInput = {
    id?: bigint | number
    user_id?: string | null
    folder_id?: bigint | number | null
    bookmarked_at?: Date | string | null
  }

  export type geo_eventsCreateManyArticlesInput = {
    id?: string
    lat?: number | null
    lng?: number | null
    zoom_level?: number | null
    label?: string | null
    created_at?: Date | string | null
  }

  export type likesCreateManyArticlesInput = {
    id?: bigint | number
    user_id?: string | null
    liked_at?: Date | string | null
  }

  export type viewsCreateManyArticlesInput = {
    id?: bigint | number
    user_id?: string | null
    viewed_at?: Date | string | null
  }

  export type article_entitiesUpdateWithoutArticlesInput = {
    entities?: entitiesUpdateOneRequiredWithoutArticle_entitiesNestedInput
  }

  export type article_entitiesUncheckedUpdateWithoutArticlesInput = {
    entity_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type article_entitiesUncheckedUpdateManyWithoutArticlesInput = {
    entity_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type article_tagsUpdateWithoutArticlesInput = {
    tags?: tagsUpdateOneRequiredWithoutArticle_tagsNestedInput
  }

  export type article_tagsUncheckedUpdateWithoutArticlesInput = {
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type article_tagsUncheckedUpdateManyWithoutArticlesInput = {
    tag_id?: BigIntFieldUpdateOperationsInput | bigint | number
  }

  export type bookmarksUpdateWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmark_folders?: bookmark_foldersUpdateOneWithoutBookmarksNestedInput
    users?: public_usersUpdateOneWithoutBookmarksNestedInput
  }

  export type bookmarksUncheckedUpdateWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    folder_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksUncheckedUpdateManyWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    folder_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geo_eventsUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geo_eventsUncheckedUpdateWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type geo_eventsUncheckedUpdateManyWithoutArticlesInput = {
    id?: StringFieldUpdateOperationsInput | string
    lat?: NullableFloatFieldUpdateOperationsInput | number | null
    lng?: NullableFloatFieldUpdateOperationsInput | number | null
    zoom_level?: NullableIntFieldUpdateOperationsInput | number | null
    label?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUpdateWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: public_usersUpdateOneWithoutLikesNestedInput
  }

  export type likesUncheckedUpdateWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUncheckedUpdateManyWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type viewsUpdateWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    users?: public_usersUpdateOneWithoutViewsNestedInput
  }

  export type viewsUncheckedUpdateWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type viewsUncheckedUpdateManyWithoutArticlesInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type article_entitiesCreateManyEntitiesInput = {
    article_id: string
  }

  export type article_entitiesUpdateWithoutEntitiesInput = {
    articles?: articlesUpdateOneRequiredWithoutArticle_entitiesNestedInput
  }

  export type article_entitiesUncheckedUpdateWithoutEntitiesInput = {
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type article_entitiesUncheckedUpdateManyWithoutEntitiesInput = {
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type bookmark_foldersCreateManyUsersInput = {
    id?: bigint | number
    name?: string | null
    is_standard?: boolean | null
    created_at?: Date | string | null
  }

  export type bookmarksCreateManyUsersInput = {
    id?: bigint | number
    article_id?: string | null
    folder_id?: bigint | number | null
    bookmarked_at?: Date | string | null
  }

  export type likesCreateManyUsersInput = {
    id?: bigint | number
    article_id?: string | null
    liked_at?: Date | string | null
  }

  export type viewsCreateManyUsersInput = {
    id?: bigint | number
    article_id?: string | null
    viewed_at?: Date | string | null
  }

  export type bookmark_foldersUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmarks?: bookmarksUpdateManyWithoutBookmark_foldersNestedInput
  }

  export type bookmark_foldersUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    bookmarks?: bookmarksUncheckedUpdateManyWithoutBookmark_foldersNestedInput
  }

  export type bookmark_foldersUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    name?: NullableStringFieldUpdateOperationsInput | string | null
    is_standard?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutBookmarksNestedInput
    bookmark_folders?: bookmark_foldersUpdateOneWithoutBookmarksNestedInput
  }

  export type bookmarksUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    folder_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    folder_id?: NullableBigIntFieldUpdateOperationsInput | bigint | number | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutLikesNestedInput
  }

  export type likesUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type likesUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    liked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type viewsUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutViewsNestedInput
  }

  export type viewsUncheckedUpdateWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type viewsUncheckedUpdateManyWithoutUsersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    viewed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksCreateManyBookmark_foldersInput = {
    id?: bigint | number
    user_id?: string | null
    article_id?: string | null
    bookmarked_at?: Date | string | null
  }

  export type bookmarksUpdateWithoutBookmark_foldersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    articles?: articlesUpdateOneWithoutBookmarksNestedInput
    users?: public_usersUpdateOneWithoutBookmarksNestedInput
  }

  export type bookmarksUncheckedUpdateWithoutBookmark_foldersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type bookmarksUncheckedUpdateManyWithoutBookmark_foldersInput = {
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    article_id?: NullableStringFieldUpdateOperationsInput | string | null
    bookmarked_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type article_tagsCreateManyTagsInput = {
    article_id: string
  }

  export type article_tagsUpdateWithoutTagsInput = {
    articles?: articlesUpdateOneRequiredWithoutArticle_tagsNestedInput
  }

  export type article_tagsUncheckedUpdateWithoutTagsInput = {
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type article_tagsUncheckedUpdateManyWithoutTagsInput = {
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type saml_relay_statesCreateManyFlow_stateInput = {
    id: string
    sso_provider_id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_relay_statesUpdateWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    sso_providers?: sso_providersUpdateOneRequiredWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutFlow_stateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sso_provider_id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type mfa_challengesCreateManyMfa_factorsInput = {
    id: string
    created_at: Date | string
    verified_at?: Date | string | null
    ip_address: string
    otp_code?: string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUpdateWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedUpdateWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_challengesUncheckedUpdateManyWithoutMfa_factorsInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    verified_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    ip_address?: StringFieldUpdateOperationsInput | string
    otp_code?: NullableStringFieldUpdateOperationsInput | string | null
    web_authn_session_data?: NullableJsonNullValueInput | InputJsonValue
  }

  export type mfa_amr_claimsCreateManySessionsInput = {
    created_at: Date | string
    updated_at: Date | string
    authentication_method: string
    id: string
  }

  export type refresh_tokensCreateManySessionsInput = {
    instance_id?: string | null
    id?: bigint | number
    token?: string | null
    user_id?: string | null
    revoked?: boolean | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    parent?: string | null
  }

  export type mfa_amr_claimsUpdateWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_amr_claimsUncheckedUpdateManyWithoutSessionsInput = {
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    authentication_method?: StringFieldUpdateOperationsInput | string
    id?: StringFieldUpdateOperationsInput | string
  }

  export type refresh_tokensUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type refresh_tokensUncheckedUpdateManyWithoutSessionsInput = {
    instance_id?: NullableStringFieldUpdateOperationsInput | string | null
    id?: BigIntFieldUpdateOperationsInput | bigint | number
    token?: NullableStringFieldUpdateOperationsInput | string | null
    user_id?: NullableStringFieldUpdateOperationsInput | string | null
    revoked?: NullableBoolFieldUpdateOperationsInput | boolean | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    parent?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersCreateManySso_providersInput = {
    id: string
    entity_id: string
    metadata_xml: string
    metadata_url?: string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string | null
    updated_at?: Date | string | null
    name_id_format?: string | null
  }

  export type saml_relay_statesCreateManySso_providersInput = {
    id: string
    request_id: string
    for_email?: string | null
    redirect_to?: string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    flow_state_id?: string | null
  }

  export type sso_domainsCreateManySso_providersInput = {
    id: string
    domain: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
  }

  export type saml_providersUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_providersUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    entity_id?: StringFieldUpdateOperationsInput | string
    metadata_xml?: StringFieldUpdateOperationsInput | string
    metadata_url?: NullableStringFieldUpdateOperationsInput | string | null
    attribute_mapping?: NullableJsonNullValueInput | InputJsonValue
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    name_id_format?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state?: flow_stateUpdateOneWithoutSaml_relay_statesNestedInput
  }

  export type saml_relay_statesUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type saml_relay_statesUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    request_id?: StringFieldUpdateOperationsInput | string
    for_email?: NullableStringFieldUpdateOperationsInput | string | null
    redirect_to?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    flow_state_id?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type sso_domainsUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type sso_domainsUncheckedUpdateManyWithoutSso_providersInput = {
    id?: StringFieldUpdateOperationsInput | string
    domain?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
  }

  export type identitiesCreateManyUsersInput = {
    provider_id: string
    identity_data: JsonNullValueInput | InputJsonValue
    provider: string
    last_sign_in_at?: Date | string | null
    created_at?: Date | string | null
    updated_at?: Date | string | null
    email?: string | null
    id?: string
  }

  export type mfa_factorsCreateManyUsersInput = {
    id: string
    friendly_name?: string | null
    factor_type: $Enums.factor_type
    status: $Enums.factor_status
    created_at: Date | string
    updated_at: Date | string
    secret?: string | null
    phone?: string | null
    last_challenged_at?: Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: string | null
  }

  export type one_time_tokensCreateManyUsersInput = {
    id: string
    token_type: $Enums.one_time_token_type
    token_hash: string
    relates_to: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type sessionsCreateManyUsersInput = {
    id: string
    created_at?: Date | string | null
    updated_at?: Date | string | null
    factor_id?: string | null
    aal?: $Enums.aal_level | null
    not_after?: Date | string | null
    refreshed_at?: Date | string | null
    user_agent?: string | null
    ip?: string | null
    tag?: string | null
  }

  export type identitiesUpdateWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type identitiesUncheckedUpdateManyWithoutUsersInput = {
    provider_id?: StringFieldUpdateOperationsInput | string
    identity_data?: JsonNullValueInput | InputJsonValue
    provider?: StringFieldUpdateOperationsInput | string
    last_sign_in_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    email?: NullableStringFieldUpdateOperationsInput | string | null
    id?: StringFieldUpdateOperationsInput | string
  }

  export type mfa_factorsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_challenges?: mfa_challengesUncheckedUpdateManyWithoutMfa_factorsNestedInput
  }

  export type mfa_factorsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    friendly_name?: NullableStringFieldUpdateOperationsInput | string | null
    factor_type?: Enumfactor_typeFieldUpdateOperationsInput | $Enums.factor_type
    status?: Enumfactor_statusFieldUpdateOperationsInput | $Enums.factor_status
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    secret?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    last_challenged_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    web_authn_credential?: NullableJsonNullValueInput | InputJsonValue
    web_authn_aaguid?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type one_time_tokensUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type one_time_tokensUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    token_type?: Enumone_time_token_typeFieldUpdateOperationsInput | $Enums.one_time_token_type
    token_hash?: StringFieldUpdateOperationsInput | string
    relates_to?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type sessionsUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
    mfa_amr_claims?: mfa_amr_claimsUncheckedUpdateManyWithoutSessionsNestedInput
    refresh_tokens?: refresh_tokensUncheckedUpdateManyWithoutSessionsNestedInput
  }

  export type sessionsUncheckedUpdateManyWithoutUsersInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    updated_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    factor_id?: NullableStringFieldUpdateOperationsInput | string | null
    aal?: NullableEnumaal_levelFieldUpdateOperationsInput | $Enums.aal_level | null
    not_after?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    refreshed_at?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    user_agent?: NullableStringFieldUpdateOperationsInput | string | null
    ip?: NullableStringFieldUpdateOperationsInput | string | null
    tag?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type book_articlesCreateManyBooksInput = {
    order: number
    added_at?: Date | string
    id?: string
    article_id: string
  }

  export type book_articlesUpdateWithoutBooksInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type book_articlesUncheckedUpdateWithoutBooksInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
  }

  export type book_articlesUncheckedUpdateManyWithoutBooksInput = {
    order?: IntFieldUpdateOperationsInput | number
    added_at?: DateTimeFieldUpdateOperationsInput | Date | string
    id?: StringFieldUpdateOperationsInput | string
    article_id?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}